
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Chat_messageScalarFieldEnum = {
  id: 'id',
  chatroom_id: 'chatroom_id',
  sender_id: 'sender_id',
  message: 'message',
  file_url: 'file_url',
  is_deleted: 'is_deleted',
  created_at: 'created_at'
};

exports.Prisma.Chat_roomScalarFieldEnum = {
  id: 'id',
  name: 'name',
  is_group: 'is_group',
  created_at: 'created_at'
};

exports.Prisma.Chat_room_userScalarFieldEnum = {
  id: 'id',
  chatroom_id: 'chatroom_id',
  user_id: 'user_id',
  left_at: 'left_at'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  content: 'content',
  parent_id: 'parent_id',
  is_anonymous: 'is_anonymous',
  is_blinded: 'is_blinded',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Comment_likeScalarFieldEnum = {
  id: 'id',
  comment_id: 'comment_id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.CommunityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  admin_id: 'admin_id',
  is_private: 'is_private',
  created_at: 'created_at'
};

exports.Prisma.EmojiScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Feed_cacheScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  post_id: 'post_id',
  score: 'score',
  created_at: 'created_at'
};

exports.Prisma.File_reportScalarFieldEnum = {
  id: 'id',
  file_id: 'file_id',
  reporter_id: 'reporter_id',
  reason: 'reason',
  created_at: 'created_at'
};

exports.Prisma.FollowScalarFieldEnum = {
  follower_id: 'follower_id',
  following_id: 'following_id',
  created_at: 'created_at'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  message: 'message',
  is_read: 'is_read',
  source_user_id: 'source_user_id',
  related_post_id: 'related_post_id',
  related_comment_id: 'related_comment_id',
  chat_message_id: 'chat_message_id',
  chat_room_id: 'chat_room_id',
  created_at: 'created_at'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  community_id: 'community_id',
  title: 'title',
  content: 'content',
  is_anonymous: 'is_anonymous',
  visibility: 'visibility',
  view_count: 'view_count',
  comment_count: 'comment_count',
  is_blinded: 'is_blinded',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Post_fileScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  file_url: 'file_url',
  file_type: 'file_type',
  is_thumbnail: 'is_thumbnail',
  uploaded_at: 'uploaded_at'
};

exports.Prisma.Post_likeScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.Post_reactionScalarFieldEnum = {
  post_id: 'post_id',
  user_id: 'user_id',
  emoji_id: 'emoji_id',
  created_at: 'created_at'
};

exports.Prisma.Post_tagScalarFieldEnum = {
  post_id: 'post_id',
  tag_id: 'tag_id'
};

exports.Prisma.Profile_visitScalarFieldEnum = {
  id: 'id',
  visitor_id: 'visitor_id',
  profile_user_id: 'profile_user_id',
  visited_at: 'visited_at'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  reporter_id: 'reporter_id',
  target_type: 'target_type',
  target_id: 'target_id',
  reason: 'reason',
  created_at: 'created_at'
};

exports.Prisma.Search_historyScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  keyword: 'keyword',
  searched_at: 'searched_at'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  email: 'email',
  name: 'name',
  nickname: 'nickname',
  profile_img: 'profile_img',
  bio: 'bio',
  gender: 'gender',
  email_verified: 'email_verified',
  status: 'status',
  website: 'website',
  location: 'location',
  birthday: 'birthday',
  oauth_provider: 'oauth_provider',
  oauth_id: 'oauth_id',
  created_at: 'created_at'
};

exports.Prisma.User_blockScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  blocked_user_id: 'blocked_user_id',
  created_at: 'created_at'
};

exports.Prisma.User_oauthScalarFieldEnum = {
  user_id: 'user_id',
  oauth_provider: 'oauth_provider',
  oauth_id: 'oauth_id'
};

exports.Prisma.User_profileScalarFieldEnum = {
  user_id: 'user_id',
  name: 'name',
  profile_img: 'profile_img',
  bio: 'bio',
  gender: 'gender',
  website: 'website',
  location: 'location',
  birthday: 'birthday'
};

exports.Prisma.User_securityScalarFieldEnum = {
  user_id: 'user_id',
  email_verified: 'email_verified',
  last_login_at: 'last_login_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.chat_messageOrderByRelevanceFieldEnum = {
  message: 'message',
  file_url: 'file_url'
};

exports.Prisma.chat_roomOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.commentOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.communityOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.emojiOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.file_reportOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.notificationOrderByRelevanceFieldEnum = {
  type: 'type',
  message: 'message'
};

exports.Prisma.postOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content'
};

exports.Prisma.post_fileOrderByRelevanceFieldEnum = {
  file_url: 'file_url',
  file_type: 'file_type'
};

exports.Prisma.reportOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.search_historyOrderByRelevanceFieldEnum = {
  keyword: 'keyword'
};

exports.Prisma.tagOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  username: 'username',
  password: 'password',
  email: 'email',
  name: 'name',
  nickname: 'nickname',
  profile_img: 'profile_img',
  bio: 'bio',
  gender: 'gender',
  website: 'website',
  location: 'location',
  oauth_provider: 'oauth_provider',
  oauth_id: 'oauth_id'
};

exports.Prisma.user_oauthOrderByRelevanceFieldEnum = {
  oauth_provider: 'oauth_provider',
  oauth_id: 'oauth_id'
};

exports.Prisma.user_profileOrderByRelevanceFieldEnum = {
  name: 'name',
  profile_img: 'profile_img',
  bio: 'bio',
  gender: 'gender',
  website: 'website',
  location: 'location'
};
exports.report_target_type = exports.$Enums.report_target_type = {
  user: 'user',
  post: 'post',
  comment: 'comment',
  file: 'file',
  chat_message: 'chat_message',
  community: 'community'
};

exports.post_visibility = exports.$Enums.post_visibility = {
  public: 'public',
  followers: 'followers',
  private: 'private'
};

exports.user_status = exports.$Enums.user_status = {
  active: 'active',
  inactive: 'inactive',
  suspended: 'suspended',
  deleted: 'deleted'
};

exports.Prisma.ModelName = {
  chat_message: 'chat_message',
  chat_room: 'chat_room',
  chat_room_user: 'chat_room_user',
  comment: 'comment',
  comment_like: 'comment_like',
  community: 'community',
  emoji: 'emoji',
  feed_cache: 'feed_cache',
  file_report: 'file_report',
  follow: 'follow',
  notification: 'notification',
  post: 'post',
  post_file: 'post_file',
  post_like: 'post_like',
  post_reaction: 'post_reaction',
  post_tag: 'post_tag',
  profile_visit: 'profile_visit',
  report: 'report',
  search_history: 'search_history',
  tag: 'tag',
  user: 'user',
  user_block: 'user_block',
  user_oauth: 'user_oauth',
  user_profile: 'user_profile',
  user_security: 'user_security'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\In-Jae\\dssn-api\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\In-Jae\\dssn-api\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel chat_message {\n  id           Int            @id @default(autoincrement())\n  chatroom_id  Int\n  sender_id    Int\n  message      String?        @db.MediumText\n  file_url     String?        @db.VarChar(512)\n  is_deleted   Boolean        @default(false)\n  created_at   DateTime       @default(now()) @db.DateTime(0)\n  chat_room    chat_room      @relation(fields: [chatroom_id], references: [id], onDelete: Cascade, map: \"fk_cmsg_room\")\n  user         user           @relation(fields: [sender_id], references: [id], onDelete: Cascade, map: \"fk_cmsg_sender\")\n  notification notification[]\n\n  @@index([chatroom_id, created_at], map: \"idx_cmsg_room_created\")\n  @@index([sender_id], map: \"idx_cmsg_sender\")\n}\n\nmodel chat_room {\n  id             Int              @id @default(autoincrement())\n  name           String?\n  is_group       Boolean?\n  created_at     DateTime         @default(now()) @db.DateTime(0)\n  chat_message   chat_message[]\n  chat_room_user chat_room_user[]\n  notification   notification[]\n}\n\nmodel chat_room_user {\n  id          Int       @id @default(autoincrement())\n  chatroom_id Int\n  user_id     Int\n  left_at     DateTime? @db.DateTime(0)\n  chat_room   chat_room @relation(fields: [chatroom_id], references: [id], onDelete: Cascade, map: \"fk_croomuser_room\")\n  user        user      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_croomuser_user\")\n\n  @@unique([chatroom_id, user_id], map: \"uq_chatroom_user\")\n  @@index([user_id], map: \"idx_croomuser_user\")\n}\n\nmodel comment {\n  id            Int            @id @default(autoincrement())\n  post_id       Int\n  user_id       Int\n  content       String?        @db.MediumText\n  parent_id     Int?\n  is_anonymous  Boolean        @default(false)\n  is_blinded    Boolean        @default(false)\n  is_deleted    Boolean        @default(false)\n  created_at    DateTime       @default(now()) @db.DateTime(0)\n  updated_at    DateTime?      @db.DateTime(0)\n  comment       comment?       @relation(\"commentTocomment\", fields: [parent_id], references: [id], map: \"fk_comment_parent\")\n  other_comment comment[]      @relation(\"commentTocomment\")\n  post          post           @relation(fields: [post_id], references: [id], onDelete: Cascade, map: \"fk_comment_post\")\n  user          user           @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_comment_user\")\n  comment_like  comment_like[]\n  notification  notification[]\n\n  @@index([parent_id], map: \"idx_comment_parent\")\n  @@index([post_id, created_at], map: \"idx_comment_post_created\")\n  @@index([user_id, created_at], map: \"idx_comment_user_created\")\n}\n\nmodel comment_like {\n  id         Int      @id @default(autoincrement())\n  comment_id Int\n  user_id    Int\n  created_at DateTime @default(now()) @db.DateTime(0)\n  comment    comment  @relation(fields: [comment_id], references: [id], onDelete: Cascade, map: \"fk_commentlike_comment\")\n  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_commentlike_user\")\n\n  @@unique([comment_id, user_id], map: \"unique_comment_like\")\n  @@index([user_id], map: \"idx_commentlike_user\")\n}\n\nmodel community {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique(map: \"name\")\n  description String?  @db.VarChar(512)\n  admin_id    Int?\n  is_private  Boolean  @default(false)\n  created_at  DateTime @default(now()) @db.DateTime(0)\n  user        user?    @relation(fields: [admin_id], references: [id], map: \"fk_community_admin\")\n  post        post[]\n\n  @@index([admin_id], map: \"fk_community_admin\")\n}\n\nmodel emoji {\n  id            Int             @id @default(autoincrement())\n  name          String          @unique(map: \"name\")\n  post_reaction post_reaction[]\n}\n\nmodel feed_cache {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  post_id    Int\n  score      Float    @db.Float\n  created_at DateTime @default(now()) @db.DateTime(0)\n  post       post     @relation(fields: [post_id], references: [id], onDelete: Cascade, map: \"fk_fc_post\")\n  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_fc_user\")\n\n  @@index([post_id], map: \"idx_fc_post\")\n  @@index([user_id, score, created_at], map: \"idx_fc_user_score_time\")\n}\n\nmodel file_report {\n  id          Int       @id @default(autoincrement())\n  file_id     Int\n  reporter_id Int\n  reason      String?   @db.VarChar(512)\n  created_at  DateTime  @default(now()) @db.DateTime(0)\n  post_file   post_file @relation(fields: [file_id], references: [id], onDelete: Cascade, map: \"fk_freport_file\")\n  user        user      @relation(fields: [reporter_id], references: [id], onDelete: Cascade, map: \"fk_freport_reporter\")\n\n  @@index([file_id], map: \"idx_freport_file\")\n  @@index([reporter_id], map: \"idx_freport_reporter\")\n}\n\nmodel follow {\n  follower_id                    Int\n  following_id                   Int\n  created_at                     DateTime @default(now()) @db.DateTime(0)\n  user_follow_follower_idTouser  user     @relation(\"follow_follower_idTouser\", fields: [follower_id], references: [id], onDelete: Cascade, map: \"fk_follow_follower\")\n  user_follow_following_idTouser user     @relation(\"follow_following_idTouser\", fields: [following_id], references: [id], onDelete: Cascade, map: \"fk_follow_following\")\n\n  @@id([follower_id, following_id])\n  @@index([following_id], map: \"idx_follow_following\")\n}\n\nmodel notification {\n  id                                     Int           @id @default(autoincrement())\n  user_id                                Int\n  type                                   String        @db.VarChar(100)\n  message                                String?       @db.VarChar(512)\n  is_read                                Boolean       @default(false)\n  source_user_id                         Int?\n  related_post_id                        Int?\n  related_comment_id                     Int?\n  chat_message_id                        Int?\n  chat_room_id                           Int?\n  created_at                             DateTime      @default(now()) @db.DateTime(0)\n  chat_message                           chat_message? @relation(fields: [chat_message_id], references: [id], map: \"fk_notif_chatmsg\")\n  chat_room                              chat_room?    @relation(fields: [chat_room_id], references: [id], map: \"fk_notif_chatroom\")\n  comment                                comment?      @relation(fields: [related_comment_id], references: [id], map: \"fk_notif_comment\")\n  post                                   post?         @relation(fields: [related_post_id], references: [id], map: \"fk_notif_post\")\n  user_notification_source_user_idTouser user?         @relation(\"notification_source_user_idTouser\", fields: [source_user_id], references: [id], map: \"fk_notif_source_user\")\n  user_notification_user_idTouser        user          @relation(\"notification_user_idTouser\", fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_notif_user\")\n\n  @@index([chat_message_id], map: \"idx_notif_chatmsg\")\n  @@index([chat_room_id], map: \"idx_notif_chatroom\")\n  @@index([related_comment_id], map: \"idx_notif_comment\")\n  @@index([related_post_id], map: \"idx_notif_post\")\n  @@index([source_user_id], map: \"idx_notif_source_user\")\n  @@index([user_id, is_read, created_at], map: \"idx_notif_user_read_created\")\n}\n\nmodel post {\n  id            Int             @id @default(autoincrement())\n  user_id       Int\n  community_id  Int\n  title         String?         @db.VarChar(255)\n  content       String?         @db.MediumText\n  is_anonymous  Boolean         @default(false)\n  visibility    post_visibility @default(public)\n  view_count    Int             @default(0)\n  comment_count Int             @default(0)\n  is_blinded    Boolean         @default(false)\n  is_deleted    Boolean         @default(false)\n  created_at    DateTime        @default(now()) @db.DateTime(0)\n  updated_at    DateTime?       @db.DateTime(0)\n  comment       comment[]\n  feed_cache    feed_cache[]\n  notification  notification[]\n  community     community       @relation(fields: [community_id], references: [id], onDelete: Cascade, map: \"fk_post_community\")\n  user          user            @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_post_user\")\n  post_file     post_file[]\n  post_like     post_like[]\n  post_reaction post_reaction[]\n  post_tag      post_tag[]\n\n  @@index([community_id, created_at], map: \"idx_post_community_created\")\n  @@index([user_id, created_at], map: \"idx_post_user_created\")\n}\n\nmodel post_file {\n  id           Int           @id @default(autoincrement())\n  post_id      Int\n  file_url     String?       @db.VarChar(512)\n  file_type    String?       @db.VarChar(100)\n  is_thumbnail Boolean       @default(false)\n  uploaded_at  DateTime      @default(now()) @db.DateTime(0)\n  file_report  file_report[]\n  post         post          @relation(fields: [post_id], references: [id], onDelete: Cascade, map: \"fk_postfile_post\")\n\n  @@index([post_id], map: \"idx_postfile_post\")\n}\n\nmodel post_like {\n  id         Int      @id @default(autoincrement())\n  post_id    Int\n  user_id    Int\n  created_at DateTime @default(now()) @db.DateTime(0)\n  post       post     @relation(fields: [post_id], references: [id], onDelete: Cascade, map: \"fk_postlike_post\")\n  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_postlike_user\")\n\n  @@unique([post_id, user_id], map: \"unique_post_like\")\n  @@index([user_id], map: \"idx_postlike_user\")\n}\n\nmodel post_reaction {\n  post_id    Int\n  user_id    Int\n  emoji_id   Int\n  created_at DateTime @default(now()) @db.DateTime(0)\n  emoji      emoji    @relation(fields: [emoji_id], references: [id], onDelete: Cascade, map: \"fk_preaction_emoji\")\n  post       post     @relation(fields: [post_id], references: [id], onDelete: Cascade, map: \"fk_preaction_post\")\n  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_preaction_user\")\n\n  @@id([post_id, user_id, emoji_id])\n  @@index([emoji_id], map: \"idx_preaction_emoji\")\n  @@index([user_id], map: \"idx_preaction_user\")\n}\n\nmodel post_tag {\n  post_id Int\n  tag_id  Int\n  post    post @relation(fields: [post_id], references: [id], onDelete: Cascade, map: \"fk_posttag_post\")\n  tag     tag  @relation(fields: [tag_id], references: [id], onDelete: Cascade, map: \"fk_posttag_tag\")\n\n  @@id([post_id, tag_id])\n  @@index([tag_id], map: \"idx_posttag_tag\")\n}\n\nmodel profile_visit {\n  id                                       Int      @id @default(autoincrement())\n  visitor_id                               Int\n  profile_user_id                          Int\n  visited_at                               DateTime @default(now()) @db.DateTime(0)\n  user_profile_visit_profile_user_idTouser user     @relation(\"profile_visit_profile_user_idTouser\", fields: [profile_user_id], references: [id], onDelete: Cascade, map: \"fk_pv_visited\")\n  user_profile_visit_visitor_idTouser      user     @relation(\"profile_visit_visitor_idTouser\", fields: [visitor_id], references: [id], onDelete: Cascade, map: \"fk_pv_visitor\")\n\n  @@index([visitor_id], map: \"fk_pv_visitor\")\n  @@index([profile_user_id, visited_at], map: \"idx_pv_profile_time\")\n}\n\nmodel report {\n  id          Int                @id @default(autoincrement())\n  reporter_id Int\n  target_type report_target_type\n  target_id   Int\n  reason      String?            @db.VarChar(512)\n  created_at  DateTime           @default(now()) @db.DateTime(0)\n  user        user               @relation(fields: [reporter_id], references: [id], onDelete: Cascade, map: \"fk_report_reporter\")\n\n  @@index([reporter_id], map: \"fk_report_reporter\")\n  @@index([target_type, target_id], map: \"idx_report_target\")\n}\n\nmodel search_history {\n  id          Int      @id @default(autoincrement())\n  user_id     Int\n  keyword     String   @db.VarChar(255)\n  searched_at DateTime @default(now()) @db.DateTime(0)\n  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_sh_user\")\n\n  @@index([user_id, searched_at], map: \"idx_sh_user_time\")\n}\n\nmodel tag {\n  id       Int        @id @default(autoincrement())\n  name     String     @unique(map: \"name\")\n  post_tag post_tag[]\n}\n\nmodel user {\n  id                                                Int              @id @default(autoincrement())\n  username                                          String           @unique(map: \"username\")\n  password                                          String\n  email                                             String           @unique(map: \"email\")\n  name                                              String?\n  nickname                                          String?          @unique(map: \"nickname\")\n  profile_img                                       String?          @db.VarChar(512)\n  bio                                               String?          @db.Text\n  gender                                            String?          @db.VarChar(50)\n  email_verified                                    Boolean          @default(false)\n  status                                            user_status      @default(active)\n  website                                           String?          @db.VarChar(255)\n  location                                          String?          @db.VarChar(255)\n  birthday                                          DateTime?        @db.Date\n  oauth_provider                                    String?          @db.VarChar(100)\n  oauth_id                                          String?\n  created_at                                        DateTime         @default(now()) @db.DateTime(0)\n  chat_message                                      chat_message[]\n  chat_room_user                                    chat_room_user[]\n  comment                                           comment[]\n  comment_like                                      comment_like[]\n  community                                         community[]\n  feed_cache                                        feed_cache[]\n  file_report                                       file_report[]\n  follow_follow_follower_idTouser                   follow[]         @relation(\"follow_follower_idTouser\")\n  follow_follow_following_idTouser                  follow[]         @relation(\"follow_following_idTouser\")\n  notification_notification_source_user_idTouser    notification[]   @relation(\"notification_source_user_idTouser\")\n  notification_notification_user_idTouser           notification[]   @relation(\"notification_user_idTouser\")\n  post                                              post[]\n  post_like                                         post_like[]\n  post_reaction                                     post_reaction[]\n  profile_visit_profile_visit_profile_user_idTouser profile_visit[]  @relation(\"profile_visit_profile_user_idTouser\")\n  profile_visit_profile_visit_visitor_idTouser      profile_visit[]  @relation(\"profile_visit_visitor_idTouser\")\n  report                                            report[]\n  search_history                                    search_history[]\n  user_block_user_block_blocked_user_idTouser       user_block[]     @relation(\"user_block_blocked_user_idTouser\")\n  user_block_user_block_user_idTouser               user_block[]     @relation(\"user_block_user_idTouser\")\n  user_oauth                                        user_oauth?\n  user_profile                                      user_profile?\n  user_security                                     user_security?\n}\n\nmodel user_block {\n  id                                    Int      @id @default(autoincrement())\n  user_id                               Int\n  blocked_user_id                       Int\n  created_at                            DateTime @default(now()) @db.DateTime(0)\n  user_user_block_blocked_user_idTouser user     @relation(\"user_block_blocked_user_idTouser\", fields: [blocked_user_id], references: [id], onDelete: Cascade, map: \"fk_ub_blocked\")\n  user_user_block_user_idTouser         user     @relation(\"user_block_user_idTouser\", fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_ub_blocker\")\n\n  @@unique([user_id, blocked_user_id], map: \"unique_block\")\n  @@index([blocked_user_id], map: \"idx_ub_blocked\")\n}\n\nmodel user_oauth {\n  user_id        Int     @id\n  oauth_provider String? @db.VarChar(100)\n  oauth_id       String?\n  user           user    @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_user_oauth_user\")\n}\n\nmodel user_profile {\n  user_id     Int       @id\n  name        String\n  profile_img String?   @db.VarChar(512)\n  bio         String?   @db.Text\n  gender      String?   @db.VarChar(50)\n  website     String?   @db.VarChar(255)\n  location    String?   @db.VarChar(255)\n  birthday    DateTime? @db.Date\n  user        user      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_user_profile_user\")\n}\n\nmodel user_security {\n  user_id        Int       @id\n  email_verified Boolean   @default(false)\n  last_login_at  DateTime? @db.DateTime(0)\n  user           user      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_user_security_user\")\n}\n\nenum report_target_type {\n  user\n  post\n  comment\n  file\n  chat_message\n  community\n}\n\nenum post_visibility {\n  public\n  followers\n  private\n}\n\nenum user_status {\n  active\n  inactive\n  suspended\n  deleted\n}\n",
  "inlineSchemaHash": "c828567257a3afdffafd052a2c60a03f926ff3f9e8dfe9ebfaf18ab4326a0b73",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"chat_message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatroom_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat_room\",\"kind\":\"object\",\"type\":\"chat_room\",\"relationName\":\"chat_messageTochat_room\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"chat_messageTouser\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"chat_messageTonotification\"}],\"dbName\":null},\"chat_room\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_group\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat_message\",\"kind\":\"object\",\"type\":\"chat_message\",\"relationName\":\"chat_messageTochat_room\"},{\"name\":\"chat_room_user\",\"kind\":\"object\",\"type\":\"chat_room_user\",\"relationName\":\"chat_roomTochat_room_user\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"chat_roomTonotification\"}],\"dbName\":null},\"chat_room_user\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatroom_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"left_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat_room\",\"kind\":\"object\",\"type\":\"chat_room\",\"relationName\":\"chat_roomTochat_room_user\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"chat_room_userTouser\"}],\"dbName\":null},\"comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_anonymous\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_blinded\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"comment\",\"relationName\":\"commentTocomment\"},{\"name\":\"other_comment\",\"kind\":\"object\",\"type\":\"comment\",\"relationName\":\"commentTocomment\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"post\",\"relationName\":\"commentTopost\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"commentTouser\"},{\"name\":\"comment_like\",\"kind\":\"object\",\"type\":\"comment_like\",\"relationName\":\"commentTocomment_like\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"commentTonotification\"}],\"dbName\":null},\"comment_like\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"comment\",\"relationName\":\"commentTocomment_like\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"comment_likeTouser\"}],\"dbName\":null},\"community\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_private\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"communityTouser\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"post\",\"relationName\":\"communityTopost\"}],\"dbName\":null},\"emoji\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post_reaction\",\"kind\":\"object\",\"type\":\"post_reaction\",\"relationName\":\"emojiTopost_reaction\"}],\"dbName\":null},\"feed_cache\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"post\",\"relationName\":\"feed_cacheTopost\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"feed_cacheTouser\"}],\"dbName\":null},\"file_report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"file_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reporter_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post_file\",\"kind\":\"object\",\"type\":\"post_file\",\"relationName\":\"file_reportTopost_file\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"file_reportTouser\"}],\"dbName\":null},\"follow\":{\"fields\":[{\"name\":\"follower_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"following_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_follow_follower_idTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"follow_follower_idTouser\"},{\"name\":\"user_follow_following_idTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"follow_following_idTouser\"}],\"dbName\":null},\"notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"source_user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"related_post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"related_comment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chat_message_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chat_room_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat_message\",\"kind\":\"object\",\"type\":\"chat_message\",\"relationName\":\"chat_messageTonotification\"},{\"name\":\"chat_room\",\"kind\":\"object\",\"type\":\"chat_room\",\"relationName\":\"chat_roomTonotification\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"comment\",\"relationName\":\"commentTonotification\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"post\",\"relationName\":\"notificationTopost\"},{\"name\":\"user_notification_source_user_idTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"notification_source_user_idTouser\"},{\"name\":\"user_notification_user_idTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"notification_user_idTouser\"}],\"dbName\":null},\"post\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"community_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_anonymous\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"post_visibility\"},{\"name\":\"view_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_blinded\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"comment\",\"relationName\":\"commentTopost\"},{\"name\":\"feed_cache\",\"kind\":\"object\",\"type\":\"feed_cache\",\"relationName\":\"feed_cacheTopost\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"notificationTopost\"},{\"name\":\"community\",\"kind\":\"object\",\"type\":\"community\",\"relationName\":\"communityTopost\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"postTouser\"},{\"name\":\"post_file\",\"kind\":\"object\",\"type\":\"post_file\",\"relationName\":\"postTopost_file\"},{\"name\":\"post_like\",\"kind\":\"object\",\"type\":\"post_like\",\"relationName\":\"postTopost_like\"},{\"name\":\"post_reaction\",\"kind\":\"object\",\"type\":\"post_reaction\",\"relationName\":\"postTopost_reaction\"},{\"name\":\"post_tag\",\"kind\":\"object\",\"type\":\"post_tag\",\"relationName\":\"postTopost_tag\"}],\"dbName\":null},\"post_file\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"file_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_thumbnail\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"uploaded_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"file_report\",\"kind\":\"object\",\"type\":\"file_report\",\"relationName\":\"file_reportTopost_file\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"post\",\"relationName\":\"postTopost_file\"}],\"dbName\":null},\"post_like\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"post\",\"relationName\":\"postTopost_like\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"post_likeTouser\"}],\"dbName\":null},\"post_reaction\":{\"fields\":[{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emoji_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emoji\",\"kind\":\"object\",\"type\":\"emoji\",\"relationName\":\"emojiTopost_reaction\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"post\",\"relationName\":\"postTopost_reaction\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"post_reactionTouser\"}],\"dbName\":null},\"post_tag\":{\"fields\":[{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tag_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"post\",\"relationName\":\"postTopost_tag\"},{\"name\":\"tag\",\"kind\":\"object\",\"type\":\"tag\",\"relationName\":\"post_tagTotag\"}],\"dbName\":null},\"profile_visit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"visitor_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profile_user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"visited_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_profile_visit_profile_user_idTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"profile_visit_profile_user_idTouser\"},{\"name\":\"user_profile_visit_visitor_idTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"profile_visit_visitor_idTouser\"}],\"dbName\":null},\"report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reporter_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"target_type\",\"kind\":\"enum\",\"type\":\"report_target_type\"},{\"name\":\"target_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"reportTouser\"}],\"dbName\":null},\"search_history\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keyword\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"searched_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"search_historyTouser\"}],\"dbName\":null},\"tag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post_tag\",\"kind\":\"object\",\"type\":\"post_tag\",\"relationName\":\"post_tagTotag\"}],\"dbName\":null},\"user\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nickname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_img\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"user_status\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthday\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"oauth_provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oauth_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat_message\",\"kind\":\"object\",\"type\":\"chat_message\",\"relationName\":\"chat_messageTouser\"},{\"name\":\"chat_room_user\",\"kind\":\"object\",\"type\":\"chat_room_user\",\"relationName\":\"chat_room_userTouser\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"comment\",\"relationName\":\"commentTouser\"},{\"name\":\"comment_like\",\"kind\":\"object\",\"type\":\"comment_like\",\"relationName\":\"comment_likeTouser\"},{\"name\":\"community\",\"kind\":\"object\",\"type\":\"community\",\"relationName\":\"communityTouser\"},{\"name\":\"feed_cache\",\"kind\":\"object\",\"type\":\"feed_cache\",\"relationName\":\"feed_cacheTouser\"},{\"name\":\"file_report\",\"kind\":\"object\",\"type\":\"file_report\",\"relationName\":\"file_reportTouser\"},{\"name\":\"follow_follow_follower_idTouser\",\"kind\":\"object\",\"type\":\"follow\",\"relationName\":\"follow_follower_idTouser\"},{\"name\":\"follow_follow_following_idTouser\",\"kind\":\"object\",\"type\":\"follow\",\"relationName\":\"follow_following_idTouser\"},{\"name\":\"notification_notification_source_user_idTouser\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"notification_source_user_idTouser\"},{\"name\":\"notification_notification_user_idTouser\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"notification_user_idTouser\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"post\",\"relationName\":\"postTouser\"},{\"name\":\"post_like\",\"kind\":\"object\",\"type\":\"post_like\",\"relationName\":\"post_likeTouser\"},{\"name\":\"post_reaction\",\"kind\":\"object\",\"type\":\"post_reaction\",\"relationName\":\"post_reactionTouser\"},{\"name\":\"profile_visit_profile_visit_profile_user_idTouser\",\"kind\":\"object\",\"type\":\"profile_visit\",\"relationName\":\"profile_visit_profile_user_idTouser\"},{\"name\":\"profile_visit_profile_visit_visitor_idTouser\",\"kind\":\"object\",\"type\":\"profile_visit\",\"relationName\":\"profile_visit_visitor_idTouser\"},{\"name\":\"report\",\"kind\":\"object\",\"type\":\"report\",\"relationName\":\"reportTouser\"},{\"name\":\"search_history\",\"kind\":\"object\",\"type\":\"search_history\",\"relationName\":\"search_historyTouser\"},{\"name\":\"user_block_user_block_blocked_user_idTouser\",\"kind\":\"object\",\"type\":\"user_block\",\"relationName\":\"user_block_blocked_user_idTouser\"},{\"name\":\"user_block_user_block_user_idTouser\",\"kind\":\"object\",\"type\":\"user_block\",\"relationName\":\"user_block_user_idTouser\"},{\"name\":\"user_oauth\",\"kind\":\"object\",\"type\":\"user_oauth\",\"relationName\":\"userTouser_oauth\"},{\"name\":\"user_profile\",\"kind\":\"object\",\"type\":\"user_profile\",\"relationName\":\"userTouser_profile\"},{\"name\":\"user_security\",\"kind\":\"object\",\"type\":\"user_security\",\"relationName\":\"userTouser_security\"}],\"dbName\":null},\"user_block\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blocked_user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_user_block_blocked_user_idTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"user_block_blocked_user_idTouser\"},{\"name\":\"user_user_block_user_idTouser\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"user_block_user_idTouser\"}],\"dbName\":null},\"user_oauth\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"oauth_provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oauth_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouser_oauth\"}],\"dbName\":null},\"user_profile\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_img\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthday\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouser_profile\"}],\"dbName\":null},\"user_security\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"last_login_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouser_security\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

