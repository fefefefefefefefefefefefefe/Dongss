
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Chat_messageScalarFieldEnum = {
  id: 'id',
  chatroom_id: 'chatroom_id',
  sender_id: 'sender_id',
  message: 'message',
  file_url: 'file_url',
  is_deleted: 'is_deleted',
  created_at: 'created_at'
};

exports.Prisma.Chat_roomScalarFieldEnum = {
  id: 'id',
  name: 'name',
  is_group: 'is_group',
  created_at: 'created_at'
};

exports.Prisma.Chat_room_userScalarFieldEnum = {
  id: 'id',
  chatroom_id: 'chatroom_id',
  user_id: 'user_id',
  left_at: 'left_at'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  content: 'content',
  parent_id: 'parent_id',
  is_anonymous: 'is_anonymous',
  is_blinded: 'is_blinded',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Comment_likeScalarFieldEnum = {
  id: 'id',
  comment_id: 'comment_id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.CommunityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  admin_id: 'admin_id',
  is_private: 'is_private',
  created_at: 'created_at'
};

exports.Prisma.EmojiScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Feed_cacheScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  post_id: 'post_id',
  score: 'score',
  created_at: 'created_at'
};

exports.Prisma.File_reportScalarFieldEnum = {
  id: 'id',
  file_id: 'file_id',
  reporter_id: 'reporter_id',
  reason: 'reason',
  created_at: 'created_at'
};

exports.Prisma.FollowScalarFieldEnum = {
  follower_id: 'follower_id',
  following_id: 'following_id',
  created_at: 'created_at'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  message: 'message',
  is_read: 'is_read',
  source_user_id: 'source_user_id',
  related_post_id: 'related_post_id',
  related_comment_id: 'related_comment_id',
  chat_message_id: 'chat_message_id',
  chat_room_id: 'chat_room_id',
  created_at: 'created_at'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  community_id: 'community_id',
  title: 'title',
  content: 'content',
  is_anonymous: 'is_anonymous',
  visibility: 'visibility',
  view_count: 'view_count',
  comment_count: 'comment_count',
  is_blinded: 'is_blinded',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Post_fileScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  file_url: 'file_url',
  file_type: 'file_type',
  is_thumbnail: 'is_thumbnail',
  uploaded_at: 'uploaded_at'
};

exports.Prisma.Post_likeScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.Post_reactionScalarFieldEnum = {
  post_id: 'post_id',
  user_id: 'user_id',
  emoji_id: 'emoji_id',
  created_at: 'created_at'
};

exports.Prisma.Post_tagScalarFieldEnum = {
  post_id: 'post_id',
  tag_id: 'tag_id'
};

exports.Prisma.Profile_visitScalarFieldEnum = {
  id: 'id',
  visitor_id: 'visitor_id',
  profile_user_id: 'profile_user_id',
  visited_at: 'visited_at'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  reporter_id: 'reporter_id',
  target_type: 'target_type',
  target_id: 'target_id',
  reason: 'reason',
  created_at: 'created_at'
};

exports.Prisma.Search_historyScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  keyword: 'keyword',
  searched_at: 'searched_at'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  email: 'email',
  name: 'name',
  nickname: 'nickname',
  profile_img: 'profile_img',
  bio: 'bio',
  gender: 'gender',
  email_verified: 'email_verified',
  status: 'status',
  website: 'website',
  location: 'location',
  birthday: 'birthday',
  oauth_provider: 'oauth_provider',
  oauth_id: 'oauth_id',
  created_at: 'created_at'
};

exports.Prisma.User_blockScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  blocked_user_id: 'blocked_user_id',
  created_at: 'created_at'
};

exports.Prisma.User_oauthScalarFieldEnum = {
  user_id: 'user_id',
  oauth_provider: 'oauth_provider',
  oauth_id: 'oauth_id'
};

exports.Prisma.User_profileScalarFieldEnum = {
  user_id: 'user_id',
  name: 'name',
  profile_img: 'profile_img',
  bio: 'bio',
  gender: 'gender',
  website: 'website',
  location: 'location',
  birthday: 'birthday'
};

exports.Prisma.User_securityScalarFieldEnum = {
  user_id: 'user_id',
  email_verified: 'email_verified',
  last_login_at: 'last_login_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.chat_messageOrderByRelevanceFieldEnum = {
  message: 'message',
  file_url: 'file_url'
};

exports.Prisma.chat_roomOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.commentOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.communityOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.emojiOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.file_reportOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.notificationOrderByRelevanceFieldEnum = {
  type: 'type',
  message: 'message'
};

exports.Prisma.postOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content'
};

exports.Prisma.post_fileOrderByRelevanceFieldEnum = {
  file_url: 'file_url',
  file_type: 'file_type'
};

exports.Prisma.reportOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.search_historyOrderByRelevanceFieldEnum = {
  keyword: 'keyword'
};

exports.Prisma.tagOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  username: 'username',
  password: 'password',
  email: 'email',
  name: 'name',
  nickname: 'nickname',
  profile_img: 'profile_img',
  bio: 'bio',
  gender: 'gender',
  website: 'website',
  location: 'location',
  oauth_provider: 'oauth_provider',
  oauth_id: 'oauth_id'
};

exports.Prisma.user_oauthOrderByRelevanceFieldEnum = {
  oauth_provider: 'oauth_provider',
  oauth_id: 'oauth_id'
};

exports.Prisma.user_profileOrderByRelevanceFieldEnum = {
  name: 'name',
  profile_img: 'profile_img',
  bio: 'bio',
  gender: 'gender',
  website: 'website',
  location: 'location'
};
exports.post_visibility = exports.$Enums.post_visibility = {
  public: 'public',
  followers: 'followers',
  private: 'private'
};

exports.report_target_type = exports.$Enums.report_target_type = {
  user: 'user',
  post: 'post',
  comment: 'comment',
  file: 'file',
  chat_message: 'chat_message',
  community: 'community'
};

exports.user_status = exports.$Enums.user_status = {
  active: 'active',
  inactive: 'inactive',
  suspended: 'suspended',
  deleted: 'deleted'
};

exports.Prisma.ModelName = {
  chat_message: 'chat_message',
  chat_room: 'chat_room',
  chat_room_user: 'chat_room_user',
  comment: 'comment',
  comment_like: 'comment_like',
  community: 'community',
  emoji: 'emoji',
  feed_cache: 'feed_cache',
  file_report: 'file_report',
  follow: 'follow',
  notification: 'notification',
  post: 'post',
  post_file: 'post_file',
  post_like: 'post_like',
  post_reaction: 'post_reaction',
  post_tag: 'post_tag',
  profile_visit: 'profile_visit',
  report: 'report',
  search_history: 'search_history',
  tag: 'tag',
  user: 'user',
  user_block: 'user_block',
  user_oauth: 'user_oauth',
  user_profile: 'user_profile',
  user_security: 'user_security'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
