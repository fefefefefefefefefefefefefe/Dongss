
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model chat_message
 * 
 */
export type chat_message = $Result.DefaultSelection<Prisma.$chat_messagePayload>
/**
 * Model chat_room
 * 
 */
export type chat_room = $Result.DefaultSelection<Prisma.$chat_roomPayload>
/**
 * Model chat_room_user
 * 
 */
export type chat_room_user = $Result.DefaultSelection<Prisma.$chat_room_userPayload>
/**
 * Model comment
 * 
 */
export type comment = $Result.DefaultSelection<Prisma.$commentPayload>
/**
 * Model comment_like
 * 
 */
export type comment_like = $Result.DefaultSelection<Prisma.$comment_likePayload>
/**
 * Model community
 * 
 */
export type community = $Result.DefaultSelection<Prisma.$communityPayload>
/**
 * Model emoji
 * 
 */
export type emoji = $Result.DefaultSelection<Prisma.$emojiPayload>
/**
 * Model feed_cache
 * 
 */
export type feed_cache = $Result.DefaultSelection<Prisma.$feed_cachePayload>
/**
 * Model file_report
 * 
 */
export type file_report = $Result.DefaultSelection<Prisma.$file_reportPayload>
/**
 * Model follow
 * 
 */
export type follow = $Result.DefaultSelection<Prisma.$followPayload>
/**
 * Model notification
 * 
 */
export type notification = $Result.DefaultSelection<Prisma.$notificationPayload>
/**
 * Model post
 * 
 */
export type post = $Result.DefaultSelection<Prisma.$postPayload>
/**
 * Model post_file
 * 
 */
export type post_file = $Result.DefaultSelection<Prisma.$post_filePayload>
/**
 * Model post_like
 * 
 */
export type post_like = $Result.DefaultSelection<Prisma.$post_likePayload>
/**
 * Model post_reaction
 * 
 */
export type post_reaction = $Result.DefaultSelection<Prisma.$post_reactionPayload>
/**
 * Model post_tag
 * 
 */
export type post_tag = $Result.DefaultSelection<Prisma.$post_tagPayload>
/**
 * Model profile_visit
 * 
 */
export type profile_visit = $Result.DefaultSelection<Prisma.$profile_visitPayload>
/**
 * Model report
 * 
 */
export type report = $Result.DefaultSelection<Prisma.$reportPayload>
/**
 * Model search_history
 * 
 */
export type search_history = $Result.DefaultSelection<Prisma.$search_historyPayload>
/**
 * Model tag
 * 
 */
export type tag = $Result.DefaultSelection<Prisma.$tagPayload>
/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>
/**
 * Model user_block
 * 
 */
export type user_block = $Result.DefaultSelection<Prisma.$user_blockPayload>
/**
 * Model user_oauth
 * 
 */
export type user_oauth = $Result.DefaultSelection<Prisma.$user_oauthPayload>
/**
 * Model user_profile
 * 
 */
export type user_profile = $Result.DefaultSelection<Prisma.$user_profilePayload>
/**
 * Model user_security
 * 
 */
export type user_security = $Result.DefaultSelection<Prisma.$user_securityPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const report_target_type: {
  user: 'user',
  post: 'post',
  comment: 'comment',
  file: 'file',
  chat_message: 'chat_message',
  community: 'community'
};

export type report_target_type = (typeof report_target_type)[keyof typeof report_target_type]


export const post_visibility: {
  public: 'public',
  followers: 'followers',
  private: 'private'
};

export type post_visibility = (typeof post_visibility)[keyof typeof post_visibility]


export const user_status: {
  active: 'active',
  inactive: 'inactive',
  suspended: 'suspended',
  deleted: 'deleted'
};

export type user_status = (typeof user_status)[keyof typeof user_status]

}

export type report_target_type = $Enums.report_target_type

export const report_target_type: typeof $Enums.report_target_type

export type post_visibility = $Enums.post_visibility

export const post_visibility: typeof $Enums.post_visibility

export type user_status = $Enums.user_status

export const user_status: typeof $Enums.user_status

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Chat_messages
 * const chat_messages = await prisma.chat_message.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Chat_messages
   * const chat_messages = await prisma.chat_message.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.chat_message`: Exposes CRUD operations for the **chat_message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chat_messages
    * const chat_messages = await prisma.chat_message.findMany()
    * ```
    */
  get chat_message(): Prisma.chat_messageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chat_room`: Exposes CRUD operations for the **chat_room** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chat_rooms
    * const chat_rooms = await prisma.chat_room.findMany()
    * ```
    */
  get chat_room(): Prisma.chat_roomDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chat_room_user`: Exposes CRUD operations for the **chat_room_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chat_room_users
    * const chat_room_users = await prisma.chat_room_user.findMany()
    * ```
    */
  get chat_room_user(): Prisma.chat_room_userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comment`: Exposes CRUD operations for the **comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments
    * const comments = await prisma.comment.findMany()
    * ```
    */
  get comment(): Prisma.commentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comment_like`: Exposes CRUD operations for the **comment_like** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comment_likes
    * const comment_likes = await prisma.comment_like.findMany()
    * ```
    */
  get comment_like(): Prisma.comment_likeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.community`: Exposes CRUD operations for the **community** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communities
    * const communities = await prisma.community.findMany()
    * ```
    */
  get community(): Prisma.communityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.emoji`: Exposes CRUD operations for the **emoji** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Emojis
    * const emojis = await prisma.emoji.findMany()
    * ```
    */
  get emoji(): Prisma.emojiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.feed_cache`: Exposes CRUD operations for the **feed_cache** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Feed_caches
    * const feed_caches = await prisma.feed_cache.findMany()
    * ```
    */
  get feed_cache(): Prisma.feed_cacheDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.file_report`: Exposes CRUD operations for the **file_report** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more File_reports
    * const file_reports = await prisma.file_report.findMany()
    * ```
    */
  get file_report(): Prisma.file_reportDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.follow`: Exposes CRUD operations for the **follow** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Follows
    * const follows = await prisma.follow.findMany()
    * ```
    */
  get follow(): Prisma.followDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.notificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post`: Exposes CRUD operations for the **post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.post.findMany()
    * ```
    */
  get post(): Prisma.postDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post_file`: Exposes CRUD operations for the **post_file** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Post_files
    * const post_files = await prisma.post_file.findMany()
    * ```
    */
  get post_file(): Prisma.post_fileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post_like`: Exposes CRUD operations for the **post_like** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Post_likes
    * const post_likes = await prisma.post_like.findMany()
    * ```
    */
  get post_like(): Prisma.post_likeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post_reaction`: Exposes CRUD operations for the **post_reaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Post_reactions
    * const post_reactions = await prisma.post_reaction.findMany()
    * ```
    */
  get post_reaction(): Prisma.post_reactionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post_tag`: Exposes CRUD operations for the **post_tag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Post_tags
    * const post_tags = await prisma.post_tag.findMany()
    * ```
    */
  get post_tag(): Prisma.post_tagDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profile_visit`: Exposes CRUD operations for the **profile_visit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profile_visits
    * const profile_visits = await prisma.profile_visit.findMany()
    * ```
    */
  get profile_visit(): Prisma.profile_visitDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.report`: Exposes CRUD operations for the **report** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reports
    * const reports = await prisma.report.findMany()
    * ```
    */
  get report(): Prisma.reportDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.search_history`: Exposes CRUD operations for the **search_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Search_histories
    * const search_histories = await prisma.search_history.findMany()
    * ```
    */
  get search_history(): Prisma.search_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tag`: Exposes CRUD operations for the **tag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tag.findMany()
    * ```
    */
  get tag(): Prisma.tagDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_block`: Exposes CRUD operations for the **user_block** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_blocks
    * const user_blocks = await prisma.user_block.findMany()
    * ```
    */
  get user_block(): Prisma.user_blockDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_oauth`: Exposes CRUD operations for the **user_oauth** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_oauths
    * const user_oauths = await prisma.user_oauth.findMany()
    * ```
    */
  get user_oauth(): Prisma.user_oauthDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_profile`: Exposes CRUD operations for the **user_profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_profiles
    * const user_profiles = await prisma.user_profile.findMany()
    * ```
    */
  get user_profile(): Prisma.user_profileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_security`: Exposes CRUD operations for the **user_security** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_securities
    * const user_securities = await prisma.user_security.findMany()
    * ```
    */
  get user_security(): Prisma.user_securityDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.16.1
   * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    chat_message: 'chat_message',
    chat_room: 'chat_room',
    chat_room_user: 'chat_room_user',
    comment: 'comment',
    comment_like: 'comment_like',
    community: 'community',
    emoji: 'emoji',
    feed_cache: 'feed_cache',
    file_report: 'file_report',
    follow: 'follow',
    notification: 'notification',
    post: 'post',
    post_file: 'post_file',
    post_like: 'post_like',
    post_reaction: 'post_reaction',
    post_tag: 'post_tag',
    profile_visit: 'profile_visit',
    report: 'report',
    search_history: 'search_history',
    tag: 'tag',
    user: 'user',
    user_block: 'user_block',
    user_oauth: 'user_oauth',
    user_profile: 'user_profile',
    user_security: 'user_security'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "chat_message" | "chat_room" | "chat_room_user" | "comment" | "comment_like" | "community" | "emoji" | "feed_cache" | "file_report" | "follow" | "notification" | "post" | "post_file" | "post_like" | "post_reaction" | "post_tag" | "profile_visit" | "report" | "search_history" | "tag" | "user" | "user_block" | "user_oauth" | "user_profile" | "user_security"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      chat_message: {
        payload: Prisma.$chat_messagePayload<ExtArgs>
        fields: Prisma.chat_messageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chat_messageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chat_messageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagePayload>
          }
          findFirst: {
            args: Prisma.chat_messageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chat_messageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagePayload>
          }
          findMany: {
            args: Prisma.chat_messageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagePayload>[]
          }
          create: {
            args: Prisma.chat_messageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagePayload>
          }
          createMany: {
            args: Prisma.chat_messageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.chat_messageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagePayload>
          }
          update: {
            args: Prisma.chat_messageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagePayload>
          }
          deleteMany: {
            args: Prisma.chat_messageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chat_messageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.chat_messageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagePayload>
          }
          aggregate: {
            args: Prisma.Chat_messageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat_message>
          }
          groupBy: {
            args: Prisma.chat_messageGroupByArgs<ExtArgs>
            result: $Utils.Optional<Chat_messageGroupByOutputType>[]
          }
          count: {
            args: Prisma.chat_messageCountArgs<ExtArgs>
            result: $Utils.Optional<Chat_messageCountAggregateOutputType> | number
          }
        }
      }
      chat_room: {
        payload: Prisma.$chat_roomPayload<ExtArgs>
        fields: Prisma.chat_roomFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chat_roomFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_roomPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chat_roomFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_roomPayload>
          }
          findFirst: {
            args: Prisma.chat_roomFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_roomPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chat_roomFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_roomPayload>
          }
          findMany: {
            args: Prisma.chat_roomFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_roomPayload>[]
          }
          create: {
            args: Prisma.chat_roomCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_roomPayload>
          }
          createMany: {
            args: Prisma.chat_roomCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.chat_roomDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_roomPayload>
          }
          update: {
            args: Prisma.chat_roomUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_roomPayload>
          }
          deleteMany: {
            args: Prisma.chat_roomDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chat_roomUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.chat_roomUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_roomPayload>
          }
          aggregate: {
            args: Prisma.Chat_roomAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat_room>
          }
          groupBy: {
            args: Prisma.chat_roomGroupByArgs<ExtArgs>
            result: $Utils.Optional<Chat_roomGroupByOutputType>[]
          }
          count: {
            args: Prisma.chat_roomCountArgs<ExtArgs>
            result: $Utils.Optional<Chat_roomCountAggregateOutputType> | number
          }
        }
      }
      chat_room_user: {
        payload: Prisma.$chat_room_userPayload<ExtArgs>
        fields: Prisma.chat_room_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chat_room_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_room_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chat_room_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_room_userPayload>
          }
          findFirst: {
            args: Prisma.chat_room_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_room_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chat_room_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_room_userPayload>
          }
          findMany: {
            args: Prisma.chat_room_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_room_userPayload>[]
          }
          create: {
            args: Prisma.chat_room_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_room_userPayload>
          }
          createMany: {
            args: Prisma.chat_room_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.chat_room_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_room_userPayload>
          }
          update: {
            args: Prisma.chat_room_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_room_userPayload>
          }
          deleteMany: {
            args: Prisma.chat_room_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chat_room_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.chat_room_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_room_userPayload>
          }
          aggregate: {
            args: Prisma.Chat_room_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat_room_user>
          }
          groupBy: {
            args: Prisma.chat_room_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Chat_room_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.chat_room_userCountArgs<ExtArgs>
            result: $Utils.Optional<Chat_room_userCountAggregateOutputType> | number
          }
        }
      }
      comment: {
        payload: Prisma.$commentPayload<ExtArgs>
        fields: Prisma.commentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.commentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.commentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentPayload>
          }
          findFirst: {
            args: Prisma.commentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.commentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentPayload>
          }
          findMany: {
            args: Prisma.commentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentPayload>[]
          }
          create: {
            args: Prisma.commentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentPayload>
          }
          createMany: {
            args: Prisma.commentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.commentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentPayload>
          }
          update: {
            args: Prisma.commentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentPayload>
          }
          deleteMany: {
            args: Prisma.commentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.commentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.commentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$commentPayload>
          }
          aggregate: {
            args: Prisma.CommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComment>
          }
          groupBy: {
            args: Prisma.commentGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.commentCountArgs<ExtArgs>
            result: $Utils.Optional<CommentCountAggregateOutputType> | number
          }
        }
      }
      comment_like: {
        payload: Prisma.$comment_likePayload<ExtArgs>
        fields: Prisma.comment_likeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.comment_likeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comment_likePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.comment_likeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comment_likePayload>
          }
          findFirst: {
            args: Prisma.comment_likeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comment_likePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.comment_likeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comment_likePayload>
          }
          findMany: {
            args: Prisma.comment_likeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comment_likePayload>[]
          }
          create: {
            args: Prisma.comment_likeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comment_likePayload>
          }
          createMany: {
            args: Prisma.comment_likeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.comment_likeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comment_likePayload>
          }
          update: {
            args: Prisma.comment_likeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comment_likePayload>
          }
          deleteMany: {
            args: Prisma.comment_likeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.comment_likeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.comment_likeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comment_likePayload>
          }
          aggregate: {
            args: Prisma.Comment_likeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComment_like>
          }
          groupBy: {
            args: Prisma.comment_likeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Comment_likeGroupByOutputType>[]
          }
          count: {
            args: Prisma.comment_likeCountArgs<ExtArgs>
            result: $Utils.Optional<Comment_likeCountAggregateOutputType> | number
          }
        }
      }
      community: {
        payload: Prisma.$communityPayload<ExtArgs>
        fields: Prisma.communityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.communityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.communityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          findFirst: {
            args: Prisma.communityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.communityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          findMany: {
            args: Prisma.communityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>[]
          }
          create: {
            args: Prisma.communityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          createMany: {
            args: Prisma.communityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.communityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          update: {
            args: Prisma.communityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          deleteMany: {
            args: Prisma.communityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.communityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.communityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          aggregate: {
            args: Prisma.CommunityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunity>
          }
          groupBy: {
            args: Prisma.communityGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommunityGroupByOutputType>[]
          }
          count: {
            args: Prisma.communityCountArgs<ExtArgs>
            result: $Utils.Optional<CommunityCountAggregateOutputType> | number
          }
        }
      }
      emoji: {
        payload: Prisma.$emojiPayload<ExtArgs>
        fields: Prisma.emojiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.emojiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emojiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.emojiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emojiPayload>
          }
          findFirst: {
            args: Prisma.emojiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emojiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.emojiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emojiPayload>
          }
          findMany: {
            args: Prisma.emojiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emojiPayload>[]
          }
          create: {
            args: Prisma.emojiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emojiPayload>
          }
          createMany: {
            args: Prisma.emojiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.emojiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emojiPayload>
          }
          update: {
            args: Prisma.emojiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emojiPayload>
          }
          deleteMany: {
            args: Prisma.emojiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.emojiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.emojiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emojiPayload>
          }
          aggregate: {
            args: Prisma.EmojiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmoji>
          }
          groupBy: {
            args: Prisma.emojiGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmojiGroupByOutputType>[]
          }
          count: {
            args: Prisma.emojiCountArgs<ExtArgs>
            result: $Utils.Optional<EmojiCountAggregateOutputType> | number
          }
        }
      }
      feed_cache: {
        payload: Prisma.$feed_cachePayload<ExtArgs>
        fields: Prisma.feed_cacheFieldRefs
        operations: {
          findUnique: {
            args: Prisma.feed_cacheFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feed_cachePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.feed_cacheFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feed_cachePayload>
          }
          findFirst: {
            args: Prisma.feed_cacheFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feed_cachePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.feed_cacheFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feed_cachePayload>
          }
          findMany: {
            args: Prisma.feed_cacheFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feed_cachePayload>[]
          }
          create: {
            args: Prisma.feed_cacheCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feed_cachePayload>
          }
          createMany: {
            args: Prisma.feed_cacheCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.feed_cacheDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feed_cachePayload>
          }
          update: {
            args: Prisma.feed_cacheUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feed_cachePayload>
          }
          deleteMany: {
            args: Prisma.feed_cacheDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.feed_cacheUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.feed_cacheUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$feed_cachePayload>
          }
          aggregate: {
            args: Prisma.Feed_cacheAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFeed_cache>
          }
          groupBy: {
            args: Prisma.feed_cacheGroupByArgs<ExtArgs>
            result: $Utils.Optional<Feed_cacheGroupByOutputType>[]
          }
          count: {
            args: Prisma.feed_cacheCountArgs<ExtArgs>
            result: $Utils.Optional<Feed_cacheCountAggregateOutputType> | number
          }
        }
      }
      file_report: {
        payload: Prisma.$file_reportPayload<ExtArgs>
        fields: Prisma.file_reportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.file_reportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$file_reportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.file_reportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$file_reportPayload>
          }
          findFirst: {
            args: Prisma.file_reportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$file_reportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.file_reportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$file_reportPayload>
          }
          findMany: {
            args: Prisma.file_reportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$file_reportPayload>[]
          }
          create: {
            args: Prisma.file_reportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$file_reportPayload>
          }
          createMany: {
            args: Prisma.file_reportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.file_reportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$file_reportPayload>
          }
          update: {
            args: Prisma.file_reportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$file_reportPayload>
          }
          deleteMany: {
            args: Prisma.file_reportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.file_reportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.file_reportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$file_reportPayload>
          }
          aggregate: {
            args: Prisma.File_reportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFile_report>
          }
          groupBy: {
            args: Prisma.file_reportGroupByArgs<ExtArgs>
            result: $Utils.Optional<File_reportGroupByOutputType>[]
          }
          count: {
            args: Prisma.file_reportCountArgs<ExtArgs>
            result: $Utils.Optional<File_reportCountAggregateOutputType> | number
          }
        }
      }
      follow: {
        payload: Prisma.$followPayload<ExtArgs>
        fields: Prisma.followFieldRefs
        operations: {
          findUnique: {
            args: Prisma.followFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$followPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.followFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$followPayload>
          }
          findFirst: {
            args: Prisma.followFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$followPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.followFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$followPayload>
          }
          findMany: {
            args: Prisma.followFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$followPayload>[]
          }
          create: {
            args: Prisma.followCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$followPayload>
          }
          createMany: {
            args: Prisma.followCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.followDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$followPayload>
          }
          update: {
            args: Prisma.followUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$followPayload>
          }
          deleteMany: {
            args: Prisma.followDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.followUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.followUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$followPayload>
          }
          aggregate: {
            args: Prisma.FollowAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFollow>
          }
          groupBy: {
            args: Prisma.followGroupByArgs<ExtArgs>
            result: $Utils.Optional<FollowGroupByOutputType>[]
          }
          count: {
            args: Prisma.followCountArgs<ExtArgs>
            result: $Utils.Optional<FollowCountAggregateOutputType> | number
          }
        }
      }
      notification: {
        payload: Prisma.$notificationPayload<ExtArgs>
        fields: Prisma.notificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findFirst: {
            args: Prisma.notificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findMany: {
            args: Prisma.notificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          create: {
            args: Prisma.notificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          createMany: {
            args: Prisma.notificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.notificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          update: {
            args: Prisma.notificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          deleteMany: {
            args: Prisma.notificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.notificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.notificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      post: {
        payload: Prisma.$postPayload<ExtArgs>
        fields: Prisma.postFieldRefs
        operations: {
          findUnique: {
            args: Prisma.postFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.postFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          findFirst: {
            args: Prisma.postFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.postFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          findMany: {
            args: Prisma.postFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>[]
          }
          create: {
            args: Prisma.postCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          createMany: {
            args: Prisma.postCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.postDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          update: {
            args: Prisma.postUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          deleteMany: {
            args: Prisma.postDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.postUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.postUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postPayload>
          }
          aggregate: {
            args: Prisma.PostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost>
          }
          groupBy: {
            args: Prisma.postGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostGroupByOutputType>[]
          }
          count: {
            args: Prisma.postCountArgs<ExtArgs>
            result: $Utils.Optional<PostCountAggregateOutputType> | number
          }
        }
      }
      post_file: {
        payload: Prisma.$post_filePayload<ExtArgs>
        fields: Prisma.post_fileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.post_fileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_filePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.post_fileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_filePayload>
          }
          findFirst: {
            args: Prisma.post_fileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_filePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.post_fileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_filePayload>
          }
          findMany: {
            args: Prisma.post_fileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_filePayload>[]
          }
          create: {
            args: Prisma.post_fileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_filePayload>
          }
          createMany: {
            args: Prisma.post_fileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.post_fileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_filePayload>
          }
          update: {
            args: Prisma.post_fileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_filePayload>
          }
          deleteMany: {
            args: Prisma.post_fileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.post_fileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.post_fileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_filePayload>
          }
          aggregate: {
            args: Prisma.Post_fileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost_file>
          }
          groupBy: {
            args: Prisma.post_fileGroupByArgs<ExtArgs>
            result: $Utils.Optional<Post_fileGroupByOutputType>[]
          }
          count: {
            args: Prisma.post_fileCountArgs<ExtArgs>
            result: $Utils.Optional<Post_fileCountAggregateOutputType> | number
          }
        }
      }
      post_like: {
        payload: Prisma.$post_likePayload<ExtArgs>
        fields: Prisma.post_likeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.post_likeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_likePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.post_likeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_likePayload>
          }
          findFirst: {
            args: Prisma.post_likeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_likePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.post_likeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_likePayload>
          }
          findMany: {
            args: Prisma.post_likeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_likePayload>[]
          }
          create: {
            args: Prisma.post_likeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_likePayload>
          }
          createMany: {
            args: Prisma.post_likeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.post_likeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_likePayload>
          }
          update: {
            args: Prisma.post_likeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_likePayload>
          }
          deleteMany: {
            args: Prisma.post_likeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.post_likeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.post_likeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_likePayload>
          }
          aggregate: {
            args: Prisma.Post_likeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost_like>
          }
          groupBy: {
            args: Prisma.post_likeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Post_likeGroupByOutputType>[]
          }
          count: {
            args: Prisma.post_likeCountArgs<ExtArgs>
            result: $Utils.Optional<Post_likeCountAggregateOutputType> | number
          }
        }
      }
      post_reaction: {
        payload: Prisma.$post_reactionPayload<ExtArgs>
        fields: Prisma.post_reactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.post_reactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_reactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.post_reactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_reactionPayload>
          }
          findFirst: {
            args: Prisma.post_reactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_reactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.post_reactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_reactionPayload>
          }
          findMany: {
            args: Prisma.post_reactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_reactionPayload>[]
          }
          create: {
            args: Prisma.post_reactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_reactionPayload>
          }
          createMany: {
            args: Prisma.post_reactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.post_reactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_reactionPayload>
          }
          update: {
            args: Prisma.post_reactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_reactionPayload>
          }
          deleteMany: {
            args: Prisma.post_reactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.post_reactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.post_reactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_reactionPayload>
          }
          aggregate: {
            args: Prisma.Post_reactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost_reaction>
          }
          groupBy: {
            args: Prisma.post_reactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Post_reactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.post_reactionCountArgs<ExtArgs>
            result: $Utils.Optional<Post_reactionCountAggregateOutputType> | number
          }
        }
      }
      post_tag: {
        payload: Prisma.$post_tagPayload<ExtArgs>
        fields: Prisma.post_tagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.post_tagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_tagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.post_tagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_tagPayload>
          }
          findFirst: {
            args: Prisma.post_tagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_tagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.post_tagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_tagPayload>
          }
          findMany: {
            args: Prisma.post_tagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_tagPayload>[]
          }
          create: {
            args: Prisma.post_tagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_tagPayload>
          }
          createMany: {
            args: Prisma.post_tagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.post_tagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_tagPayload>
          }
          update: {
            args: Prisma.post_tagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_tagPayload>
          }
          deleteMany: {
            args: Prisma.post_tagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.post_tagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.post_tagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_tagPayload>
          }
          aggregate: {
            args: Prisma.Post_tagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost_tag>
          }
          groupBy: {
            args: Prisma.post_tagGroupByArgs<ExtArgs>
            result: $Utils.Optional<Post_tagGroupByOutputType>[]
          }
          count: {
            args: Prisma.post_tagCountArgs<ExtArgs>
            result: $Utils.Optional<Post_tagCountAggregateOutputType> | number
          }
        }
      }
      profile_visit: {
        payload: Prisma.$profile_visitPayload<ExtArgs>
        fields: Prisma.profile_visitFieldRefs
        operations: {
          findUnique: {
            args: Prisma.profile_visitFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profile_visitPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.profile_visitFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profile_visitPayload>
          }
          findFirst: {
            args: Prisma.profile_visitFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profile_visitPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.profile_visitFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profile_visitPayload>
          }
          findMany: {
            args: Prisma.profile_visitFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profile_visitPayload>[]
          }
          create: {
            args: Prisma.profile_visitCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profile_visitPayload>
          }
          createMany: {
            args: Prisma.profile_visitCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.profile_visitDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profile_visitPayload>
          }
          update: {
            args: Prisma.profile_visitUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profile_visitPayload>
          }
          deleteMany: {
            args: Prisma.profile_visitDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.profile_visitUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.profile_visitUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profile_visitPayload>
          }
          aggregate: {
            args: Prisma.Profile_visitAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile_visit>
          }
          groupBy: {
            args: Prisma.profile_visitGroupByArgs<ExtArgs>
            result: $Utils.Optional<Profile_visitGroupByOutputType>[]
          }
          count: {
            args: Prisma.profile_visitCountArgs<ExtArgs>
            result: $Utils.Optional<Profile_visitCountAggregateOutputType> | number
          }
        }
      }
      report: {
        payload: Prisma.$reportPayload<ExtArgs>
        fields: Prisma.reportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportPayload>
          }
          findFirst: {
            args: Prisma.reportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportPayload>
          }
          findMany: {
            args: Prisma.reportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportPayload>[]
          }
          create: {
            args: Prisma.reportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportPayload>
          }
          createMany: {
            args: Prisma.reportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.reportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportPayload>
          }
          update: {
            args: Prisma.reportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportPayload>
          }
          deleteMany: {
            args: Prisma.reportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.reportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportPayload>
          }
          aggregate: {
            args: Prisma.ReportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReport>
          }
          groupBy: {
            args: Prisma.reportGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportGroupByOutputType>[]
          }
          count: {
            args: Prisma.reportCountArgs<ExtArgs>
            result: $Utils.Optional<ReportCountAggregateOutputType> | number
          }
        }
      }
      search_history: {
        payload: Prisma.$search_historyPayload<ExtArgs>
        fields: Prisma.search_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.search_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$search_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.search_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$search_historyPayload>
          }
          findFirst: {
            args: Prisma.search_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$search_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.search_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$search_historyPayload>
          }
          findMany: {
            args: Prisma.search_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$search_historyPayload>[]
          }
          create: {
            args: Prisma.search_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$search_historyPayload>
          }
          createMany: {
            args: Prisma.search_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.search_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$search_historyPayload>
          }
          update: {
            args: Prisma.search_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$search_historyPayload>
          }
          deleteMany: {
            args: Prisma.search_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.search_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.search_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$search_historyPayload>
          }
          aggregate: {
            args: Prisma.Search_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSearch_history>
          }
          groupBy: {
            args: Prisma.search_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Search_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.search_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Search_historyCountAggregateOutputType> | number
          }
        }
      }
      tag: {
        payload: Prisma.$tagPayload<ExtArgs>
        fields: Prisma.tagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagPayload>
          }
          findFirst: {
            args: Prisma.tagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagPayload>
          }
          findMany: {
            args: Prisma.tagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagPayload>[]
          }
          create: {
            args: Prisma.tagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagPayload>
          }
          createMany: {
            args: Prisma.tagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagPayload>
          }
          update: {
            args: Prisma.tagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagPayload>
          }
          deleteMany: {
            args: Prisma.tagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagPayload>
          }
          aggregate: {
            args: Prisma.TagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTag>
          }
          groupBy: {
            args: Prisma.tagGroupByArgs<ExtArgs>
            result: $Utils.Optional<TagGroupByOutputType>[]
          }
          count: {
            args: Prisma.tagCountArgs<ExtArgs>
            result: $Utils.Optional<TagCountAggregateOutputType> | number
          }
        }
      }
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      user_block: {
        payload: Prisma.$user_blockPayload<ExtArgs>
        fields: Prisma.user_blockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_blockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_blockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blockPayload>
          }
          findFirst: {
            args: Prisma.user_blockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_blockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blockPayload>
          }
          findMany: {
            args: Prisma.user_blockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blockPayload>[]
          }
          create: {
            args: Prisma.user_blockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blockPayload>
          }
          createMany: {
            args: Prisma.user_blockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.user_blockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blockPayload>
          }
          update: {
            args: Prisma.user_blockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blockPayload>
          }
          deleteMany: {
            args: Prisma.user_blockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_blockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.user_blockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blockPayload>
          }
          aggregate: {
            args: Prisma.User_blockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_block>
          }
          groupBy: {
            args: Prisma.user_blockGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_blockGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_blockCountArgs<ExtArgs>
            result: $Utils.Optional<User_blockCountAggregateOutputType> | number
          }
        }
      }
      user_oauth: {
        payload: Prisma.$user_oauthPayload<ExtArgs>
        fields: Prisma.user_oauthFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_oauthFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_oauthPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_oauthFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_oauthPayload>
          }
          findFirst: {
            args: Prisma.user_oauthFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_oauthPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_oauthFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_oauthPayload>
          }
          findMany: {
            args: Prisma.user_oauthFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_oauthPayload>[]
          }
          create: {
            args: Prisma.user_oauthCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_oauthPayload>
          }
          createMany: {
            args: Prisma.user_oauthCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.user_oauthDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_oauthPayload>
          }
          update: {
            args: Prisma.user_oauthUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_oauthPayload>
          }
          deleteMany: {
            args: Prisma.user_oauthDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_oauthUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.user_oauthUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_oauthPayload>
          }
          aggregate: {
            args: Prisma.User_oauthAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_oauth>
          }
          groupBy: {
            args: Prisma.user_oauthGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_oauthGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_oauthCountArgs<ExtArgs>
            result: $Utils.Optional<User_oauthCountAggregateOutputType> | number
          }
        }
      }
      user_profile: {
        payload: Prisma.$user_profilePayload<ExtArgs>
        fields: Prisma.user_profileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_profileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_profileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          findFirst: {
            args: Prisma.user_profileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_profileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          findMany: {
            args: Prisma.user_profileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>[]
          }
          create: {
            args: Prisma.user_profileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          createMany: {
            args: Prisma.user_profileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.user_profileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          update: {
            args: Prisma.user_profileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          deleteMany: {
            args: Prisma.user_profileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_profileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.user_profileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          aggregate: {
            args: Prisma.User_profileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_profile>
          }
          groupBy: {
            args: Prisma.user_profileGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_profileGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_profileCountArgs<ExtArgs>
            result: $Utils.Optional<User_profileCountAggregateOutputType> | number
          }
        }
      }
      user_security: {
        payload: Prisma.$user_securityPayload<ExtArgs>
        fields: Prisma.user_securityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_securityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_securityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          findFirst: {
            args: Prisma.user_securityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_securityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          findMany: {
            args: Prisma.user_securityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>[]
          }
          create: {
            args: Prisma.user_securityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          createMany: {
            args: Prisma.user_securityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.user_securityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          update: {
            args: Prisma.user_securityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          deleteMany: {
            args: Prisma.user_securityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_securityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.user_securityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          aggregate: {
            args: Prisma.User_securityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_security>
          }
          groupBy: {
            args: Prisma.user_securityGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_securityGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_securityCountArgs<ExtArgs>
            result: $Utils.Optional<User_securityCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    chat_message?: chat_messageOmit
    chat_room?: chat_roomOmit
    chat_room_user?: chat_room_userOmit
    comment?: commentOmit
    comment_like?: comment_likeOmit
    community?: communityOmit
    emoji?: emojiOmit
    feed_cache?: feed_cacheOmit
    file_report?: file_reportOmit
    follow?: followOmit
    notification?: notificationOmit
    post?: postOmit
    post_file?: post_fileOmit
    post_like?: post_likeOmit
    post_reaction?: post_reactionOmit
    post_tag?: post_tagOmit
    profile_visit?: profile_visitOmit
    report?: reportOmit
    search_history?: search_historyOmit
    tag?: tagOmit
    user?: userOmit
    user_block?: user_blockOmit
    user_oauth?: user_oauthOmit
    user_profile?: user_profileOmit
    user_security?: user_securityOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Chat_messageCountOutputType
   */

  export type Chat_messageCountOutputType = {
    notification: number
  }

  export type Chat_messageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notification?: boolean | Chat_messageCountOutputTypeCountNotificationArgs
  }

  // Custom InputTypes
  /**
   * Chat_messageCountOutputType without action
   */
  export type Chat_messageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat_messageCountOutputType
     */
    select?: Chat_messageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Chat_messageCountOutputType without action
   */
  export type Chat_messageCountOutputTypeCountNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }


  /**
   * Count Type Chat_roomCountOutputType
   */

  export type Chat_roomCountOutputType = {
    chat_message: number
    chat_room_user: number
    notification: number
  }

  export type Chat_roomCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_message?: boolean | Chat_roomCountOutputTypeCountChat_messageArgs
    chat_room_user?: boolean | Chat_roomCountOutputTypeCountChat_room_userArgs
    notification?: boolean | Chat_roomCountOutputTypeCountNotificationArgs
  }

  // Custom InputTypes
  /**
   * Chat_roomCountOutputType without action
   */
  export type Chat_roomCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat_roomCountOutputType
     */
    select?: Chat_roomCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Chat_roomCountOutputType without action
   */
  export type Chat_roomCountOutputTypeCountChat_messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_messageWhereInput
  }

  /**
   * Chat_roomCountOutputType without action
   */
  export type Chat_roomCountOutputTypeCountChat_room_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_room_userWhereInput
  }

  /**
   * Chat_roomCountOutputType without action
   */
  export type Chat_roomCountOutputTypeCountNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }


  /**
   * Count Type CommentCountOutputType
   */

  export type CommentCountOutputType = {
    other_comment: number
    comment_like: number
    notification: number
  }

  export type CommentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    other_comment?: boolean | CommentCountOutputTypeCountOther_commentArgs
    comment_like?: boolean | CommentCountOutputTypeCountComment_likeArgs
    notification?: boolean | CommentCountOutputTypeCountNotificationArgs
  }

  // Custom InputTypes
  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCountOutputType
     */
    select?: CommentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountOther_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: commentWhereInput
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountComment_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comment_likeWhereInput
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }


  /**
   * Count Type CommunityCountOutputType
   */

  export type CommunityCountOutputType = {
    post: number
  }

  export type CommunityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | CommunityCountOutputTypeCountPostArgs
  }

  // Custom InputTypes
  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityCountOutputType
     */
    select?: CommunityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountPostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postWhereInput
  }


  /**
   * Count Type EmojiCountOutputType
   */

  export type EmojiCountOutputType = {
    post_reaction: number
  }

  export type EmojiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_reaction?: boolean | EmojiCountOutputTypeCountPost_reactionArgs
  }

  // Custom InputTypes
  /**
   * EmojiCountOutputType without action
   */
  export type EmojiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmojiCountOutputType
     */
    select?: EmojiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmojiCountOutputType without action
   */
  export type EmojiCountOutputTypeCountPost_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_reactionWhereInput
  }


  /**
   * Count Type PostCountOutputType
   */

  export type PostCountOutputType = {
    comment: number
    feed_cache: number
    notification: number
    post_file: number
    post_like: number
    post_reaction: number
    post_tag: number
  }

  export type PostCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comment?: boolean | PostCountOutputTypeCountCommentArgs
    feed_cache?: boolean | PostCountOutputTypeCountFeed_cacheArgs
    notification?: boolean | PostCountOutputTypeCountNotificationArgs
    post_file?: boolean | PostCountOutputTypeCountPost_fileArgs
    post_like?: boolean | PostCountOutputTypeCountPost_likeArgs
    post_reaction?: boolean | PostCountOutputTypeCountPost_reactionArgs
    post_tag?: boolean | PostCountOutputTypeCountPost_tagArgs
  }

  // Custom InputTypes
  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostCountOutputType
     */
    select?: PostCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountCommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: commentWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountFeed_cacheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: feed_cacheWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountPost_fileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_fileWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountPost_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_likeWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountPost_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_reactionWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountPost_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_tagWhereInput
  }


  /**
   * Count Type Post_fileCountOutputType
   */

  export type Post_fileCountOutputType = {
    file_report: number
  }

  export type Post_fileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    file_report?: boolean | Post_fileCountOutputTypeCountFile_reportArgs
  }

  // Custom InputTypes
  /**
   * Post_fileCountOutputType without action
   */
  export type Post_fileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post_fileCountOutputType
     */
    select?: Post_fileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Post_fileCountOutputType without action
   */
  export type Post_fileCountOutputTypeCountFile_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: file_reportWhereInput
  }


  /**
   * Count Type TagCountOutputType
   */

  export type TagCountOutputType = {
    post_tag: number
  }

  export type TagCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_tag?: boolean | TagCountOutputTypeCountPost_tagArgs
  }

  // Custom InputTypes
  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagCountOutputType
     */
    select?: TagCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeCountPost_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_tagWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    chat_message: number
    chat_room_user: number
    comment: number
    comment_like: number
    community: number
    feed_cache: number
    file_report: number
    follow_follow_follower_idTouser: number
    follow_follow_following_idTouser: number
    notification_notification_source_user_idTouser: number
    notification_notification_user_idTouser: number
    post: number
    post_like: number
    post_reaction: number
    profile_visit_profile_visit_profile_user_idTouser: number
    profile_visit_profile_visit_visitor_idTouser: number
    report: number
    search_history: number
    user_block_user_block_blocked_user_idTouser: number
    user_block_user_block_user_idTouser: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_message?: boolean | UserCountOutputTypeCountChat_messageArgs
    chat_room_user?: boolean | UserCountOutputTypeCountChat_room_userArgs
    comment?: boolean | UserCountOutputTypeCountCommentArgs
    comment_like?: boolean | UserCountOutputTypeCountComment_likeArgs
    community?: boolean | UserCountOutputTypeCountCommunityArgs
    feed_cache?: boolean | UserCountOutputTypeCountFeed_cacheArgs
    file_report?: boolean | UserCountOutputTypeCountFile_reportArgs
    follow_follow_follower_idTouser?: boolean | UserCountOutputTypeCountFollow_follow_follower_idTouserArgs
    follow_follow_following_idTouser?: boolean | UserCountOutputTypeCountFollow_follow_following_idTouserArgs
    notification_notification_source_user_idTouser?: boolean | UserCountOutputTypeCountNotification_notification_source_user_idTouserArgs
    notification_notification_user_idTouser?: boolean | UserCountOutputTypeCountNotification_notification_user_idTouserArgs
    post?: boolean | UserCountOutputTypeCountPostArgs
    post_like?: boolean | UserCountOutputTypeCountPost_likeArgs
    post_reaction?: boolean | UserCountOutputTypeCountPost_reactionArgs
    profile_visit_profile_visit_profile_user_idTouser?: boolean | UserCountOutputTypeCountProfile_visit_profile_visit_profile_user_idTouserArgs
    profile_visit_profile_visit_visitor_idTouser?: boolean | UserCountOutputTypeCountProfile_visit_profile_visit_visitor_idTouserArgs
    report?: boolean | UserCountOutputTypeCountReportArgs
    search_history?: boolean | UserCountOutputTypeCountSearch_historyArgs
    user_block_user_block_blocked_user_idTouser?: boolean | UserCountOutputTypeCountUser_block_user_block_blocked_user_idTouserArgs
    user_block_user_block_user_idTouser?: boolean | UserCountOutputTypeCountUser_block_user_block_user_idTouserArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChat_messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_messageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChat_room_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_room_userWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: commentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountComment_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comment_likeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommunityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communityWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFeed_cacheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: feed_cacheWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFile_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: file_reportWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFollow_follow_follower_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: followWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFollow_follow_following_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: followWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotification_notification_source_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotification_notification_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPost_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_likeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPost_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_reactionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProfile_visit_profile_visit_profile_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: profile_visitWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProfile_visit_profile_visit_visitor_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: profile_visitWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSearch_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: search_historyWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_block_user_block_blocked_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_blockWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_block_user_block_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_blockWhereInput
  }


  /**
   * Models
   */

  /**
   * Model chat_message
   */

  export type AggregateChat_message = {
    _count: Chat_messageCountAggregateOutputType | null
    _avg: Chat_messageAvgAggregateOutputType | null
    _sum: Chat_messageSumAggregateOutputType | null
    _min: Chat_messageMinAggregateOutputType | null
    _max: Chat_messageMaxAggregateOutputType | null
  }

  export type Chat_messageAvgAggregateOutputType = {
    id: number | null
    chatroom_id: number | null
    sender_id: number | null
  }

  export type Chat_messageSumAggregateOutputType = {
    id: number | null
    chatroom_id: number | null
    sender_id: number | null
  }

  export type Chat_messageMinAggregateOutputType = {
    id: number | null
    chatroom_id: number | null
    sender_id: number | null
    message: string | null
    file_url: string | null
    is_deleted: boolean | null
    created_at: Date | null
  }

  export type Chat_messageMaxAggregateOutputType = {
    id: number | null
    chatroom_id: number | null
    sender_id: number | null
    message: string | null
    file_url: string | null
    is_deleted: boolean | null
    created_at: Date | null
  }

  export type Chat_messageCountAggregateOutputType = {
    id: number
    chatroom_id: number
    sender_id: number
    message: number
    file_url: number
    is_deleted: number
    created_at: number
    _all: number
  }


  export type Chat_messageAvgAggregateInputType = {
    id?: true
    chatroom_id?: true
    sender_id?: true
  }

  export type Chat_messageSumAggregateInputType = {
    id?: true
    chatroom_id?: true
    sender_id?: true
  }

  export type Chat_messageMinAggregateInputType = {
    id?: true
    chatroom_id?: true
    sender_id?: true
    message?: true
    file_url?: true
    is_deleted?: true
    created_at?: true
  }

  export type Chat_messageMaxAggregateInputType = {
    id?: true
    chatroom_id?: true
    sender_id?: true
    message?: true
    file_url?: true
    is_deleted?: true
    created_at?: true
  }

  export type Chat_messageCountAggregateInputType = {
    id?: true
    chatroom_id?: true
    sender_id?: true
    message?: true
    file_url?: true
    is_deleted?: true
    created_at?: true
    _all?: true
  }

  export type Chat_messageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_message to aggregate.
     */
    where?: chat_messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_messages to fetch.
     */
    orderBy?: chat_messageOrderByWithRelationInput | chat_messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chat_messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chat_messages
    **/
    _count?: true | Chat_messageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Chat_messageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Chat_messageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Chat_messageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Chat_messageMaxAggregateInputType
  }

  export type GetChat_messageAggregateType<T extends Chat_messageAggregateArgs> = {
        [P in keyof T & keyof AggregateChat_message]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat_message[P]>
      : GetScalarType<T[P], AggregateChat_message[P]>
  }




  export type chat_messageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_messageWhereInput
    orderBy?: chat_messageOrderByWithAggregationInput | chat_messageOrderByWithAggregationInput[]
    by: Chat_messageScalarFieldEnum[] | Chat_messageScalarFieldEnum
    having?: chat_messageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Chat_messageCountAggregateInputType | true
    _avg?: Chat_messageAvgAggregateInputType
    _sum?: Chat_messageSumAggregateInputType
    _min?: Chat_messageMinAggregateInputType
    _max?: Chat_messageMaxAggregateInputType
  }

  export type Chat_messageGroupByOutputType = {
    id: number
    chatroom_id: number
    sender_id: number
    message: string | null
    file_url: string | null
    is_deleted: boolean
    created_at: Date
    _count: Chat_messageCountAggregateOutputType | null
    _avg: Chat_messageAvgAggregateOutputType | null
    _sum: Chat_messageSumAggregateOutputType | null
    _min: Chat_messageMinAggregateOutputType | null
    _max: Chat_messageMaxAggregateOutputType | null
  }

  type GetChat_messageGroupByPayload<T extends chat_messageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Chat_messageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Chat_messageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Chat_messageGroupByOutputType[P]>
            : GetScalarType<T[P], Chat_messageGroupByOutputType[P]>
        }
      >
    >


  export type chat_messageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chatroom_id?: boolean
    sender_id?: boolean
    message?: boolean
    file_url?: boolean
    is_deleted?: boolean
    created_at?: boolean
    chat_room?: boolean | chat_roomDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    notification?: boolean | chat_message$notificationArgs<ExtArgs>
    _count?: boolean | Chat_messageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat_message"]>



  export type chat_messageSelectScalar = {
    id?: boolean
    chatroom_id?: boolean
    sender_id?: boolean
    message?: boolean
    file_url?: boolean
    is_deleted?: boolean
    created_at?: boolean
  }

  export type chat_messageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chatroom_id" | "sender_id" | "message" | "file_url" | "is_deleted" | "created_at", ExtArgs["result"]["chat_message"]>
  export type chat_messageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_room?: boolean | chat_roomDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    notification?: boolean | chat_message$notificationArgs<ExtArgs>
    _count?: boolean | Chat_messageCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $chat_messagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chat_message"
    objects: {
      chat_room: Prisma.$chat_roomPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
      notification: Prisma.$notificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      chatroom_id: number
      sender_id: number
      message: string | null
      file_url: string | null
      is_deleted: boolean
      created_at: Date
    }, ExtArgs["result"]["chat_message"]>
    composites: {}
  }

  type chat_messageGetPayload<S extends boolean | null | undefined | chat_messageDefaultArgs> = $Result.GetResult<Prisma.$chat_messagePayload, S>

  type chat_messageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chat_messageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Chat_messageCountAggregateInputType | true
    }

  export interface chat_messageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat_message'], meta: { name: 'chat_message' } }
    /**
     * Find zero or one Chat_message that matches the filter.
     * @param {chat_messageFindUniqueArgs} args - Arguments to find a Chat_message
     * @example
     * // Get one Chat_message
     * const chat_message = await prisma.chat_message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chat_messageFindUniqueArgs>(args: SelectSubset<T, chat_messageFindUniqueArgs<ExtArgs>>): Prisma__chat_messageClient<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chat_message that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chat_messageFindUniqueOrThrowArgs} args - Arguments to find a Chat_message
     * @example
     * // Get one Chat_message
     * const chat_message = await prisma.chat_message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chat_messageFindUniqueOrThrowArgs>(args: SelectSubset<T, chat_messageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chat_messageClient<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messageFindFirstArgs} args - Arguments to find a Chat_message
     * @example
     * // Get one Chat_message
     * const chat_message = await prisma.chat_message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chat_messageFindFirstArgs>(args?: SelectSubset<T, chat_messageFindFirstArgs<ExtArgs>>): Prisma__chat_messageClient<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messageFindFirstOrThrowArgs} args - Arguments to find a Chat_message
     * @example
     * // Get one Chat_message
     * const chat_message = await prisma.chat_message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chat_messageFindFirstOrThrowArgs>(args?: SelectSubset<T, chat_messageFindFirstOrThrowArgs<ExtArgs>>): Prisma__chat_messageClient<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chat_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chat_messages
     * const chat_messages = await prisma.chat_message.findMany()
     * 
     * // Get first 10 Chat_messages
     * const chat_messages = await prisma.chat_message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chat_messageWithIdOnly = await prisma.chat_message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends chat_messageFindManyArgs>(args?: SelectSubset<T, chat_messageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chat_message.
     * @param {chat_messageCreateArgs} args - Arguments to create a Chat_message.
     * @example
     * // Create one Chat_message
     * const Chat_message = await prisma.chat_message.create({
     *   data: {
     *     // ... data to create a Chat_message
     *   }
     * })
     * 
     */
    create<T extends chat_messageCreateArgs>(args: SelectSubset<T, chat_messageCreateArgs<ExtArgs>>): Prisma__chat_messageClient<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chat_messages.
     * @param {chat_messageCreateManyArgs} args - Arguments to create many Chat_messages.
     * @example
     * // Create many Chat_messages
     * const chat_message = await prisma.chat_message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chat_messageCreateManyArgs>(args?: SelectSubset<T, chat_messageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Chat_message.
     * @param {chat_messageDeleteArgs} args - Arguments to delete one Chat_message.
     * @example
     * // Delete one Chat_message
     * const Chat_message = await prisma.chat_message.delete({
     *   where: {
     *     // ... filter to delete one Chat_message
     *   }
     * })
     * 
     */
    delete<T extends chat_messageDeleteArgs>(args: SelectSubset<T, chat_messageDeleteArgs<ExtArgs>>): Prisma__chat_messageClient<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chat_message.
     * @param {chat_messageUpdateArgs} args - Arguments to update one Chat_message.
     * @example
     * // Update one Chat_message
     * const chat_message = await prisma.chat_message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chat_messageUpdateArgs>(args: SelectSubset<T, chat_messageUpdateArgs<ExtArgs>>): Prisma__chat_messageClient<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chat_messages.
     * @param {chat_messageDeleteManyArgs} args - Arguments to filter Chat_messages to delete.
     * @example
     * // Delete a few Chat_messages
     * const { count } = await prisma.chat_message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chat_messageDeleteManyArgs>(args?: SelectSubset<T, chat_messageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chat_messages
     * const chat_message = await prisma.chat_message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chat_messageUpdateManyArgs>(args: SelectSubset<T, chat_messageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Chat_message.
     * @param {chat_messageUpsertArgs} args - Arguments to update or create a Chat_message.
     * @example
     * // Update or create a Chat_message
     * const chat_message = await prisma.chat_message.upsert({
     *   create: {
     *     // ... data to create a Chat_message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat_message we want to update
     *   }
     * })
     */
    upsert<T extends chat_messageUpsertArgs>(args: SelectSubset<T, chat_messageUpsertArgs<ExtArgs>>): Prisma__chat_messageClient<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chat_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messageCountArgs} args - Arguments to filter Chat_messages to count.
     * @example
     * // Count the number of Chat_messages
     * const count = await prisma.chat_message.count({
     *   where: {
     *     // ... the filter for the Chat_messages we want to count
     *   }
     * })
    **/
    count<T extends chat_messageCountArgs>(
      args?: Subset<T, chat_messageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Chat_messageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat_message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Chat_messageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Chat_messageAggregateArgs>(args: Subset<T, Chat_messageAggregateArgs>): Prisma.PrismaPromise<GetChat_messageAggregateType<T>>

    /**
     * Group by Chat_message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chat_messageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chat_messageGroupByArgs['orderBy'] }
        : { orderBy?: chat_messageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chat_messageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChat_messageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chat_message model
   */
  readonly fields: chat_messageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chat_message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chat_messageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat_room<T extends chat_roomDefaultArgs<ExtArgs> = {}>(args?: Subset<T, chat_roomDefaultArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    notification<T extends chat_message$notificationArgs<ExtArgs> = {}>(args?: Subset<T, chat_message$notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chat_message model
   */
  interface chat_messageFieldRefs {
    readonly id: FieldRef<"chat_message", 'Int'>
    readonly chatroom_id: FieldRef<"chat_message", 'Int'>
    readonly sender_id: FieldRef<"chat_message", 'Int'>
    readonly message: FieldRef<"chat_message", 'String'>
    readonly file_url: FieldRef<"chat_message", 'String'>
    readonly is_deleted: FieldRef<"chat_message", 'Boolean'>
    readonly created_at: FieldRef<"chat_message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * chat_message findUnique
   */
  export type chat_messageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    /**
     * Filter, which chat_message to fetch.
     */
    where: chat_messageWhereUniqueInput
  }

  /**
   * chat_message findUniqueOrThrow
   */
  export type chat_messageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    /**
     * Filter, which chat_message to fetch.
     */
    where: chat_messageWhereUniqueInput
  }

  /**
   * chat_message findFirst
   */
  export type chat_messageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    /**
     * Filter, which chat_message to fetch.
     */
    where?: chat_messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_messages to fetch.
     */
    orderBy?: chat_messageOrderByWithRelationInput | chat_messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_messages.
     */
    cursor?: chat_messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_messages.
     */
    distinct?: Chat_messageScalarFieldEnum | Chat_messageScalarFieldEnum[]
  }

  /**
   * chat_message findFirstOrThrow
   */
  export type chat_messageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    /**
     * Filter, which chat_message to fetch.
     */
    where?: chat_messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_messages to fetch.
     */
    orderBy?: chat_messageOrderByWithRelationInput | chat_messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_messages.
     */
    cursor?: chat_messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_messages.
     */
    distinct?: Chat_messageScalarFieldEnum | Chat_messageScalarFieldEnum[]
  }

  /**
   * chat_message findMany
   */
  export type chat_messageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    /**
     * Filter, which chat_messages to fetch.
     */
    where?: chat_messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_messages to fetch.
     */
    orderBy?: chat_messageOrderByWithRelationInput | chat_messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chat_messages.
     */
    cursor?: chat_messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_messages.
     */
    skip?: number
    distinct?: Chat_messageScalarFieldEnum | Chat_messageScalarFieldEnum[]
  }

  /**
   * chat_message create
   */
  export type chat_messageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    /**
     * The data needed to create a chat_message.
     */
    data: XOR<chat_messageCreateInput, chat_messageUncheckedCreateInput>
  }

  /**
   * chat_message createMany
   */
  export type chat_messageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chat_messages.
     */
    data: chat_messageCreateManyInput | chat_messageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat_message update
   */
  export type chat_messageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    /**
     * The data needed to update a chat_message.
     */
    data: XOR<chat_messageUpdateInput, chat_messageUncheckedUpdateInput>
    /**
     * Choose, which chat_message to update.
     */
    where: chat_messageWhereUniqueInput
  }

  /**
   * chat_message updateMany
   */
  export type chat_messageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chat_messages.
     */
    data: XOR<chat_messageUpdateManyMutationInput, chat_messageUncheckedUpdateManyInput>
    /**
     * Filter which chat_messages to update
     */
    where?: chat_messageWhereInput
    /**
     * Limit how many chat_messages to update.
     */
    limit?: number
  }

  /**
   * chat_message upsert
   */
  export type chat_messageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    /**
     * The filter to search for the chat_message to update in case it exists.
     */
    where: chat_messageWhereUniqueInput
    /**
     * In case the chat_message found by the `where` argument doesn't exist, create a new chat_message with this data.
     */
    create: XOR<chat_messageCreateInput, chat_messageUncheckedCreateInput>
    /**
     * In case the chat_message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chat_messageUpdateInput, chat_messageUncheckedUpdateInput>
  }

  /**
   * chat_message delete
   */
  export type chat_messageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    /**
     * Filter which chat_message to delete.
     */
    where: chat_messageWhereUniqueInput
  }

  /**
   * chat_message deleteMany
   */
  export type chat_messageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_messages to delete
     */
    where?: chat_messageWhereInput
    /**
     * Limit how many chat_messages to delete.
     */
    limit?: number
  }

  /**
   * chat_message.notification
   */
  export type chat_message$notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * chat_message without action
   */
  export type chat_messageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
  }


  /**
   * Model chat_room
   */

  export type AggregateChat_room = {
    _count: Chat_roomCountAggregateOutputType | null
    _avg: Chat_roomAvgAggregateOutputType | null
    _sum: Chat_roomSumAggregateOutputType | null
    _min: Chat_roomMinAggregateOutputType | null
    _max: Chat_roomMaxAggregateOutputType | null
  }

  export type Chat_roomAvgAggregateOutputType = {
    id: number | null
  }

  export type Chat_roomSumAggregateOutputType = {
    id: number | null
  }

  export type Chat_roomMinAggregateOutputType = {
    id: number | null
    name: string | null
    is_group: boolean | null
    created_at: Date | null
  }

  export type Chat_roomMaxAggregateOutputType = {
    id: number | null
    name: string | null
    is_group: boolean | null
    created_at: Date | null
  }

  export type Chat_roomCountAggregateOutputType = {
    id: number
    name: number
    is_group: number
    created_at: number
    _all: number
  }


  export type Chat_roomAvgAggregateInputType = {
    id?: true
  }

  export type Chat_roomSumAggregateInputType = {
    id?: true
  }

  export type Chat_roomMinAggregateInputType = {
    id?: true
    name?: true
    is_group?: true
    created_at?: true
  }

  export type Chat_roomMaxAggregateInputType = {
    id?: true
    name?: true
    is_group?: true
    created_at?: true
  }

  export type Chat_roomCountAggregateInputType = {
    id?: true
    name?: true
    is_group?: true
    created_at?: true
    _all?: true
  }

  export type Chat_roomAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_room to aggregate.
     */
    where?: chat_roomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_rooms to fetch.
     */
    orderBy?: chat_roomOrderByWithRelationInput | chat_roomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chat_roomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_rooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_rooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chat_rooms
    **/
    _count?: true | Chat_roomCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Chat_roomAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Chat_roomSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Chat_roomMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Chat_roomMaxAggregateInputType
  }

  export type GetChat_roomAggregateType<T extends Chat_roomAggregateArgs> = {
        [P in keyof T & keyof AggregateChat_room]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat_room[P]>
      : GetScalarType<T[P], AggregateChat_room[P]>
  }




  export type chat_roomGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_roomWhereInput
    orderBy?: chat_roomOrderByWithAggregationInput | chat_roomOrderByWithAggregationInput[]
    by: Chat_roomScalarFieldEnum[] | Chat_roomScalarFieldEnum
    having?: chat_roomScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Chat_roomCountAggregateInputType | true
    _avg?: Chat_roomAvgAggregateInputType
    _sum?: Chat_roomSumAggregateInputType
    _min?: Chat_roomMinAggregateInputType
    _max?: Chat_roomMaxAggregateInputType
  }

  export type Chat_roomGroupByOutputType = {
    id: number
    name: string | null
    is_group: boolean | null
    created_at: Date
    _count: Chat_roomCountAggregateOutputType | null
    _avg: Chat_roomAvgAggregateOutputType | null
    _sum: Chat_roomSumAggregateOutputType | null
    _min: Chat_roomMinAggregateOutputType | null
    _max: Chat_roomMaxAggregateOutputType | null
  }

  type GetChat_roomGroupByPayload<T extends chat_roomGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Chat_roomGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Chat_roomGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Chat_roomGroupByOutputType[P]>
            : GetScalarType<T[P], Chat_roomGroupByOutputType[P]>
        }
      >
    >


  export type chat_roomSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    is_group?: boolean
    created_at?: boolean
    chat_message?: boolean | chat_room$chat_messageArgs<ExtArgs>
    chat_room_user?: boolean | chat_room$chat_room_userArgs<ExtArgs>
    notification?: boolean | chat_room$notificationArgs<ExtArgs>
    _count?: boolean | Chat_roomCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat_room"]>



  export type chat_roomSelectScalar = {
    id?: boolean
    name?: boolean
    is_group?: boolean
    created_at?: boolean
  }

  export type chat_roomOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "is_group" | "created_at", ExtArgs["result"]["chat_room"]>
  export type chat_roomInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_message?: boolean | chat_room$chat_messageArgs<ExtArgs>
    chat_room_user?: boolean | chat_room$chat_room_userArgs<ExtArgs>
    notification?: boolean | chat_room$notificationArgs<ExtArgs>
    _count?: boolean | Chat_roomCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $chat_roomPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chat_room"
    objects: {
      chat_message: Prisma.$chat_messagePayload<ExtArgs>[]
      chat_room_user: Prisma.$chat_room_userPayload<ExtArgs>[]
      notification: Prisma.$notificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string | null
      is_group: boolean | null
      created_at: Date
    }, ExtArgs["result"]["chat_room"]>
    composites: {}
  }

  type chat_roomGetPayload<S extends boolean | null | undefined | chat_roomDefaultArgs> = $Result.GetResult<Prisma.$chat_roomPayload, S>

  type chat_roomCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chat_roomFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Chat_roomCountAggregateInputType | true
    }

  export interface chat_roomDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat_room'], meta: { name: 'chat_room' } }
    /**
     * Find zero or one Chat_room that matches the filter.
     * @param {chat_roomFindUniqueArgs} args - Arguments to find a Chat_room
     * @example
     * // Get one Chat_room
     * const chat_room = await prisma.chat_room.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chat_roomFindUniqueArgs>(args: SelectSubset<T, chat_roomFindUniqueArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chat_room that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chat_roomFindUniqueOrThrowArgs} args - Arguments to find a Chat_room
     * @example
     * // Get one Chat_room
     * const chat_room = await prisma.chat_room.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chat_roomFindUniqueOrThrowArgs>(args: SelectSubset<T, chat_roomFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_room that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_roomFindFirstArgs} args - Arguments to find a Chat_room
     * @example
     * // Get one Chat_room
     * const chat_room = await prisma.chat_room.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chat_roomFindFirstArgs>(args?: SelectSubset<T, chat_roomFindFirstArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_room that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_roomFindFirstOrThrowArgs} args - Arguments to find a Chat_room
     * @example
     * // Get one Chat_room
     * const chat_room = await prisma.chat_room.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chat_roomFindFirstOrThrowArgs>(args?: SelectSubset<T, chat_roomFindFirstOrThrowArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chat_rooms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_roomFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chat_rooms
     * const chat_rooms = await prisma.chat_room.findMany()
     * 
     * // Get first 10 Chat_rooms
     * const chat_rooms = await prisma.chat_room.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chat_roomWithIdOnly = await prisma.chat_room.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends chat_roomFindManyArgs>(args?: SelectSubset<T, chat_roomFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chat_room.
     * @param {chat_roomCreateArgs} args - Arguments to create a Chat_room.
     * @example
     * // Create one Chat_room
     * const Chat_room = await prisma.chat_room.create({
     *   data: {
     *     // ... data to create a Chat_room
     *   }
     * })
     * 
     */
    create<T extends chat_roomCreateArgs>(args: SelectSubset<T, chat_roomCreateArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chat_rooms.
     * @param {chat_roomCreateManyArgs} args - Arguments to create many Chat_rooms.
     * @example
     * // Create many Chat_rooms
     * const chat_room = await prisma.chat_room.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chat_roomCreateManyArgs>(args?: SelectSubset<T, chat_roomCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Chat_room.
     * @param {chat_roomDeleteArgs} args - Arguments to delete one Chat_room.
     * @example
     * // Delete one Chat_room
     * const Chat_room = await prisma.chat_room.delete({
     *   where: {
     *     // ... filter to delete one Chat_room
     *   }
     * })
     * 
     */
    delete<T extends chat_roomDeleteArgs>(args: SelectSubset<T, chat_roomDeleteArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chat_room.
     * @param {chat_roomUpdateArgs} args - Arguments to update one Chat_room.
     * @example
     * // Update one Chat_room
     * const chat_room = await prisma.chat_room.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chat_roomUpdateArgs>(args: SelectSubset<T, chat_roomUpdateArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chat_rooms.
     * @param {chat_roomDeleteManyArgs} args - Arguments to filter Chat_rooms to delete.
     * @example
     * // Delete a few Chat_rooms
     * const { count } = await prisma.chat_room.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chat_roomDeleteManyArgs>(args?: SelectSubset<T, chat_roomDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_rooms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_roomUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chat_rooms
     * const chat_room = await prisma.chat_room.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chat_roomUpdateManyArgs>(args: SelectSubset<T, chat_roomUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Chat_room.
     * @param {chat_roomUpsertArgs} args - Arguments to update or create a Chat_room.
     * @example
     * // Update or create a Chat_room
     * const chat_room = await prisma.chat_room.upsert({
     *   create: {
     *     // ... data to create a Chat_room
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat_room we want to update
     *   }
     * })
     */
    upsert<T extends chat_roomUpsertArgs>(args: SelectSubset<T, chat_roomUpsertArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chat_rooms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_roomCountArgs} args - Arguments to filter Chat_rooms to count.
     * @example
     * // Count the number of Chat_rooms
     * const count = await prisma.chat_room.count({
     *   where: {
     *     // ... the filter for the Chat_rooms we want to count
     *   }
     * })
    **/
    count<T extends chat_roomCountArgs>(
      args?: Subset<T, chat_roomCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Chat_roomCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat_room.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Chat_roomAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Chat_roomAggregateArgs>(args: Subset<T, Chat_roomAggregateArgs>): Prisma.PrismaPromise<GetChat_roomAggregateType<T>>

    /**
     * Group by Chat_room.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_roomGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chat_roomGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chat_roomGroupByArgs['orderBy'] }
        : { orderBy?: chat_roomGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chat_roomGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChat_roomGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chat_room model
   */
  readonly fields: chat_roomFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chat_room.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chat_roomClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat_message<T extends chat_room$chat_messageArgs<ExtArgs> = {}>(args?: Subset<T, chat_room$chat_messageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_room_user<T extends chat_room$chat_room_userArgs<ExtArgs> = {}>(args?: Subset<T, chat_room$chat_room_userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notification<T extends chat_room$notificationArgs<ExtArgs> = {}>(args?: Subset<T, chat_room$notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chat_room model
   */
  interface chat_roomFieldRefs {
    readonly id: FieldRef<"chat_room", 'Int'>
    readonly name: FieldRef<"chat_room", 'String'>
    readonly is_group: FieldRef<"chat_room", 'Boolean'>
    readonly created_at: FieldRef<"chat_room", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * chat_room findUnique
   */
  export type chat_roomFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    /**
     * Filter, which chat_room to fetch.
     */
    where: chat_roomWhereUniqueInput
  }

  /**
   * chat_room findUniqueOrThrow
   */
  export type chat_roomFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    /**
     * Filter, which chat_room to fetch.
     */
    where: chat_roomWhereUniqueInput
  }

  /**
   * chat_room findFirst
   */
  export type chat_roomFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    /**
     * Filter, which chat_room to fetch.
     */
    where?: chat_roomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_rooms to fetch.
     */
    orderBy?: chat_roomOrderByWithRelationInput | chat_roomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_rooms.
     */
    cursor?: chat_roomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_rooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_rooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_rooms.
     */
    distinct?: Chat_roomScalarFieldEnum | Chat_roomScalarFieldEnum[]
  }

  /**
   * chat_room findFirstOrThrow
   */
  export type chat_roomFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    /**
     * Filter, which chat_room to fetch.
     */
    where?: chat_roomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_rooms to fetch.
     */
    orderBy?: chat_roomOrderByWithRelationInput | chat_roomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_rooms.
     */
    cursor?: chat_roomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_rooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_rooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_rooms.
     */
    distinct?: Chat_roomScalarFieldEnum | Chat_roomScalarFieldEnum[]
  }

  /**
   * chat_room findMany
   */
  export type chat_roomFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    /**
     * Filter, which chat_rooms to fetch.
     */
    where?: chat_roomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_rooms to fetch.
     */
    orderBy?: chat_roomOrderByWithRelationInput | chat_roomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chat_rooms.
     */
    cursor?: chat_roomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_rooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_rooms.
     */
    skip?: number
    distinct?: Chat_roomScalarFieldEnum | Chat_roomScalarFieldEnum[]
  }

  /**
   * chat_room create
   */
  export type chat_roomCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    /**
     * The data needed to create a chat_room.
     */
    data?: XOR<chat_roomCreateInput, chat_roomUncheckedCreateInput>
  }

  /**
   * chat_room createMany
   */
  export type chat_roomCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chat_rooms.
     */
    data: chat_roomCreateManyInput | chat_roomCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat_room update
   */
  export type chat_roomUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    /**
     * The data needed to update a chat_room.
     */
    data: XOR<chat_roomUpdateInput, chat_roomUncheckedUpdateInput>
    /**
     * Choose, which chat_room to update.
     */
    where: chat_roomWhereUniqueInput
  }

  /**
   * chat_room updateMany
   */
  export type chat_roomUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chat_rooms.
     */
    data: XOR<chat_roomUpdateManyMutationInput, chat_roomUncheckedUpdateManyInput>
    /**
     * Filter which chat_rooms to update
     */
    where?: chat_roomWhereInput
    /**
     * Limit how many chat_rooms to update.
     */
    limit?: number
  }

  /**
   * chat_room upsert
   */
  export type chat_roomUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    /**
     * The filter to search for the chat_room to update in case it exists.
     */
    where: chat_roomWhereUniqueInput
    /**
     * In case the chat_room found by the `where` argument doesn't exist, create a new chat_room with this data.
     */
    create: XOR<chat_roomCreateInput, chat_roomUncheckedCreateInput>
    /**
     * In case the chat_room was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chat_roomUpdateInput, chat_roomUncheckedUpdateInput>
  }

  /**
   * chat_room delete
   */
  export type chat_roomDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    /**
     * Filter which chat_room to delete.
     */
    where: chat_roomWhereUniqueInput
  }

  /**
   * chat_room deleteMany
   */
  export type chat_roomDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_rooms to delete
     */
    where?: chat_roomWhereInput
    /**
     * Limit how many chat_rooms to delete.
     */
    limit?: number
  }

  /**
   * chat_room.chat_message
   */
  export type chat_room$chat_messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    where?: chat_messageWhereInput
    orderBy?: chat_messageOrderByWithRelationInput | chat_messageOrderByWithRelationInput[]
    cursor?: chat_messageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_messageScalarFieldEnum | Chat_messageScalarFieldEnum[]
  }

  /**
   * chat_room.chat_room_user
   */
  export type chat_room$chat_room_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    where?: chat_room_userWhereInput
    orderBy?: chat_room_userOrderByWithRelationInput | chat_room_userOrderByWithRelationInput[]
    cursor?: chat_room_userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_room_userScalarFieldEnum | Chat_room_userScalarFieldEnum[]
  }

  /**
   * chat_room.notification
   */
  export type chat_room$notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * chat_room without action
   */
  export type chat_roomDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
  }


  /**
   * Model chat_room_user
   */

  export type AggregateChat_room_user = {
    _count: Chat_room_userCountAggregateOutputType | null
    _avg: Chat_room_userAvgAggregateOutputType | null
    _sum: Chat_room_userSumAggregateOutputType | null
    _min: Chat_room_userMinAggregateOutputType | null
    _max: Chat_room_userMaxAggregateOutputType | null
  }

  export type Chat_room_userAvgAggregateOutputType = {
    id: number | null
    chatroom_id: number | null
    user_id: number | null
  }

  export type Chat_room_userSumAggregateOutputType = {
    id: number | null
    chatroom_id: number | null
    user_id: number | null
  }

  export type Chat_room_userMinAggregateOutputType = {
    id: number | null
    chatroom_id: number | null
    user_id: number | null
    left_at: Date | null
  }

  export type Chat_room_userMaxAggregateOutputType = {
    id: number | null
    chatroom_id: number | null
    user_id: number | null
    left_at: Date | null
  }

  export type Chat_room_userCountAggregateOutputType = {
    id: number
    chatroom_id: number
    user_id: number
    left_at: number
    _all: number
  }


  export type Chat_room_userAvgAggregateInputType = {
    id?: true
    chatroom_id?: true
    user_id?: true
  }

  export type Chat_room_userSumAggregateInputType = {
    id?: true
    chatroom_id?: true
    user_id?: true
  }

  export type Chat_room_userMinAggregateInputType = {
    id?: true
    chatroom_id?: true
    user_id?: true
    left_at?: true
  }

  export type Chat_room_userMaxAggregateInputType = {
    id?: true
    chatroom_id?: true
    user_id?: true
    left_at?: true
  }

  export type Chat_room_userCountAggregateInputType = {
    id?: true
    chatroom_id?: true
    user_id?: true
    left_at?: true
    _all?: true
  }

  export type Chat_room_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_room_user to aggregate.
     */
    where?: chat_room_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_room_users to fetch.
     */
    orderBy?: chat_room_userOrderByWithRelationInput | chat_room_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chat_room_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_room_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_room_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chat_room_users
    **/
    _count?: true | Chat_room_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Chat_room_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Chat_room_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Chat_room_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Chat_room_userMaxAggregateInputType
  }

  export type GetChat_room_userAggregateType<T extends Chat_room_userAggregateArgs> = {
        [P in keyof T & keyof AggregateChat_room_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat_room_user[P]>
      : GetScalarType<T[P], AggregateChat_room_user[P]>
  }




  export type chat_room_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_room_userWhereInput
    orderBy?: chat_room_userOrderByWithAggregationInput | chat_room_userOrderByWithAggregationInput[]
    by: Chat_room_userScalarFieldEnum[] | Chat_room_userScalarFieldEnum
    having?: chat_room_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Chat_room_userCountAggregateInputType | true
    _avg?: Chat_room_userAvgAggregateInputType
    _sum?: Chat_room_userSumAggregateInputType
    _min?: Chat_room_userMinAggregateInputType
    _max?: Chat_room_userMaxAggregateInputType
  }

  export type Chat_room_userGroupByOutputType = {
    id: number
    chatroom_id: number
    user_id: number
    left_at: Date | null
    _count: Chat_room_userCountAggregateOutputType | null
    _avg: Chat_room_userAvgAggregateOutputType | null
    _sum: Chat_room_userSumAggregateOutputType | null
    _min: Chat_room_userMinAggregateOutputType | null
    _max: Chat_room_userMaxAggregateOutputType | null
  }

  type GetChat_room_userGroupByPayload<T extends chat_room_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Chat_room_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Chat_room_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Chat_room_userGroupByOutputType[P]>
            : GetScalarType<T[P], Chat_room_userGroupByOutputType[P]>
        }
      >
    >


  export type chat_room_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chatroom_id?: boolean
    user_id?: boolean
    left_at?: boolean
    chat_room?: boolean | chat_roomDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat_room_user"]>



  export type chat_room_userSelectScalar = {
    id?: boolean
    chatroom_id?: boolean
    user_id?: boolean
    left_at?: boolean
  }

  export type chat_room_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chatroom_id" | "user_id" | "left_at", ExtArgs["result"]["chat_room_user"]>
  export type chat_room_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_room?: boolean | chat_roomDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $chat_room_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chat_room_user"
    objects: {
      chat_room: Prisma.$chat_roomPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      chatroom_id: number
      user_id: number
      left_at: Date | null
    }, ExtArgs["result"]["chat_room_user"]>
    composites: {}
  }

  type chat_room_userGetPayload<S extends boolean | null | undefined | chat_room_userDefaultArgs> = $Result.GetResult<Prisma.$chat_room_userPayload, S>

  type chat_room_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chat_room_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Chat_room_userCountAggregateInputType | true
    }

  export interface chat_room_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat_room_user'], meta: { name: 'chat_room_user' } }
    /**
     * Find zero or one Chat_room_user that matches the filter.
     * @param {chat_room_userFindUniqueArgs} args - Arguments to find a Chat_room_user
     * @example
     * // Get one Chat_room_user
     * const chat_room_user = await prisma.chat_room_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chat_room_userFindUniqueArgs>(args: SelectSubset<T, chat_room_userFindUniqueArgs<ExtArgs>>): Prisma__chat_room_userClient<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chat_room_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chat_room_userFindUniqueOrThrowArgs} args - Arguments to find a Chat_room_user
     * @example
     * // Get one Chat_room_user
     * const chat_room_user = await prisma.chat_room_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chat_room_userFindUniqueOrThrowArgs>(args: SelectSubset<T, chat_room_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chat_room_userClient<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_room_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_room_userFindFirstArgs} args - Arguments to find a Chat_room_user
     * @example
     * // Get one Chat_room_user
     * const chat_room_user = await prisma.chat_room_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chat_room_userFindFirstArgs>(args?: SelectSubset<T, chat_room_userFindFirstArgs<ExtArgs>>): Prisma__chat_room_userClient<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_room_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_room_userFindFirstOrThrowArgs} args - Arguments to find a Chat_room_user
     * @example
     * // Get one Chat_room_user
     * const chat_room_user = await prisma.chat_room_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chat_room_userFindFirstOrThrowArgs>(args?: SelectSubset<T, chat_room_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__chat_room_userClient<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chat_room_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_room_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chat_room_users
     * const chat_room_users = await prisma.chat_room_user.findMany()
     * 
     * // Get first 10 Chat_room_users
     * const chat_room_users = await prisma.chat_room_user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chat_room_userWithIdOnly = await prisma.chat_room_user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends chat_room_userFindManyArgs>(args?: SelectSubset<T, chat_room_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chat_room_user.
     * @param {chat_room_userCreateArgs} args - Arguments to create a Chat_room_user.
     * @example
     * // Create one Chat_room_user
     * const Chat_room_user = await prisma.chat_room_user.create({
     *   data: {
     *     // ... data to create a Chat_room_user
     *   }
     * })
     * 
     */
    create<T extends chat_room_userCreateArgs>(args: SelectSubset<T, chat_room_userCreateArgs<ExtArgs>>): Prisma__chat_room_userClient<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chat_room_users.
     * @param {chat_room_userCreateManyArgs} args - Arguments to create many Chat_room_users.
     * @example
     * // Create many Chat_room_users
     * const chat_room_user = await prisma.chat_room_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chat_room_userCreateManyArgs>(args?: SelectSubset<T, chat_room_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Chat_room_user.
     * @param {chat_room_userDeleteArgs} args - Arguments to delete one Chat_room_user.
     * @example
     * // Delete one Chat_room_user
     * const Chat_room_user = await prisma.chat_room_user.delete({
     *   where: {
     *     // ... filter to delete one Chat_room_user
     *   }
     * })
     * 
     */
    delete<T extends chat_room_userDeleteArgs>(args: SelectSubset<T, chat_room_userDeleteArgs<ExtArgs>>): Prisma__chat_room_userClient<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chat_room_user.
     * @param {chat_room_userUpdateArgs} args - Arguments to update one Chat_room_user.
     * @example
     * // Update one Chat_room_user
     * const chat_room_user = await prisma.chat_room_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chat_room_userUpdateArgs>(args: SelectSubset<T, chat_room_userUpdateArgs<ExtArgs>>): Prisma__chat_room_userClient<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chat_room_users.
     * @param {chat_room_userDeleteManyArgs} args - Arguments to filter Chat_room_users to delete.
     * @example
     * // Delete a few Chat_room_users
     * const { count } = await prisma.chat_room_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chat_room_userDeleteManyArgs>(args?: SelectSubset<T, chat_room_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_room_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_room_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chat_room_users
     * const chat_room_user = await prisma.chat_room_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chat_room_userUpdateManyArgs>(args: SelectSubset<T, chat_room_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Chat_room_user.
     * @param {chat_room_userUpsertArgs} args - Arguments to update or create a Chat_room_user.
     * @example
     * // Update or create a Chat_room_user
     * const chat_room_user = await prisma.chat_room_user.upsert({
     *   create: {
     *     // ... data to create a Chat_room_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat_room_user we want to update
     *   }
     * })
     */
    upsert<T extends chat_room_userUpsertArgs>(args: SelectSubset<T, chat_room_userUpsertArgs<ExtArgs>>): Prisma__chat_room_userClient<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chat_room_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_room_userCountArgs} args - Arguments to filter Chat_room_users to count.
     * @example
     * // Count the number of Chat_room_users
     * const count = await prisma.chat_room_user.count({
     *   where: {
     *     // ... the filter for the Chat_room_users we want to count
     *   }
     * })
    **/
    count<T extends chat_room_userCountArgs>(
      args?: Subset<T, chat_room_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Chat_room_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat_room_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Chat_room_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Chat_room_userAggregateArgs>(args: Subset<T, Chat_room_userAggregateArgs>): Prisma.PrismaPromise<GetChat_room_userAggregateType<T>>

    /**
     * Group by Chat_room_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_room_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chat_room_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chat_room_userGroupByArgs['orderBy'] }
        : { orderBy?: chat_room_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chat_room_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChat_room_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chat_room_user model
   */
  readonly fields: chat_room_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chat_room_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chat_room_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat_room<T extends chat_roomDefaultArgs<ExtArgs> = {}>(args?: Subset<T, chat_roomDefaultArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chat_room_user model
   */
  interface chat_room_userFieldRefs {
    readonly id: FieldRef<"chat_room_user", 'Int'>
    readonly chatroom_id: FieldRef<"chat_room_user", 'Int'>
    readonly user_id: FieldRef<"chat_room_user", 'Int'>
    readonly left_at: FieldRef<"chat_room_user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * chat_room_user findUnique
   */
  export type chat_room_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    /**
     * Filter, which chat_room_user to fetch.
     */
    where: chat_room_userWhereUniqueInput
  }

  /**
   * chat_room_user findUniqueOrThrow
   */
  export type chat_room_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    /**
     * Filter, which chat_room_user to fetch.
     */
    where: chat_room_userWhereUniqueInput
  }

  /**
   * chat_room_user findFirst
   */
  export type chat_room_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    /**
     * Filter, which chat_room_user to fetch.
     */
    where?: chat_room_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_room_users to fetch.
     */
    orderBy?: chat_room_userOrderByWithRelationInput | chat_room_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_room_users.
     */
    cursor?: chat_room_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_room_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_room_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_room_users.
     */
    distinct?: Chat_room_userScalarFieldEnum | Chat_room_userScalarFieldEnum[]
  }

  /**
   * chat_room_user findFirstOrThrow
   */
  export type chat_room_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    /**
     * Filter, which chat_room_user to fetch.
     */
    where?: chat_room_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_room_users to fetch.
     */
    orderBy?: chat_room_userOrderByWithRelationInput | chat_room_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_room_users.
     */
    cursor?: chat_room_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_room_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_room_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_room_users.
     */
    distinct?: Chat_room_userScalarFieldEnum | Chat_room_userScalarFieldEnum[]
  }

  /**
   * chat_room_user findMany
   */
  export type chat_room_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    /**
     * Filter, which chat_room_users to fetch.
     */
    where?: chat_room_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_room_users to fetch.
     */
    orderBy?: chat_room_userOrderByWithRelationInput | chat_room_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chat_room_users.
     */
    cursor?: chat_room_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_room_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_room_users.
     */
    skip?: number
    distinct?: Chat_room_userScalarFieldEnum | Chat_room_userScalarFieldEnum[]
  }

  /**
   * chat_room_user create
   */
  export type chat_room_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    /**
     * The data needed to create a chat_room_user.
     */
    data: XOR<chat_room_userCreateInput, chat_room_userUncheckedCreateInput>
  }

  /**
   * chat_room_user createMany
   */
  export type chat_room_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chat_room_users.
     */
    data: chat_room_userCreateManyInput | chat_room_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat_room_user update
   */
  export type chat_room_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    /**
     * The data needed to update a chat_room_user.
     */
    data: XOR<chat_room_userUpdateInput, chat_room_userUncheckedUpdateInput>
    /**
     * Choose, which chat_room_user to update.
     */
    where: chat_room_userWhereUniqueInput
  }

  /**
   * chat_room_user updateMany
   */
  export type chat_room_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chat_room_users.
     */
    data: XOR<chat_room_userUpdateManyMutationInput, chat_room_userUncheckedUpdateManyInput>
    /**
     * Filter which chat_room_users to update
     */
    where?: chat_room_userWhereInput
    /**
     * Limit how many chat_room_users to update.
     */
    limit?: number
  }

  /**
   * chat_room_user upsert
   */
  export type chat_room_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    /**
     * The filter to search for the chat_room_user to update in case it exists.
     */
    where: chat_room_userWhereUniqueInput
    /**
     * In case the chat_room_user found by the `where` argument doesn't exist, create a new chat_room_user with this data.
     */
    create: XOR<chat_room_userCreateInput, chat_room_userUncheckedCreateInput>
    /**
     * In case the chat_room_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chat_room_userUpdateInput, chat_room_userUncheckedUpdateInput>
  }

  /**
   * chat_room_user delete
   */
  export type chat_room_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    /**
     * Filter which chat_room_user to delete.
     */
    where: chat_room_userWhereUniqueInput
  }

  /**
   * chat_room_user deleteMany
   */
  export type chat_room_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_room_users to delete
     */
    where?: chat_room_userWhereInput
    /**
     * Limit how many chat_room_users to delete.
     */
    limit?: number
  }

  /**
   * chat_room_user without action
   */
  export type chat_room_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
  }


  /**
   * Model comment
   */

  export type AggregateComment = {
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  export type CommentAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
    user_id: number | null
    parent_id: number | null
  }

  export type CommentSumAggregateOutputType = {
    id: number | null
    post_id: number | null
    user_id: number | null
    parent_id: number | null
  }

  export type CommentMinAggregateOutputType = {
    id: number | null
    post_id: number | null
    user_id: number | null
    content: string | null
    parent_id: number | null
    is_anonymous: boolean | null
    is_blinded: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CommentMaxAggregateOutputType = {
    id: number | null
    post_id: number | null
    user_id: number | null
    content: string | null
    parent_id: number | null
    is_anonymous: boolean | null
    is_blinded: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CommentCountAggregateOutputType = {
    id: number
    post_id: number
    user_id: number
    content: number
    parent_id: number
    is_anonymous: number
    is_blinded: number
    is_deleted: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CommentAvgAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    parent_id?: true
  }

  export type CommentSumAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    parent_id?: true
  }

  export type CommentMinAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    content?: true
    parent_id?: true
    is_anonymous?: true
    is_blinded?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type CommentMaxAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    content?: true
    parent_id?: true
    is_anonymous?: true
    is_blinded?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type CommentCountAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    content?: true
    parent_id?: true
    is_anonymous?: true
    is_blinded?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comment to aggregate.
     */
    where?: commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments to fetch.
     */
    orderBy?: commentOrderByWithRelationInput | commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned comments
    **/
    _count?: true | CommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentMaxAggregateInputType
  }

  export type GetCommentAggregateType<T extends CommentAggregateArgs> = {
        [P in keyof T & keyof AggregateComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComment[P]>
      : GetScalarType<T[P], AggregateComment[P]>
  }




  export type commentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: commentWhereInput
    orderBy?: commentOrderByWithAggregationInput | commentOrderByWithAggregationInput[]
    by: CommentScalarFieldEnum[] | CommentScalarFieldEnum
    having?: commentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentCountAggregateInputType | true
    _avg?: CommentAvgAggregateInputType
    _sum?: CommentSumAggregateInputType
    _min?: CommentMinAggregateInputType
    _max?: CommentMaxAggregateInputType
  }

  export type CommentGroupByOutputType = {
    id: number
    post_id: number
    user_id: number
    content: string | null
    parent_id: number | null
    is_anonymous: boolean
    is_blinded: boolean
    is_deleted: boolean
    created_at: Date
    updated_at: Date | null
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  type GetCommentGroupByPayload<T extends commentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentGroupByOutputType[P]>
            : GetScalarType<T[P], CommentGroupByOutputType[P]>
        }
      >
    >


  export type commentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    content?: boolean
    parent_id?: boolean
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    comment?: boolean | comment$commentArgs<ExtArgs>
    other_comment?: boolean | comment$other_commentArgs<ExtArgs>
    post?: boolean | postDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    comment_like?: boolean | comment$comment_likeArgs<ExtArgs>
    notification?: boolean | comment$notificationArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>



  export type commentSelectScalar = {
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    content?: boolean
    parent_id?: boolean
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type commentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "user_id" | "content" | "parent_id" | "is_anonymous" | "is_blinded" | "is_deleted" | "created_at" | "updated_at", ExtArgs["result"]["comment"]>
  export type commentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comment?: boolean | comment$commentArgs<ExtArgs>
    other_comment?: boolean | comment$other_commentArgs<ExtArgs>
    post?: boolean | postDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    comment_like?: boolean | comment$comment_likeArgs<ExtArgs>
    notification?: boolean | comment$notificationArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $commentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "comment"
    objects: {
      comment: Prisma.$commentPayload<ExtArgs> | null
      other_comment: Prisma.$commentPayload<ExtArgs>[]
      post: Prisma.$postPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
      comment_like: Prisma.$comment_likePayload<ExtArgs>[]
      notification: Prisma.$notificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      post_id: number
      user_id: number
      content: string | null
      parent_id: number | null
      is_anonymous: boolean
      is_blinded: boolean
      is_deleted: boolean
      created_at: Date
      updated_at: Date | null
    }, ExtArgs["result"]["comment"]>
    composites: {}
  }

  type commentGetPayload<S extends boolean | null | undefined | commentDefaultArgs> = $Result.GetResult<Prisma.$commentPayload, S>

  type commentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<commentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentCountAggregateInputType | true
    }

  export interface commentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['comment'], meta: { name: 'comment' } }
    /**
     * Find zero or one Comment that matches the filter.
     * @param {commentFindUniqueArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends commentFindUniqueArgs>(args: SelectSubset<T, commentFindUniqueArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {commentFindUniqueOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends commentFindUniqueOrThrowArgs>(args: SelectSubset<T, commentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentFindFirstArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends commentFindFirstArgs>(args?: SelectSubset<T, commentFindFirstArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentFindFirstOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends commentFindFirstOrThrowArgs>(args?: SelectSubset<T, commentFindFirstOrThrowArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments
     * const comments = await prisma.comment.findMany()
     * 
     * // Get first 10 Comments
     * const comments = await prisma.comment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentWithIdOnly = await prisma.comment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends commentFindManyArgs>(args?: SelectSubset<T, commentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comment.
     * @param {commentCreateArgs} args - Arguments to create a Comment.
     * @example
     * // Create one Comment
     * const Comment = await prisma.comment.create({
     *   data: {
     *     // ... data to create a Comment
     *   }
     * })
     * 
     */
    create<T extends commentCreateArgs>(args: SelectSubset<T, commentCreateArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comments.
     * @param {commentCreateManyArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends commentCreateManyArgs>(args?: SelectSubset<T, commentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Comment.
     * @param {commentDeleteArgs} args - Arguments to delete one Comment.
     * @example
     * // Delete one Comment
     * const Comment = await prisma.comment.delete({
     *   where: {
     *     // ... filter to delete one Comment
     *   }
     * })
     * 
     */
    delete<T extends commentDeleteArgs>(args: SelectSubset<T, commentDeleteArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comment.
     * @param {commentUpdateArgs} args - Arguments to update one Comment.
     * @example
     * // Update one Comment
     * const comment = await prisma.comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends commentUpdateArgs>(args: SelectSubset<T, commentUpdateArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comments.
     * @param {commentDeleteManyArgs} args - Arguments to filter Comments to delete.
     * @example
     * // Delete a few Comments
     * const { count } = await prisma.comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends commentDeleteManyArgs>(args?: SelectSubset<T, commentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends commentUpdateManyArgs>(args: SelectSubset<T, commentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Comment.
     * @param {commentUpsertArgs} args - Arguments to update or create a Comment.
     * @example
     * // Update or create a Comment
     * const comment = await prisma.comment.upsert({
     *   create: {
     *     // ... data to create a Comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comment we want to update
     *   }
     * })
     */
    upsert<T extends commentUpsertArgs>(args: SelectSubset<T, commentUpsertArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentCountArgs} args - Arguments to filter Comments to count.
     * @example
     * // Count the number of Comments
     * const count = await prisma.comment.count({
     *   where: {
     *     // ... the filter for the Comments we want to count
     *   }
     * })
    **/
    count<T extends commentCountArgs>(
      args?: Subset<T, commentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentAggregateArgs>(args: Subset<T, CommentAggregateArgs>): Prisma.PrismaPromise<GetCommentAggregateType<T>>

    /**
     * Group by Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {commentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends commentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: commentGroupByArgs['orderBy'] }
        : { orderBy?: commentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, commentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the comment model
   */
  readonly fields: commentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__commentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comment<T extends comment$commentArgs<ExtArgs> = {}>(args?: Subset<T, comment$commentArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_comment<T extends comment$other_commentArgs<ExtArgs> = {}>(args?: Subset<T, comment$other_commentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post<T extends postDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postDefaultArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    comment_like<T extends comment$comment_likeArgs<ExtArgs> = {}>(args?: Subset<T, comment$comment_likeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notification<T extends comment$notificationArgs<ExtArgs> = {}>(args?: Subset<T, comment$notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the comment model
   */
  interface commentFieldRefs {
    readonly id: FieldRef<"comment", 'Int'>
    readonly post_id: FieldRef<"comment", 'Int'>
    readonly user_id: FieldRef<"comment", 'Int'>
    readonly content: FieldRef<"comment", 'String'>
    readonly parent_id: FieldRef<"comment", 'Int'>
    readonly is_anonymous: FieldRef<"comment", 'Boolean'>
    readonly is_blinded: FieldRef<"comment", 'Boolean'>
    readonly is_deleted: FieldRef<"comment", 'Boolean'>
    readonly created_at: FieldRef<"comment", 'DateTime'>
    readonly updated_at: FieldRef<"comment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * comment findUnique
   */
  export type commentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    /**
     * Filter, which comment to fetch.
     */
    where: commentWhereUniqueInput
  }

  /**
   * comment findUniqueOrThrow
   */
  export type commentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    /**
     * Filter, which comment to fetch.
     */
    where: commentWhereUniqueInput
  }

  /**
   * comment findFirst
   */
  export type commentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    /**
     * Filter, which comment to fetch.
     */
    where?: commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments to fetch.
     */
    orderBy?: commentOrderByWithRelationInput | commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comments.
     */
    cursor?: commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * comment findFirstOrThrow
   */
  export type commentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    /**
     * Filter, which comment to fetch.
     */
    where?: commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments to fetch.
     */
    orderBy?: commentOrderByWithRelationInput | commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comments.
     */
    cursor?: commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * comment findMany
   */
  export type commentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    /**
     * Filter, which comments to fetch.
     */
    where?: commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comments to fetch.
     */
    orderBy?: commentOrderByWithRelationInput | commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing comments.
     */
    cursor?: commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comments.
     */
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * comment create
   */
  export type commentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    /**
     * The data needed to create a comment.
     */
    data: XOR<commentCreateInput, commentUncheckedCreateInput>
  }

  /**
   * comment createMany
   */
  export type commentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many comments.
     */
    data: commentCreateManyInput | commentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * comment update
   */
  export type commentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    /**
     * The data needed to update a comment.
     */
    data: XOR<commentUpdateInput, commentUncheckedUpdateInput>
    /**
     * Choose, which comment to update.
     */
    where: commentWhereUniqueInput
  }

  /**
   * comment updateMany
   */
  export type commentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update comments.
     */
    data: XOR<commentUpdateManyMutationInput, commentUncheckedUpdateManyInput>
    /**
     * Filter which comments to update
     */
    where?: commentWhereInput
    /**
     * Limit how many comments to update.
     */
    limit?: number
  }

  /**
   * comment upsert
   */
  export type commentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    /**
     * The filter to search for the comment to update in case it exists.
     */
    where: commentWhereUniqueInput
    /**
     * In case the comment found by the `where` argument doesn't exist, create a new comment with this data.
     */
    create: XOR<commentCreateInput, commentUncheckedCreateInput>
    /**
     * In case the comment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<commentUpdateInput, commentUncheckedUpdateInput>
  }

  /**
   * comment delete
   */
  export type commentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    /**
     * Filter which comment to delete.
     */
    where: commentWhereUniqueInput
  }

  /**
   * comment deleteMany
   */
  export type commentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comments to delete
     */
    where?: commentWhereInput
    /**
     * Limit how many comments to delete.
     */
    limit?: number
  }

  /**
   * comment.comment
   */
  export type comment$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    where?: commentWhereInput
  }

  /**
   * comment.other_comment
   */
  export type comment$other_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    where?: commentWhereInput
    orderBy?: commentOrderByWithRelationInput | commentOrderByWithRelationInput[]
    cursor?: commentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * comment.comment_like
   */
  export type comment$comment_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    where?: comment_likeWhereInput
    orderBy?: comment_likeOrderByWithRelationInput | comment_likeOrderByWithRelationInput[]
    cursor?: comment_likeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Comment_likeScalarFieldEnum | Comment_likeScalarFieldEnum[]
  }

  /**
   * comment.notification
   */
  export type comment$notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * comment without action
   */
  export type commentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
  }


  /**
   * Model comment_like
   */

  export type AggregateComment_like = {
    _count: Comment_likeCountAggregateOutputType | null
    _avg: Comment_likeAvgAggregateOutputType | null
    _sum: Comment_likeSumAggregateOutputType | null
    _min: Comment_likeMinAggregateOutputType | null
    _max: Comment_likeMaxAggregateOutputType | null
  }

  export type Comment_likeAvgAggregateOutputType = {
    id: number | null
    comment_id: number | null
    user_id: number | null
  }

  export type Comment_likeSumAggregateOutputType = {
    id: number | null
    comment_id: number | null
    user_id: number | null
  }

  export type Comment_likeMinAggregateOutputType = {
    id: number | null
    comment_id: number | null
    user_id: number | null
    created_at: Date | null
  }

  export type Comment_likeMaxAggregateOutputType = {
    id: number | null
    comment_id: number | null
    user_id: number | null
    created_at: Date | null
  }

  export type Comment_likeCountAggregateOutputType = {
    id: number
    comment_id: number
    user_id: number
    created_at: number
    _all: number
  }


  export type Comment_likeAvgAggregateInputType = {
    id?: true
    comment_id?: true
    user_id?: true
  }

  export type Comment_likeSumAggregateInputType = {
    id?: true
    comment_id?: true
    user_id?: true
  }

  export type Comment_likeMinAggregateInputType = {
    id?: true
    comment_id?: true
    user_id?: true
    created_at?: true
  }

  export type Comment_likeMaxAggregateInputType = {
    id?: true
    comment_id?: true
    user_id?: true
    created_at?: true
  }

  export type Comment_likeCountAggregateInputType = {
    id?: true
    comment_id?: true
    user_id?: true
    created_at?: true
    _all?: true
  }

  export type Comment_likeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comment_like to aggregate.
     */
    where?: comment_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comment_likes to fetch.
     */
    orderBy?: comment_likeOrderByWithRelationInput | comment_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: comment_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comment_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comment_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned comment_likes
    **/
    _count?: true | Comment_likeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Comment_likeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Comment_likeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Comment_likeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Comment_likeMaxAggregateInputType
  }

  export type GetComment_likeAggregateType<T extends Comment_likeAggregateArgs> = {
        [P in keyof T & keyof AggregateComment_like]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComment_like[P]>
      : GetScalarType<T[P], AggregateComment_like[P]>
  }




  export type comment_likeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comment_likeWhereInput
    orderBy?: comment_likeOrderByWithAggregationInput | comment_likeOrderByWithAggregationInput[]
    by: Comment_likeScalarFieldEnum[] | Comment_likeScalarFieldEnum
    having?: comment_likeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Comment_likeCountAggregateInputType | true
    _avg?: Comment_likeAvgAggregateInputType
    _sum?: Comment_likeSumAggregateInputType
    _min?: Comment_likeMinAggregateInputType
    _max?: Comment_likeMaxAggregateInputType
  }

  export type Comment_likeGroupByOutputType = {
    id: number
    comment_id: number
    user_id: number
    created_at: Date
    _count: Comment_likeCountAggregateOutputType | null
    _avg: Comment_likeAvgAggregateOutputType | null
    _sum: Comment_likeSumAggregateOutputType | null
    _min: Comment_likeMinAggregateOutputType | null
    _max: Comment_likeMaxAggregateOutputType | null
  }

  type GetComment_likeGroupByPayload<T extends comment_likeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Comment_likeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Comment_likeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Comment_likeGroupByOutputType[P]>
            : GetScalarType<T[P], Comment_likeGroupByOutputType[P]>
        }
      >
    >


  export type comment_likeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    comment_id?: boolean
    user_id?: boolean
    created_at?: boolean
    comment?: boolean | commentDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment_like"]>



  export type comment_likeSelectScalar = {
    id?: boolean
    comment_id?: boolean
    user_id?: boolean
    created_at?: boolean
  }

  export type comment_likeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "comment_id" | "user_id" | "created_at", ExtArgs["result"]["comment_like"]>
  export type comment_likeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comment?: boolean | commentDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $comment_likePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "comment_like"
    objects: {
      comment: Prisma.$commentPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      comment_id: number
      user_id: number
      created_at: Date
    }, ExtArgs["result"]["comment_like"]>
    composites: {}
  }

  type comment_likeGetPayload<S extends boolean | null | undefined | comment_likeDefaultArgs> = $Result.GetResult<Prisma.$comment_likePayload, S>

  type comment_likeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<comment_likeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Comment_likeCountAggregateInputType | true
    }

  export interface comment_likeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['comment_like'], meta: { name: 'comment_like' } }
    /**
     * Find zero or one Comment_like that matches the filter.
     * @param {comment_likeFindUniqueArgs} args - Arguments to find a Comment_like
     * @example
     * // Get one Comment_like
     * const comment_like = await prisma.comment_like.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends comment_likeFindUniqueArgs>(args: SelectSubset<T, comment_likeFindUniqueArgs<ExtArgs>>): Prisma__comment_likeClient<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comment_like that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {comment_likeFindUniqueOrThrowArgs} args - Arguments to find a Comment_like
     * @example
     * // Get one Comment_like
     * const comment_like = await prisma.comment_like.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends comment_likeFindUniqueOrThrowArgs>(args: SelectSubset<T, comment_likeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__comment_likeClient<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment_like that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comment_likeFindFirstArgs} args - Arguments to find a Comment_like
     * @example
     * // Get one Comment_like
     * const comment_like = await prisma.comment_like.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends comment_likeFindFirstArgs>(args?: SelectSubset<T, comment_likeFindFirstArgs<ExtArgs>>): Prisma__comment_likeClient<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment_like that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comment_likeFindFirstOrThrowArgs} args - Arguments to find a Comment_like
     * @example
     * // Get one Comment_like
     * const comment_like = await prisma.comment_like.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends comment_likeFindFirstOrThrowArgs>(args?: SelectSubset<T, comment_likeFindFirstOrThrowArgs<ExtArgs>>): Prisma__comment_likeClient<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comment_likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comment_likeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comment_likes
     * const comment_likes = await prisma.comment_like.findMany()
     * 
     * // Get first 10 Comment_likes
     * const comment_likes = await prisma.comment_like.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const comment_likeWithIdOnly = await prisma.comment_like.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends comment_likeFindManyArgs>(args?: SelectSubset<T, comment_likeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comment_like.
     * @param {comment_likeCreateArgs} args - Arguments to create a Comment_like.
     * @example
     * // Create one Comment_like
     * const Comment_like = await prisma.comment_like.create({
     *   data: {
     *     // ... data to create a Comment_like
     *   }
     * })
     * 
     */
    create<T extends comment_likeCreateArgs>(args: SelectSubset<T, comment_likeCreateArgs<ExtArgs>>): Prisma__comment_likeClient<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comment_likes.
     * @param {comment_likeCreateManyArgs} args - Arguments to create many Comment_likes.
     * @example
     * // Create many Comment_likes
     * const comment_like = await prisma.comment_like.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends comment_likeCreateManyArgs>(args?: SelectSubset<T, comment_likeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Comment_like.
     * @param {comment_likeDeleteArgs} args - Arguments to delete one Comment_like.
     * @example
     * // Delete one Comment_like
     * const Comment_like = await prisma.comment_like.delete({
     *   where: {
     *     // ... filter to delete one Comment_like
     *   }
     * })
     * 
     */
    delete<T extends comment_likeDeleteArgs>(args: SelectSubset<T, comment_likeDeleteArgs<ExtArgs>>): Prisma__comment_likeClient<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comment_like.
     * @param {comment_likeUpdateArgs} args - Arguments to update one Comment_like.
     * @example
     * // Update one Comment_like
     * const comment_like = await prisma.comment_like.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends comment_likeUpdateArgs>(args: SelectSubset<T, comment_likeUpdateArgs<ExtArgs>>): Prisma__comment_likeClient<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comment_likes.
     * @param {comment_likeDeleteManyArgs} args - Arguments to filter Comment_likes to delete.
     * @example
     * // Delete a few Comment_likes
     * const { count } = await prisma.comment_like.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends comment_likeDeleteManyArgs>(args?: SelectSubset<T, comment_likeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comment_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comment_likeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comment_likes
     * const comment_like = await prisma.comment_like.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends comment_likeUpdateManyArgs>(args: SelectSubset<T, comment_likeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Comment_like.
     * @param {comment_likeUpsertArgs} args - Arguments to update or create a Comment_like.
     * @example
     * // Update or create a Comment_like
     * const comment_like = await prisma.comment_like.upsert({
     *   create: {
     *     // ... data to create a Comment_like
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comment_like we want to update
     *   }
     * })
     */
    upsert<T extends comment_likeUpsertArgs>(args: SelectSubset<T, comment_likeUpsertArgs<ExtArgs>>): Prisma__comment_likeClient<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comment_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comment_likeCountArgs} args - Arguments to filter Comment_likes to count.
     * @example
     * // Count the number of Comment_likes
     * const count = await prisma.comment_like.count({
     *   where: {
     *     // ... the filter for the Comment_likes we want to count
     *   }
     * })
    **/
    count<T extends comment_likeCountArgs>(
      args?: Subset<T, comment_likeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Comment_likeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comment_like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Comment_likeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Comment_likeAggregateArgs>(args: Subset<T, Comment_likeAggregateArgs>): Prisma.PrismaPromise<GetComment_likeAggregateType<T>>

    /**
     * Group by Comment_like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comment_likeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends comment_likeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: comment_likeGroupByArgs['orderBy'] }
        : { orderBy?: comment_likeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, comment_likeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComment_likeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the comment_like model
   */
  readonly fields: comment_likeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for comment_like.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__comment_likeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comment<T extends commentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, commentDefaultArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the comment_like model
   */
  interface comment_likeFieldRefs {
    readonly id: FieldRef<"comment_like", 'Int'>
    readonly comment_id: FieldRef<"comment_like", 'Int'>
    readonly user_id: FieldRef<"comment_like", 'Int'>
    readonly created_at: FieldRef<"comment_like", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * comment_like findUnique
   */
  export type comment_likeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    /**
     * Filter, which comment_like to fetch.
     */
    where: comment_likeWhereUniqueInput
  }

  /**
   * comment_like findUniqueOrThrow
   */
  export type comment_likeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    /**
     * Filter, which comment_like to fetch.
     */
    where: comment_likeWhereUniqueInput
  }

  /**
   * comment_like findFirst
   */
  export type comment_likeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    /**
     * Filter, which comment_like to fetch.
     */
    where?: comment_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comment_likes to fetch.
     */
    orderBy?: comment_likeOrderByWithRelationInput | comment_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comment_likes.
     */
    cursor?: comment_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comment_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comment_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comment_likes.
     */
    distinct?: Comment_likeScalarFieldEnum | Comment_likeScalarFieldEnum[]
  }

  /**
   * comment_like findFirstOrThrow
   */
  export type comment_likeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    /**
     * Filter, which comment_like to fetch.
     */
    where?: comment_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comment_likes to fetch.
     */
    orderBy?: comment_likeOrderByWithRelationInput | comment_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for comment_likes.
     */
    cursor?: comment_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comment_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comment_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of comment_likes.
     */
    distinct?: Comment_likeScalarFieldEnum | Comment_likeScalarFieldEnum[]
  }

  /**
   * comment_like findMany
   */
  export type comment_likeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    /**
     * Filter, which comment_likes to fetch.
     */
    where?: comment_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of comment_likes to fetch.
     */
    orderBy?: comment_likeOrderByWithRelationInput | comment_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing comment_likes.
     */
    cursor?: comment_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` comment_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` comment_likes.
     */
    skip?: number
    distinct?: Comment_likeScalarFieldEnum | Comment_likeScalarFieldEnum[]
  }

  /**
   * comment_like create
   */
  export type comment_likeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    /**
     * The data needed to create a comment_like.
     */
    data: XOR<comment_likeCreateInput, comment_likeUncheckedCreateInput>
  }

  /**
   * comment_like createMany
   */
  export type comment_likeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many comment_likes.
     */
    data: comment_likeCreateManyInput | comment_likeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * comment_like update
   */
  export type comment_likeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    /**
     * The data needed to update a comment_like.
     */
    data: XOR<comment_likeUpdateInput, comment_likeUncheckedUpdateInput>
    /**
     * Choose, which comment_like to update.
     */
    where: comment_likeWhereUniqueInput
  }

  /**
   * comment_like updateMany
   */
  export type comment_likeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update comment_likes.
     */
    data: XOR<comment_likeUpdateManyMutationInput, comment_likeUncheckedUpdateManyInput>
    /**
     * Filter which comment_likes to update
     */
    where?: comment_likeWhereInput
    /**
     * Limit how many comment_likes to update.
     */
    limit?: number
  }

  /**
   * comment_like upsert
   */
  export type comment_likeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    /**
     * The filter to search for the comment_like to update in case it exists.
     */
    where: comment_likeWhereUniqueInput
    /**
     * In case the comment_like found by the `where` argument doesn't exist, create a new comment_like with this data.
     */
    create: XOR<comment_likeCreateInput, comment_likeUncheckedCreateInput>
    /**
     * In case the comment_like was found with the provided `where` argument, update it with this data.
     */
    update: XOR<comment_likeUpdateInput, comment_likeUncheckedUpdateInput>
  }

  /**
   * comment_like delete
   */
  export type comment_likeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    /**
     * Filter which comment_like to delete.
     */
    where: comment_likeWhereUniqueInput
  }

  /**
   * comment_like deleteMany
   */
  export type comment_likeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which comment_likes to delete
     */
    where?: comment_likeWhereInput
    /**
     * Limit how many comment_likes to delete.
     */
    limit?: number
  }

  /**
   * comment_like without action
   */
  export type comment_likeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
  }


  /**
   * Model community
   */

  export type AggregateCommunity = {
    _count: CommunityCountAggregateOutputType | null
    _avg: CommunityAvgAggregateOutputType | null
    _sum: CommunitySumAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  export type CommunityAvgAggregateOutputType = {
    id: number | null
    admin_id: number | null
  }

  export type CommunitySumAggregateOutputType = {
    id: number | null
    admin_id: number | null
  }

  export type CommunityMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    admin_id: number | null
    is_private: boolean | null
    created_at: Date | null
  }

  export type CommunityMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    admin_id: number | null
    is_private: boolean | null
    created_at: Date | null
  }

  export type CommunityCountAggregateOutputType = {
    id: number
    name: number
    description: number
    admin_id: number
    is_private: number
    created_at: number
    _all: number
  }


  export type CommunityAvgAggregateInputType = {
    id?: true
    admin_id?: true
  }

  export type CommunitySumAggregateInputType = {
    id?: true
    admin_id?: true
  }

  export type CommunityMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    admin_id?: true
    is_private?: true
    created_at?: true
  }

  export type CommunityMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    admin_id?: true
    is_private?: true
    created_at?: true
  }

  export type CommunityCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    admin_id?: true
    is_private?: true
    created_at?: true
    _all?: true
  }

  export type CommunityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community to aggregate.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned communities
    **/
    _count?: true | CommunityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommunityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommunitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunityMaxAggregateInputType
  }

  export type GetCommunityAggregateType<T extends CommunityAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity[P]>
      : GetScalarType<T[P], AggregateCommunity[P]>
  }




  export type communityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communityWhereInput
    orderBy?: communityOrderByWithAggregationInput | communityOrderByWithAggregationInput[]
    by: CommunityScalarFieldEnum[] | CommunityScalarFieldEnum
    having?: communityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunityCountAggregateInputType | true
    _avg?: CommunityAvgAggregateInputType
    _sum?: CommunitySumAggregateInputType
    _min?: CommunityMinAggregateInputType
    _max?: CommunityMaxAggregateInputType
  }

  export type CommunityGroupByOutputType = {
    id: number
    name: string
    description: string | null
    admin_id: number | null
    is_private: boolean
    created_at: Date
    _count: CommunityCountAggregateOutputType | null
    _avg: CommunityAvgAggregateOutputType | null
    _sum: CommunitySumAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  type GetCommunityGroupByPayload<T extends communityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunityGroupByOutputType[P]>
            : GetScalarType<T[P], CommunityGroupByOutputType[P]>
        }
      >
    >


  export type communitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    admin_id?: boolean
    is_private?: boolean
    created_at?: boolean
    user?: boolean | community$userArgs<ExtArgs>
    post?: boolean | community$postArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community"]>



  export type communitySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    admin_id?: boolean
    is_private?: boolean
    created_at?: boolean
  }

  export type communityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "admin_id" | "is_private" | "created_at", ExtArgs["result"]["community"]>
  export type communityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | community$userArgs<ExtArgs>
    post?: boolean | community$postArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $communityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community"
    objects: {
      user: Prisma.$userPayload<ExtArgs> | null
      post: Prisma.$postPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      admin_id: number | null
      is_private: boolean
      created_at: Date
    }, ExtArgs["result"]["community"]>
    composites: {}
  }

  type communityGetPayload<S extends boolean | null | undefined | communityDefaultArgs> = $Result.GetResult<Prisma.$communityPayload, S>

  type communityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<communityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommunityCountAggregateInputType | true
    }

  export interface communityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community'], meta: { name: 'community' } }
    /**
     * Find zero or one Community that matches the filter.
     * @param {communityFindUniqueArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends communityFindUniqueArgs>(args: SelectSubset<T, communityFindUniqueArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Community that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {communityFindUniqueOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends communityFindUniqueOrThrowArgs>(args: SelectSubset<T, communityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Community that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindFirstArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends communityFindFirstArgs>(args?: SelectSubset<T, communityFindFirstArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Community that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindFirstOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends communityFindFirstOrThrowArgs>(args?: SelectSubset<T, communityFindFirstOrThrowArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Communities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communities
     * const communities = await prisma.community.findMany()
     * 
     * // Get first 10 Communities
     * const communities = await prisma.community.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const communityWithIdOnly = await prisma.community.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends communityFindManyArgs>(args?: SelectSubset<T, communityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Community.
     * @param {communityCreateArgs} args - Arguments to create a Community.
     * @example
     * // Create one Community
     * const Community = await prisma.community.create({
     *   data: {
     *     // ... data to create a Community
     *   }
     * })
     * 
     */
    create<T extends communityCreateArgs>(args: SelectSubset<T, communityCreateArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Communities.
     * @param {communityCreateManyArgs} args - Arguments to create many Communities.
     * @example
     * // Create many Communities
     * const community = await prisma.community.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends communityCreateManyArgs>(args?: SelectSubset<T, communityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Community.
     * @param {communityDeleteArgs} args - Arguments to delete one Community.
     * @example
     * // Delete one Community
     * const Community = await prisma.community.delete({
     *   where: {
     *     // ... filter to delete one Community
     *   }
     * })
     * 
     */
    delete<T extends communityDeleteArgs>(args: SelectSubset<T, communityDeleteArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Community.
     * @param {communityUpdateArgs} args - Arguments to update one Community.
     * @example
     * // Update one Community
     * const community = await prisma.community.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends communityUpdateArgs>(args: SelectSubset<T, communityUpdateArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Communities.
     * @param {communityDeleteManyArgs} args - Arguments to filter Communities to delete.
     * @example
     * // Delete a few Communities
     * const { count } = await prisma.community.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends communityDeleteManyArgs>(args?: SelectSubset<T, communityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communities
     * const community = await prisma.community.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends communityUpdateManyArgs>(args: SelectSubset<T, communityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Community.
     * @param {communityUpsertArgs} args - Arguments to update or create a Community.
     * @example
     * // Update or create a Community
     * const community = await prisma.community.upsert({
     *   create: {
     *     // ... data to create a Community
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community we want to update
     *   }
     * })
     */
    upsert<T extends communityUpsertArgs>(args: SelectSubset<T, communityUpsertArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityCountArgs} args - Arguments to filter Communities to count.
     * @example
     * // Count the number of Communities
     * const count = await prisma.community.count({
     *   where: {
     *     // ... the filter for the Communities we want to count
     *   }
     * })
    **/
    count<T extends communityCountArgs>(
      args?: Subset<T, communityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunityAggregateArgs>(args: Subset<T, CommunityAggregateArgs>): Prisma.PrismaPromise<GetCommunityAggregateType<T>>

    /**
     * Group by Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends communityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: communityGroupByArgs['orderBy'] }
        : { orderBy?: communityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, communityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community model
   */
  readonly fields: communityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__communityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends community$userArgs<ExtArgs> = {}>(args?: Subset<T, community$userArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    post<T extends community$postArgs<ExtArgs> = {}>(args?: Subset<T, community$postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the community model
   */
  interface communityFieldRefs {
    readonly id: FieldRef<"community", 'Int'>
    readonly name: FieldRef<"community", 'String'>
    readonly description: FieldRef<"community", 'String'>
    readonly admin_id: FieldRef<"community", 'Int'>
    readonly is_private: FieldRef<"community", 'Boolean'>
    readonly created_at: FieldRef<"community", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community findUnique
   */
  export type communityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community findUniqueOrThrow
   */
  export type communityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community findFirst
   */
  export type communityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community findFirstOrThrow
   */
  export type communityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community findMany
   */
  export type communityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which communities to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community create
   */
  export type communityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The data needed to create a community.
     */
    data: XOR<communityCreateInput, communityUncheckedCreateInput>
  }

  /**
   * community createMany
   */
  export type communityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many communities.
     */
    data: communityCreateManyInput | communityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community update
   */
  export type communityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The data needed to update a community.
     */
    data: XOR<communityUpdateInput, communityUncheckedUpdateInput>
    /**
     * Choose, which community to update.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community updateMany
   */
  export type communityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update communities.
     */
    data: XOR<communityUpdateManyMutationInput, communityUncheckedUpdateManyInput>
    /**
     * Filter which communities to update
     */
    where?: communityWhereInput
    /**
     * Limit how many communities to update.
     */
    limit?: number
  }

  /**
   * community upsert
   */
  export type communityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The filter to search for the community to update in case it exists.
     */
    where: communityWhereUniqueInput
    /**
     * In case the community found by the `where` argument doesn't exist, create a new community with this data.
     */
    create: XOR<communityCreateInput, communityUncheckedCreateInput>
    /**
     * In case the community was found with the provided `where` argument, update it with this data.
     */
    update: XOR<communityUpdateInput, communityUncheckedUpdateInput>
  }

  /**
   * community delete
   */
  export type communityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter which community to delete.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community deleteMany
   */
  export type communityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communities to delete
     */
    where?: communityWhereInput
    /**
     * Limit how many communities to delete.
     */
    limit?: number
  }

  /**
   * community.user
   */
  export type community$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * community.post
   */
  export type community$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    where?: postWhereInput
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    cursor?: postWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * community without action
   */
  export type communityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
  }


  /**
   * Model emoji
   */

  export type AggregateEmoji = {
    _count: EmojiCountAggregateOutputType | null
    _avg: EmojiAvgAggregateOutputType | null
    _sum: EmojiSumAggregateOutputType | null
    _min: EmojiMinAggregateOutputType | null
    _max: EmojiMaxAggregateOutputType | null
  }

  export type EmojiAvgAggregateOutputType = {
    id: number | null
  }

  export type EmojiSumAggregateOutputType = {
    id: number | null
  }

  export type EmojiMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type EmojiMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type EmojiCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type EmojiAvgAggregateInputType = {
    id?: true
  }

  export type EmojiSumAggregateInputType = {
    id?: true
  }

  export type EmojiMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type EmojiMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type EmojiCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type EmojiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which emoji to aggregate.
     */
    where?: emojiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emojis to fetch.
     */
    orderBy?: emojiOrderByWithRelationInput | emojiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: emojiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emojis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emojis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned emojis
    **/
    _count?: true | EmojiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmojiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmojiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmojiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmojiMaxAggregateInputType
  }

  export type GetEmojiAggregateType<T extends EmojiAggregateArgs> = {
        [P in keyof T & keyof AggregateEmoji]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmoji[P]>
      : GetScalarType<T[P], AggregateEmoji[P]>
  }




  export type emojiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: emojiWhereInput
    orderBy?: emojiOrderByWithAggregationInput | emojiOrderByWithAggregationInput[]
    by: EmojiScalarFieldEnum[] | EmojiScalarFieldEnum
    having?: emojiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmojiCountAggregateInputType | true
    _avg?: EmojiAvgAggregateInputType
    _sum?: EmojiSumAggregateInputType
    _min?: EmojiMinAggregateInputType
    _max?: EmojiMaxAggregateInputType
  }

  export type EmojiGroupByOutputType = {
    id: number
    name: string
    _count: EmojiCountAggregateOutputType | null
    _avg: EmojiAvgAggregateOutputType | null
    _sum: EmojiSumAggregateOutputType | null
    _min: EmojiMinAggregateOutputType | null
    _max: EmojiMaxAggregateOutputType | null
  }

  type GetEmojiGroupByPayload<T extends emojiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmojiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmojiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmojiGroupByOutputType[P]>
            : GetScalarType<T[P], EmojiGroupByOutputType[P]>
        }
      >
    >


  export type emojiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    post_reaction?: boolean | emoji$post_reactionArgs<ExtArgs>
    _count?: boolean | EmojiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["emoji"]>



  export type emojiSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type emojiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["emoji"]>
  export type emojiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_reaction?: boolean | emoji$post_reactionArgs<ExtArgs>
    _count?: boolean | EmojiCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $emojiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "emoji"
    objects: {
      post_reaction: Prisma.$post_reactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["emoji"]>
    composites: {}
  }

  type emojiGetPayload<S extends boolean | null | undefined | emojiDefaultArgs> = $Result.GetResult<Prisma.$emojiPayload, S>

  type emojiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<emojiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmojiCountAggregateInputType | true
    }

  export interface emojiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['emoji'], meta: { name: 'emoji' } }
    /**
     * Find zero or one Emoji that matches the filter.
     * @param {emojiFindUniqueArgs} args - Arguments to find a Emoji
     * @example
     * // Get one Emoji
     * const emoji = await prisma.emoji.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends emojiFindUniqueArgs>(args: SelectSubset<T, emojiFindUniqueArgs<ExtArgs>>): Prisma__emojiClient<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Emoji that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {emojiFindUniqueOrThrowArgs} args - Arguments to find a Emoji
     * @example
     * // Get one Emoji
     * const emoji = await prisma.emoji.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends emojiFindUniqueOrThrowArgs>(args: SelectSubset<T, emojiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__emojiClient<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Emoji that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emojiFindFirstArgs} args - Arguments to find a Emoji
     * @example
     * // Get one Emoji
     * const emoji = await prisma.emoji.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends emojiFindFirstArgs>(args?: SelectSubset<T, emojiFindFirstArgs<ExtArgs>>): Prisma__emojiClient<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Emoji that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emojiFindFirstOrThrowArgs} args - Arguments to find a Emoji
     * @example
     * // Get one Emoji
     * const emoji = await prisma.emoji.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends emojiFindFirstOrThrowArgs>(args?: SelectSubset<T, emojiFindFirstOrThrowArgs<ExtArgs>>): Prisma__emojiClient<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Emojis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emojiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Emojis
     * const emojis = await prisma.emoji.findMany()
     * 
     * // Get first 10 Emojis
     * const emojis = await prisma.emoji.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const emojiWithIdOnly = await prisma.emoji.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends emojiFindManyArgs>(args?: SelectSubset<T, emojiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Emoji.
     * @param {emojiCreateArgs} args - Arguments to create a Emoji.
     * @example
     * // Create one Emoji
     * const Emoji = await prisma.emoji.create({
     *   data: {
     *     // ... data to create a Emoji
     *   }
     * })
     * 
     */
    create<T extends emojiCreateArgs>(args: SelectSubset<T, emojiCreateArgs<ExtArgs>>): Prisma__emojiClient<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Emojis.
     * @param {emojiCreateManyArgs} args - Arguments to create many Emojis.
     * @example
     * // Create many Emojis
     * const emoji = await prisma.emoji.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends emojiCreateManyArgs>(args?: SelectSubset<T, emojiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Emoji.
     * @param {emojiDeleteArgs} args - Arguments to delete one Emoji.
     * @example
     * // Delete one Emoji
     * const Emoji = await prisma.emoji.delete({
     *   where: {
     *     // ... filter to delete one Emoji
     *   }
     * })
     * 
     */
    delete<T extends emojiDeleteArgs>(args: SelectSubset<T, emojiDeleteArgs<ExtArgs>>): Prisma__emojiClient<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Emoji.
     * @param {emojiUpdateArgs} args - Arguments to update one Emoji.
     * @example
     * // Update one Emoji
     * const emoji = await prisma.emoji.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends emojiUpdateArgs>(args: SelectSubset<T, emojiUpdateArgs<ExtArgs>>): Prisma__emojiClient<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Emojis.
     * @param {emojiDeleteManyArgs} args - Arguments to filter Emojis to delete.
     * @example
     * // Delete a few Emojis
     * const { count } = await prisma.emoji.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends emojiDeleteManyArgs>(args?: SelectSubset<T, emojiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emojis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emojiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Emojis
     * const emoji = await prisma.emoji.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends emojiUpdateManyArgs>(args: SelectSubset<T, emojiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Emoji.
     * @param {emojiUpsertArgs} args - Arguments to update or create a Emoji.
     * @example
     * // Update or create a Emoji
     * const emoji = await prisma.emoji.upsert({
     *   create: {
     *     // ... data to create a Emoji
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Emoji we want to update
     *   }
     * })
     */
    upsert<T extends emojiUpsertArgs>(args: SelectSubset<T, emojiUpsertArgs<ExtArgs>>): Prisma__emojiClient<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Emojis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emojiCountArgs} args - Arguments to filter Emojis to count.
     * @example
     * // Count the number of Emojis
     * const count = await prisma.emoji.count({
     *   where: {
     *     // ... the filter for the Emojis we want to count
     *   }
     * })
    **/
    count<T extends emojiCountArgs>(
      args?: Subset<T, emojiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmojiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Emoji.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmojiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmojiAggregateArgs>(args: Subset<T, EmojiAggregateArgs>): Prisma.PrismaPromise<GetEmojiAggregateType<T>>

    /**
     * Group by Emoji.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emojiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends emojiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: emojiGroupByArgs['orderBy'] }
        : { orderBy?: emojiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, emojiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmojiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the emoji model
   */
  readonly fields: emojiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for emoji.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__emojiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post_reaction<T extends emoji$post_reactionArgs<ExtArgs> = {}>(args?: Subset<T, emoji$post_reactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the emoji model
   */
  interface emojiFieldRefs {
    readonly id: FieldRef<"emoji", 'Int'>
    readonly name: FieldRef<"emoji", 'String'>
  }
    

  // Custom InputTypes
  /**
   * emoji findUnique
   */
  export type emojiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
    /**
     * Filter, which emoji to fetch.
     */
    where: emojiWhereUniqueInput
  }

  /**
   * emoji findUniqueOrThrow
   */
  export type emojiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
    /**
     * Filter, which emoji to fetch.
     */
    where: emojiWhereUniqueInput
  }

  /**
   * emoji findFirst
   */
  export type emojiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
    /**
     * Filter, which emoji to fetch.
     */
    where?: emojiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emojis to fetch.
     */
    orderBy?: emojiOrderByWithRelationInput | emojiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for emojis.
     */
    cursor?: emojiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emojis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emojis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of emojis.
     */
    distinct?: EmojiScalarFieldEnum | EmojiScalarFieldEnum[]
  }

  /**
   * emoji findFirstOrThrow
   */
  export type emojiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
    /**
     * Filter, which emoji to fetch.
     */
    where?: emojiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emojis to fetch.
     */
    orderBy?: emojiOrderByWithRelationInput | emojiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for emojis.
     */
    cursor?: emojiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emojis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emojis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of emojis.
     */
    distinct?: EmojiScalarFieldEnum | EmojiScalarFieldEnum[]
  }

  /**
   * emoji findMany
   */
  export type emojiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
    /**
     * Filter, which emojis to fetch.
     */
    where?: emojiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emojis to fetch.
     */
    orderBy?: emojiOrderByWithRelationInput | emojiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing emojis.
     */
    cursor?: emojiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emojis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emojis.
     */
    skip?: number
    distinct?: EmojiScalarFieldEnum | EmojiScalarFieldEnum[]
  }

  /**
   * emoji create
   */
  export type emojiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
    /**
     * The data needed to create a emoji.
     */
    data: XOR<emojiCreateInput, emojiUncheckedCreateInput>
  }

  /**
   * emoji createMany
   */
  export type emojiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many emojis.
     */
    data: emojiCreateManyInput | emojiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * emoji update
   */
  export type emojiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
    /**
     * The data needed to update a emoji.
     */
    data: XOR<emojiUpdateInput, emojiUncheckedUpdateInput>
    /**
     * Choose, which emoji to update.
     */
    where: emojiWhereUniqueInput
  }

  /**
   * emoji updateMany
   */
  export type emojiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update emojis.
     */
    data: XOR<emojiUpdateManyMutationInput, emojiUncheckedUpdateManyInput>
    /**
     * Filter which emojis to update
     */
    where?: emojiWhereInput
    /**
     * Limit how many emojis to update.
     */
    limit?: number
  }

  /**
   * emoji upsert
   */
  export type emojiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
    /**
     * The filter to search for the emoji to update in case it exists.
     */
    where: emojiWhereUniqueInput
    /**
     * In case the emoji found by the `where` argument doesn't exist, create a new emoji with this data.
     */
    create: XOR<emojiCreateInput, emojiUncheckedCreateInput>
    /**
     * In case the emoji was found with the provided `where` argument, update it with this data.
     */
    update: XOR<emojiUpdateInput, emojiUncheckedUpdateInput>
  }

  /**
   * emoji delete
   */
  export type emojiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
    /**
     * Filter which emoji to delete.
     */
    where: emojiWhereUniqueInput
  }

  /**
   * emoji deleteMany
   */
  export type emojiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which emojis to delete
     */
    where?: emojiWhereInput
    /**
     * Limit how many emojis to delete.
     */
    limit?: number
  }

  /**
   * emoji.post_reaction
   */
  export type emoji$post_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    where?: post_reactionWhereInput
    orderBy?: post_reactionOrderByWithRelationInput | post_reactionOrderByWithRelationInput[]
    cursor?: post_reactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_reactionScalarFieldEnum | Post_reactionScalarFieldEnum[]
  }

  /**
   * emoji without action
   */
  export type emojiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emoji
     */
    select?: emojiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emoji
     */
    omit?: emojiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emojiInclude<ExtArgs> | null
  }


  /**
   * Model feed_cache
   */

  export type AggregateFeed_cache = {
    _count: Feed_cacheCountAggregateOutputType | null
    _avg: Feed_cacheAvgAggregateOutputType | null
    _sum: Feed_cacheSumAggregateOutputType | null
    _min: Feed_cacheMinAggregateOutputType | null
    _max: Feed_cacheMaxAggregateOutputType | null
  }

  export type Feed_cacheAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    post_id: number | null
    score: number | null
  }

  export type Feed_cacheSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    post_id: number | null
    score: number | null
  }

  export type Feed_cacheMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    post_id: number | null
    score: number | null
    created_at: Date | null
  }

  export type Feed_cacheMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    post_id: number | null
    score: number | null
    created_at: Date | null
  }

  export type Feed_cacheCountAggregateOutputType = {
    id: number
    user_id: number
    post_id: number
    score: number
    created_at: number
    _all: number
  }


  export type Feed_cacheAvgAggregateInputType = {
    id?: true
    user_id?: true
    post_id?: true
    score?: true
  }

  export type Feed_cacheSumAggregateInputType = {
    id?: true
    user_id?: true
    post_id?: true
    score?: true
  }

  export type Feed_cacheMinAggregateInputType = {
    id?: true
    user_id?: true
    post_id?: true
    score?: true
    created_at?: true
  }

  export type Feed_cacheMaxAggregateInputType = {
    id?: true
    user_id?: true
    post_id?: true
    score?: true
    created_at?: true
  }

  export type Feed_cacheCountAggregateInputType = {
    id?: true
    user_id?: true
    post_id?: true
    score?: true
    created_at?: true
    _all?: true
  }

  export type Feed_cacheAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which feed_cache to aggregate.
     */
    where?: feed_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of feed_caches to fetch.
     */
    orderBy?: feed_cacheOrderByWithRelationInput | feed_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: feed_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` feed_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` feed_caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned feed_caches
    **/
    _count?: true | Feed_cacheCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Feed_cacheAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Feed_cacheSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Feed_cacheMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Feed_cacheMaxAggregateInputType
  }

  export type GetFeed_cacheAggregateType<T extends Feed_cacheAggregateArgs> = {
        [P in keyof T & keyof AggregateFeed_cache]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFeed_cache[P]>
      : GetScalarType<T[P], AggregateFeed_cache[P]>
  }




  export type feed_cacheGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: feed_cacheWhereInput
    orderBy?: feed_cacheOrderByWithAggregationInput | feed_cacheOrderByWithAggregationInput[]
    by: Feed_cacheScalarFieldEnum[] | Feed_cacheScalarFieldEnum
    having?: feed_cacheScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Feed_cacheCountAggregateInputType | true
    _avg?: Feed_cacheAvgAggregateInputType
    _sum?: Feed_cacheSumAggregateInputType
    _min?: Feed_cacheMinAggregateInputType
    _max?: Feed_cacheMaxAggregateInputType
  }

  export type Feed_cacheGroupByOutputType = {
    id: number
    user_id: number
    post_id: number
    score: number
    created_at: Date
    _count: Feed_cacheCountAggregateOutputType | null
    _avg: Feed_cacheAvgAggregateOutputType | null
    _sum: Feed_cacheSumAggregateOutputType | null
    _min: Feed_cacheMinAggregateOutputType | null
    _max: Feed_cacheMaxAggregateOutputType | null
  }

  type GetFeed_cacheGroupByPayload<T extends feed_cacheGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Feed_cacheGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Feed_cacheGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Feed_cacheGroupByOutputType[P]>
            : GetScalarType<T[P], Feed_cacheGroupByOutputType[P]>
        }
      >
    >


  export type feed_cacheSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    post_id?: boolean
    score?: boolean
    created_at?: boolean
    post?: boolean | postDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["feed_cache"]>



  export type feed_cacheSelectScalar = {
    id?: boolean
    user_id?: boolean
    post_id?: boolean
    score?: boolean
    created_at?: boolean
  }

  export type feed_cacheOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "post_id" | "score" | "created_at", ExtArgs["result"]["feed_cache"]>
  export type feed_cacheInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | postDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $feed_cachePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "feed_cache"
    objects: {
      post: Prisma.$postPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      post_id: number
      score: number
      created_at: Date
    }, ExtArgs["result"]["feed_cache"]>
    composites: {}
  }

  type feed_cacheGetPayload<S extends boolean | null | undefined | feed_cacheDefaultArgs> = $Result.GetResult<Prisma.$feed_cachePayload, S>

  type feed_cacheCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<feed_cacheFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Feed_cacheCountAggregateInputType | true
    }

  export interface feed_cacheDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['feed_cache'], meta: { name: 'feed_cache' } }
    /**
     * Find zero or one Feed_cache that matches the filter.
     * @param {feed_cacheFindUniqueArgs} args - Arguments to find a Feed_cache
     * @example
     * // Get one Feed_cache
     * const feed_cache = await prisma.feed_cache.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends feed_cacheFindUniqueArgs>(args: SelectSubset<T, feed_cacheFindUniqueArgs<ExtArgs>>): Prisma__feed_cacheClient<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Feed_cache that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {feed_cacheFindUniqueOrThrowArgs} args - Arguments to find a Feed_cache
     * @example
     * // Get one Feed_cache
     * const feed_cache = await prisma.feed_cache.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends feed_cacheFindUniqueOrThrowArgs>(args: SelectSubset<T, feed_cacheFindUniqueOrThrowArgs<ExtArgs>>): Prisma__feed_cacheClient<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Feed_cache that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feed_cacheFindFirstArgs} args - Arguments to find a Feed_cache
     * @example
     * // Get one Feed_cache
     * const feed_cache = await prisma.feed_cache.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends feed_cacheFindFirstArgs>(args?: SelectSubset<T, feed_cacheFindFirstArgs<ExtArgs>>): Prisma__feed_cacheClient<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Feed_cache that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feed_cacheFindFirstOrThrowArgs} args - Arguments to find a Feed_cache
     * @example
     * // Get one Feed_cache
     * const feed_cache = await prisma.feed_cache.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends feed_cacheFindFirstOrThrowArgs>(args?: SelectSubset<T, feed_cacheFindFirstOrThrowArgs<ExtArgs>>): Prisma__feed_cacheClient<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Feed_caches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feed_cacheFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Feed_caches
     * const feed_caches = await prisma.feed_cache.findMany()
     * 
     * // Get first 10 Feed_caches
     * const feed_caches = await prisma.feed_cache.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const feed_cacheWithIdOnly = await prisma.feed_cache.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends feed_cacheFindManyArgs>(args?: SelectSubset<T, feed_cacheFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Feed_cache.
     * @param {feed_cacheCreateArgs} args - Arguments to create a Feed_cache.
     * @example
     * // Create one Feed_cache
     * const Feed_cache = await prisma.feed_cache.create({
     *   data: {
     *     // ... data to create a Feed_cache
     *   }
     * })
     * 
     */
    create<T extends feed_cacheCreateArgs>(args: SelectSubset<T, feed_cacheCreateArgs<ExtArgs>>): Prisma__feed_cacheClient<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Feed_caches.
     * @param {feed_cacheCreateManyArgs} args - Arguments to create many Feed_caches.
     * @example
     * // Create many Feed_caches
     * const feed_cache = await prisma.feed_cache.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends feed_cacheCreateManyArgs>(args?: SelectSubset<T, feed_cacheCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Feed_cache.
     * @param {feed_cacheDeleteArgs} args - Arguments to delete one Feed_cache.
     * @example
     * // Delete one Feed_cache
     * const Feed_cache = await prisma.feed_cache.delete({
     *   where: {
     *     // ... filter to delete one Feed_cache
     *   }
     * })
     * 
     */
    delete<T extends feed_cacheDeleteArgs>(args: SelectSubset<T, feed_cacheDeleteArgs<ExtArgs>>): Prisma__feed_cacheClient<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Feed_cache.
     * @param {feed_cacheUpdateArgs} args - Arguments to update one Feed_cache.
     * @example
     * // Update one Feed_cache
     * const feed_cache = await prisma.feed_cache.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends feed_cacheUpdateArgs>(args: SelectSubset<T, feed_cacheUpdateArgs<ExtArgs>>): Prisma__feed_cacheClient<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Feed_caches.
     * @param {feed_cacheDeleteManyArgs} args - Arguments to filter Feed_caches to delete.
     * @example
     * // Delete a few Feed_caches
     * const { count } = await prisma.feed_cache.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends feed_cacheDeleteManyArgs>(args?: SelectSubset<T, feed_cacheDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Feed_caches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feed_cacheUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Feed_caches
     * const feed_cache = await prisma.feed_cache.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends feed_cacheUpdateManyArgs>(args: SelectSubset<T, feed_cacheUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Feed_cache.
     * @param {feed_cacheUpsertArgs} args - Arguments to update or create a Feed_cache.
     * @example
     * // Update or create a Feed_cache
     * const feed_cache = await prisma.feed_cache.upsert({
     *   create: {
     *     // ... data to create a Feed_cache
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Feed_cache we want to update
     *   }
     * })
     */
    upsert<T extends feed_cacheUpsertArgs>(args: SelectSubset<T, feed_cacheUpsertArgs<ExtArgs>>): Prisma__feed_cacheClient<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Feed_caches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feed_cacheCountArgs} args - Arguments to filter Feed_caches to count.
     * @example
     * // Count the number of Feed_caches
     * const count = await prisma.feed_cache.count({
     *   where: {
     *     // ... the filter for the Feed_caches we want to count
     *   }
     * })
    **/
    count<T extends feed_cacheCountArgs>(
      args?: Subset<T, feed_cacheCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Feed_cacheCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Feed_cache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Feed_cacheAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Feed_cacheAggregateArgs>(args: Subset<T, Feed_cacheAggregateArgs>): Prisma.PrismaPromise<GetFeed_cacheAggregateType<T>>

    /**
     * Group by Feed_cache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {feed_cacheGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends feed_cacheGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: feed_cacheGroupByArgs['orderBy'] }
        : { orderBy?: feed_cacheGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, feed_cacheGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFeed_cacheGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the feed_cache model
   */
  readonly fields: feed_cacheFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for feed_cache.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__feed_cacheClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends postDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postDefaultArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the feed_cache model
   */
  interface feed_cacheFieldRefs {
    readonly id: FieldRef<"feed_cache", 'Int'>
    readonly user_id: FieldRef<"feed_cache", 'Int'>
    readonly post_id: FieldRef<"feed_cache", 'Int'>
    readonly score: FieldRef<"feed_cache", 'Float'>
    readonly created_at: FieldRef<"feed_cache", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * feed_cache findUnique
   */
  export type feed_cacheFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    /**
     * Filter, which feed_cache to fetch.
     */
    where: feed_cacheWhereUniqueInput
  }

  /**
   * feed_cache findUniqueOrThrow
   */
  export type feed_cacheFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    /**
     * Filter, which feed_cache to fetch.
     */
    where: feed_cacheWhereUniqueInput
  }

  /**
   * feed_cache findFirst
   */
  export type feed_cacheFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    /**
     * Filter, which feed_cache to fetch.
     */
    where?: feed_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of feed_caches to fetch.
     */
    orderBy?: feed_cacheOrderByWithRelationInput | feed_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for feed_caches.
     */
    cursor?: feed_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` feed_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` feed_caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of feed_caches.
     */
    distinct?: Feed_cacheScalarFieldEnum | Feed_cacheScalarFieldEnum[]
  }

  /**
   * feed_cache findFirstOrThrow
   */
  export type feed_cacheFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    /**
     * Filter, which feed_cache to fetch.
     */
    where?: feed_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of feed_caches to fetch.
     */
    orderBy?: feed_cacheOrderByWithRelationInput | feed_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for feed_caches.
     */
    cursor?: feed_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` feed_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` feed_caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of feed_caches.
     */
    distinct?: Feed_cacheScalarFieldEnum | Feed_cacheScalarFieldEnum[]
  }

  /**
   * feed_cache findMany
   */
  export type feed_cacheFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    /**
     * Filter, which feed_caches to fetch.
     */
    where?: feed_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of feed_caches to fetch.
     */
    orderBy?: feed_cacheOrderByWithRelationInput | feed_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing feed_caches.
     */
    cursor?: feed_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` feed_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` feed_caches.
     */
    skip?: number
    distinct?: Feed_cacheScalarFieldEnum | Feed_cacheScalarFieldEnum[]
  }

  /**
   * feed_cache create
   */
  export type feed_cacheCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    /**
     * The data needed to create a feed_cache.
     */
    data: XOR<feed_cacheCreateInput, feed_cacheUncheckedCreateInput>
  }

  /**
   * feed_cache createMany
   */
  export type feed_cacheCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many feed_caches.
     */
    data: feed_cacheCreateManyInput | feed_cacheCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * feed_cache update
   */
  export type feed_cacheUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    /**
     * The data needed to update a feed_cache.
     */
    data: XOR<feed_cacheUpdateInput, feed_cacheUncheckedUpdateInput>
    /**
     * Choose, which feed_cache to update.
     */
    where: feed_cacheWhereUniqueInput
  }

  /**
   * feed_cache updateMany
   */
  export type feed_cacheUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update feed_caches.
     */
    data: XOR<feed_cacheUpdateManyMutationInput, feed_cacheUncheckedUpdateManyInput>
    /**
     * Filter which feed_caches to update
     */
    where?: feed_cacheWhereInput
    /**
     * Limit how many feed_caches to update.
     */
    limit?: number
  }

  /**
   * feed_cache upsert
   */
  export type feed_cacheUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    /**
     * The filter to search for the feed_cache to update in case it exists.
     */
    where: feed_cacheWhereUniqueInput
    /**
     * In case the feed_cache found by the `where` argument doesn't exist, create a new feed_cache with this data.
     */
    create: XOR<feed_cacheCreateInput, feed_cacheUncheckedCreateInput>
    /**
     * In case the feed_cache was found with the provided `where` argument, update it with this data.
     */
    update: XOR<feed_cacheUpdateInput, feed_cacheUncheckedUpdateInput>
  }

  /**
   * feed_cache delete
   */
  export type feed_cacheDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    /**
     * Filter which feed_cache to delete.
     */
    where: feed_cacheWhereUniqueInput
  }

  /**
   * feed_cache deleteMany
   */
  export type feed_cacheDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which feed_caches to delete
     */
    where?: feed_cacheWhereInput
    /**
     * Limit how many feed_caches to delete.
     */
    limit?: number
  }

  /**
   * feed_cache without action
   */
  export type feed_cacheDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
  }


  /**
   * Model file_report
   */

  export type AggregateFile_report = {
    _count: File_reportCountAggregateOutputType | null
    _avg: File_reportAvgAggregateOutputType | null
    _sum: File_reportSumAggregateOutputType | null
    _min: File_reportMinAggregateOutputType | null
    _max: File_reportMaxAggregateOutputType | null
  }

  export type File_reportAvgAggregateOutputType = {
    id: number | null
    file_id: number | null
    reporter_id: number | null
  }

  export type File_reportSumAggregateOutputType = {
    id: number | null
    file_id: number | null
    reporter_id: number | null
  }

  export type File_reportMinAggregateOutputType = {
    id: number | null
    file_id: number | null
    reporter_id: number | null
    reason: string | null
    created_at: Date | null
  }

  export type File_reportMaxAggregateOutputType = {
    id: number | null
    file_id: number | null
    reporter_id: number | null
    reason: string | null
    created_at: Date | null
  }

  export type File_reportCountAggregateOutputType = {
    id: number
    file_id: number
    reporter_id: number
    reason: number
    created_at: number
    _all: number
  }


  export type File_reportAvgAggregateInputType = {
    id?: true
    file_id?: true
    reporter_id?: true
  }

  export type File_reportSumAggregateInputType = {
    id?: true
    file_id?: true
    reporter_id?: true
  }

  export type File_reportMinAggregateInputType = {
    id?: true
    file_id?: true
    reporter_id?: true
    reason?: true
    created_at?: true
  }

  export type File_reportMaxAggregateInputType = {
    id?: true
    file_id?: true
    reporter_id?: true
    reason?: true
    created_at?: true
  }

  export type File_reportCountAggregateInputType = {
    id?: true
    file_id?: true
    reporter_id?: true
    reason?: true
    created_at?: true
    _all?: true
  }

  export type File_reportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which file_report to aggregate.
     */
    where?: file_reportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of file_reports to fetch.
     */
    orderBy?: file_reportOrderByWithRelationInput | file_reportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: file_reportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` file_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` file_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned file_reports
    **/
    _count?: true | File_reportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: File_reportAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: File_reportSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: File_reportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: File_reportMaxAggregateInputType
  }

  export type GetFile_reportAggregateType<T extends File_reportAggregateArgs> = {
        [P in keyof T & keyof AggregateFile_report]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFile_report[P]>
      : GetScalarType<T[P], AggregateFile_report[P]>
  }




  export type file_reportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: file_reportWhereInput
    orderBy?: file_reportOrderByWithAggregationInput | file_reportOrderByWithAggregationInput[]
    by: File_reportScalarFieldEnum[] | File_reportScalarFieldEnum
    having?: file_reportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: File_reportCountAggregateInputType | true
    _avg?: File_reportAvgAggregateInputType
    _sum?: File_reportSumAggregateInputType
    _min?: File_reportMinAggregateInputType
    _max?: File_reportMaxAggregateInputType
  }

  export type File_reportGroupByOutputType = {
    id: number
    file_id: number
    reporter_id: number
    reason: string | null
    created_at: Date
    _count: File_reportCountAggregateOutputType | null
    _avg: File_reportAvgAggregateOutputType | null
    _sum: File_reportSumAggregateOutputType | null
    _min: File_reportMinAggregateOutputType | null
    _max: File_reportMaxAggregateOutputType | null
  }

  type GetFile_reportGroupByPayload<T extends file_reportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<File_reportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof File_reportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], File_reportGroupByOutputType[P]>
            : GetScalarType<T[P], File_reportGroupByOutputType[P]>
        }
      >
    >


  export type file_reportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    file_id?: boolean
    reporter_id?: boolean
    reason?: boolean
    created_at?: boolean
    post_file?: boolean | post_fileDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["file_report"]>



  export type file_reportSelectScalar = {
    id?: boolean
    file_id?: boolean
    reporter_id?: boolean
    reason?: boolean
    created_at?: boolean
  }

  export type file_reportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "file_id" | "reporter_id" | "reason" | "created_at", ExtArgs["result"]["file_report"]>
  export type file_reportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_file?: boolean | post_fileDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $file_reportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "file_report"
    objects: {
      post_file: Prisma.$post_filePayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      file_id: number
      reporter_id: number
      reason: string | null
      created_at: Date
    }, ExtArgs["result"]["file_report"]>
    composites: {}
  }

  type file_reportGetPayload<S extends boolean | null | undefined | file_reportDefaultArgs> = $Result.GetResult<Prisma.$file_reportPayload, S>

  type file_reportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<file_reportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: File_reportCountAggregateInputType | true
    }

  export interface file_reportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['file_report'], meta: { name: 'file_report' } }
    /**
     * Find zero or one File_report that matches the filter.
     * @param {file_reportFindUniqueArgs} args - Arguments to find a File_report
     * @example
     * // Get one File_report
     * const file_report = await prisma.file_report.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends file_reportFindUniqueArgs>(args: SelectSubset<T, file_reportFindUniqueArgs<ExtArgs>>): Prisma__file_reportClient<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one File_report that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {file_reportFindUniqueOrThrowArgs} args - Arguments to find a File_report
     * @example
     * // Get one File_report
     * const file_report = await prisma.file_report.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends file_reportFindUniqueOrThrowArgs>(args: SelectSubset<T, file_reportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__file_reportClient<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first File_report that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {file_reportFindFirstArgs} args - Arguments to find a File_report
     * @example
     * // Get one File_report
     * const file_report = await prisma.file_report.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends file_reportFindFirstArgs>(args?: SelectSubset<T, file_reportFindFirstArgs<ExtArgs>>): Prisma__file_reportClient<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first File_report that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {file_reportFindFirstOrThrowArgs} args - Arguments to find a File_report
     * @example
     * // Get one File_report
     * const file_report = await prisma.file_report.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends file_reportFindFirstOrThrowArgs>(args?: SelectSubset<T, file_reportFindFirstOrThrowArgs<ExtArgs>>): Prisma__file_reportClient<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more File_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {file_reportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all File_reports
     * const file_reports = await prisma.file_report.findMany()
     * 
     * // Get first 10 File_reports
     * const file_reports = await prisma.file_report.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const file_reportWithIdOnly = await prisma.file_report.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends file_reportFindManyArgs>(args?: SelectSubset<T, file_reportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a File_report.
     * @param {file_reportCreateArgs} args - Arguments to create a File_report.
     * @example
     * // Create one File_report
     * const File_report = await prisma.file_report.create({
     *   data: {
     *     // ... data to create a File_report
     *   }
     * })
     * 
     */
    create<T extends file_reportCreateArgs>(args: SelectSubset<T, file_reportCreateArgs<ExtArgs>>): Prisma__file_reportClient<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many File_reports.
     * @param {file_reportCreateManyArgs} args - Arguments to create many File_reports.
     * @example
     * // Create many File_reports
     * const file_report = await prisma.file_report.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends file_reportCreateManyArgs>(args?: SelectSubset<T, file_reportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a File_report.
     * @param {file_reportDeleteArgs} args - Arguments to delete one File_report.
     * @example
     * // Delete one File_report
     * const File_report = await prisma.file_report.delete({
     *   where: {
     *     // ... filter to delete one File_report
     *   }
     * })
     * 
     */
    delete<T extends file_reportDeleteArgs>(args: SelectSubset<T, file_reportDeleteArgs<ExtArgs>>): Prisma__file_reportClient<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one File_report.
     * @param {file_reportUpdateArgs} args - Arguments to update one File_report.
     * @example
     * // Update one File_report
     * const file_report = await prisma.file_report.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends file_reportUpdateArgs>(args: SelectSubset<T, file_reportUpdateArgs<ExtArgs>>): Prisma__file_reportClient<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more File_reports.
     * @param {file_reportDeleteManyArgs} args - Arguments to filter File_reports to delete.
     * @example
     * // Delete a few File_reports
     * const { count } = await prisma.file_report.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends file_reportDeleteManyArgs>(args?: SelectSubset<T, file_reportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more File_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {file_reportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many File_reports
     * const file_report = await prisma.file_report.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends file_reportUpdateManyArgs>(args: SelectSubset<T, file_reportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one File_report.
     * @param {file_reportUpsertArgs} args - Arguments to update or create a File_report.
     * @example
     * // Update or create a File_report
     * const file_report = await prisma.file_report.upsert({
     *   create: {
     *     // ... data to create a File_report
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the File_report we want to update
     *   }
     * })
     */
    upsert<T extends file_reportUpsertArgs>(args: SelectSubset<T, file_reportUpsertArgs<ExtArgs>>): Prisma__file_reportClient<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of File_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {file_reportCountArgs} args - Arguments to filter File_reports to count.
     * @example
     * // Count the number of File_reports
     * const count = await prisma.file_report.count({
     *   where: {
     *     // ... the filter for the File_reports we want to count
     *   }
     * })
    **/
    count<T extends file_reportCountArgs>(
      args?: Subset<T, file_reportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], File_reportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a File_report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {File_reportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends File_reportAggregateArgs>(args: Subset<T, File_reportAggregateArgs>): Prisma.PrismaPromise<GetFile_reportAggregateType<T>>

    /**
     * Group by File_report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {file_reportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends file_reportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: file_reportGroupByArgs['orderBy'] }
        : { orderBy?: file_reportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, file_reportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFile_reportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the file_report model
   */
  readonly fields: file_reportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for file_report.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__file_reportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post_file<T extends post_fileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, post_fileDefaultArgs<ExtArgs>>): Prisma__post_fileClient<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the file_report model
   */
  interface file_reportFieldRefs {
    readonly id: FieldRef<"file_report", 'Int'>
    readonly file_id: FieldRef<"file_report", 'Int'>
    readonly reporter_id: FieldRef<"file_report", 'Int'>
    readonly reason: FieldRef<"file_report", 'String'>
    readonly created_at: FieldRef<"file_report", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * file_report findUnique
   */
  export type file_reportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    /**
     * Filter, which file_report to fetch.
     */
    where: file_reportWhereUniqueInput
  }

  /**
   * file_report findUniqueOrThrow
   */
  export type file_reportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    /**
     * Filter, which file_report to fetch.
     */
    where: file_reportWhereUniqueInput
  }

  /**
   * file_report findFirst
   */
  export type file_reportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    /**
     * Filter, which file_report to fetch.
     */
    where?: file_reportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of file_reports to fetch.
     */
    orderBy?: file_reportOrderByWithRelationInput | file_reportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for file_reports.
     */
    cursor?: file_reportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` file_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` file_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of file_reports.
     */
    distinct?: File_reportScalarFieldEnum | File_reportScalarFieldEnum[]
  }

  /**
   * file_report findFirstOrThrow
   */
  export type file_reportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    /**
     * Filter, which file_report to fetch.
     */
    where?: file_reportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of file_reports to fetch.
     */
    orderBy?: file_reportOrderByWithRelationInput | file_reportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for file_reports.
     */
    cursor?: file_reportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` file_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` file_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of file_reports.
     */
    distinct?: File_reportScalarFieldEnum | File_reportScalarFieldEnum[]
  }

  /**
   * file_report findMany
   */
  export type file_reportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    /**
     * Filter, which file_reports to fetch.
     */
    where?: file_reportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of file_reports to fetch.
     */
    orderBy?: file_reportOrderByWithRelationInput | file_reportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing file_reports.
     */
    cursor?: file_reportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` file_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` file_reports.
     */
    skip?: number
    distinct?: File_reportScalarFieldEnum | File_reportScalarFieldEnum[]
  }

  /**
   * file_report create
   */
  export type file_reportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    /**
     * The data needed to create a file_report.
     */
    data: XOR<file_reportCreateInput, file_reportUncheckedCreateInput>
  }

  /**
   * file_report createMany
   */
  export type file_reportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many file_reports.
     */
    data: file_reportCreateManyInput | file_reportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * file_report update
   */
  export type file_reportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    /**
     * The data needed to update a file_report.
     */
    data: XOR<file_reportUpdateInput, file_reportUncheckedUpdateInput>
    /**
     * Choose, which file_report to update.
     */
    where: file_reportWhereUniqueInput
  }

  /**
   * file_report updateMany
   */
  export type file_reportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update file_reports.
     */
    data: XOR<file_reportUpdateManyMutationInput, file_reportUncheckedUpdateManyInput>
    /**
     * Filter which file_reports to update
     */
    where?: file_reportWhereInput
    /**
     * Limit how many file_reports to update.
     */
    limit?: number
  }

  /**
   * file_report upsert
   */
  export type file_reportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    /**
     * The filter to search for the file_report to update in case it exists.
     */
    where: file_reportWhereUniqueInput
    /**
     * In case the file_report found by the `where` argument doesn't exist, create a new file_report with this data.
     */
    create: XOR<file_reportCreateInput, file_reportUncheckedCreateInput>
    /**
     * In case the file_report was found with the provided `where` argument, update it with this data.
     */
    update: XOR<file_reportUpdateInput, file_reportUncheckedUpdateInput>
  }

  /**
   * file_report delete
   */
  export type file_reportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    /**
     * Filter which file_report to delete.
     */
    where: file_reportWhereUniqueInput
  }

  /**
   * file_report deleteMany
   */
  export type file_reportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which file_reports to delete
     */
    where?: file_reportWhereInput
    /**
     * Limit how many file_reports to delete.
     */
    limit?: number
  }

  /**
   * file_report without action
   */
  export type file_reportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
  }


  /**
   * Model follow
   */

  export type AggregateFollow = {
    _count: FollowCountAggregateOutputType | null
    _avg: FollowAvgAggregateOutputType | null
    _sum: FollowSumAggregateOutputType | null
    _min: FollowMinAggregateOutputType | null
    _max: FollowMaxAggregateOutputType | null
  }

  export type FollowAvgAggregateOutputType = {
    follower_id: number | null
    following_id: number | null
  }

  export type FollowSumAggregateOutputType = {
    follower_id: number | null
    following_id: number | null
  }

  export type FollowMinAggregateOutputType = {
    follower_id: number | null
    following_id: number | null
    created_at: Date | null
  }

  export type FollowMaxAggregateOutputType = {
    follower_id: number | null
    following_id: number | null
    created_at: Date | null
  }

  export type FollowCountAggregateOutputType = {
    follower_id: number
    following_id: number
    created_at: number
    _all: number
  }


  export type FollowAvgAggregateInputType = {
    follower_id?: true
    following_id?: true
  }

  export type FollowSumAggregateInputType = {
    follower_id?: true
    following_id?: true
  }

  export type FollowMinAggregateInputType = {
    follower_id?: true
    following_id?: true
    created_at?: true
  }

  export type FollowMaxAggregateInputType = {
    follower_id?: true
    following_id?: true
    created_at?: true
  }

  export type FollowCountAggregateInputType = {
    follower_id?: true
    following_id?: true
    created_at?: true
    _all?: true
  }

  export type FollowAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which follow to aggregate.
     */
    where?: followWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follows to fetch.
     */
    orderBy?: followOrderByWithRelationInput | followOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: followWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned follows
    **/
    _count?: true | FollowCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FollowAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FollowSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FollowMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FollowMaxAggregateInputType
  }

  export type GetFollowAggregateType<T extends FollowAggregateArgs> = {
        [P in keyof T & keyof AggregateFollow]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFollow[P]>
      : GetScalarType<T[P], AggregateFollow[P]>
  }




  export type followGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: followWhereInput
    orderBy?: followOrderByWithAggregationInput | followOrderByWithAggregationInput[]
    by: FollowScalarFieldEnum[] | FollowScalarFieldEnum
    having?: followScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FollowCountAggregateInputType | true
    _avg?: FollowAvgAggregateInputType
    _sum?: FollowSumAggregateInputType
    _min?: FollowMinAggregateInputType
    _max?: FollowMaxAggregateInputType
  }

  export type FollowGroupByOutputType = {
    follower_id: number
    following_id: number
    created_at: Date
    _count: FollowCountAggregateOutputType | null
    _avg: FollowAvgAggregateOutputType | null
    _sum: FollowSumAggregateOutputType | null
    _min: FollowMinAggregateOutputType | null
    _max: FollowMaxAggregateOutputType | null
  }

  type GetFollowGroupByPayload<T extends followGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FollowGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FollowGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FollowGroupByOutputType[P]>
            : GetScalarType<T[P], FollowGroupByOutputType[P]>
        }
      >
    >


  export type followSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    follower_id?: boolean
    following_id?: boolean
    created_at?: boolean
    user_follow_follower_idTouser?: boolean | userDefaultArgs<ExtArgs>
    user_follow_following_idTouser?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["follow"]>



  export type followSelectScalar = {
    follower_id?: boolean
    following_id?: boolean
    created_at?: boolean
  }

  export type followOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"follower_id" | "following_id" | "created_at", ExtArgs["result"]["follow"]>
  export type followInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_follow_follower_idTouser?: boolean | userDefaultArgs<ExtArgs>
    user_follow_following_idTouser?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $followPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "follow"
    objects: {
      user_follow_follower_idTouser: Prisma.$userPayload<ExtArgs>
      user_follow_following_idTouser: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      follower_id: number
      following_id: number
      created_at: Date
    }, ExtArgs["result"]["follow"]>
    composites: {}
  }

  type followGetPayload<S extends boolean | null | undefined | followDefaultArgs> = $Result.GetResult<Prisma.$followPayload, S>

  type followCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<followFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FollowCountAggregateInputType | true
    }

  export interface followDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['follow'], meta: { name: 'follow' } }
    /**
     * Find zero or one Follow that matches the filter.
     * @param {followFindUniqueArgs} args - Arguments to find a Follow
     * @example
     * // Get one Follow
     * const follow = await prisma.follow.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends followFindUniqueArgs>(args: SelectSubset<T, followFindUniqueArgs<ExtArgs>>): Prisma__followClient<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Follow that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {followFindUniqueOrThrowArgs} args - Arguments to find a Follow
     * @example
     * // Get one Follow
     * const follow = await prisma.follow.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends followFindUniqueOrThrowArgs>(args: SelectSubset<T, followFindUniqueOrThrowArgs<ExtArgs>>): Prisma__followClient<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Follow that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {followFindFirstArgs} args - Arguments to find a Follow
     * @example
     * // Get one Follow
     * const follow = await prisma.follow.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends followFindFirstArgs>(args?: SelectSubset<T, followFindFirstArgs<ExtArgs>>): Prisma__followClient<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Follow that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {followFindFirstOrThrowArgs} args - Arguments to find a Follow
     * @example
     * // Get one Follow
     * const follow = await prisma.follow.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends followFindFirstOrThrowArgs>(args?: SelectSubset<T, followFindFirstOrThrowArgs<ExtArgs>>): Prisma__followClient<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Follows that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {followFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Follows
     * const follows = await prisma.follow.findMany()
     * 
     * // Get first 10 Follows
     * const follows = await prisma.follow.findMany({ take: 10 })
     * 
     * // Only select the `follower_id`
     * const followWithFollower_idOnly = await prisma.follow.findMany({ select: { follower_id: true } })
     * 
     */
    findMany<T extends followFindManyArgs>(args?: SelectSubset<T, followFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Follow.
     * @param {followCreateArgs} args - Arguments to create a Follow.
     * @example
     * // Create one Follow
     * const Follow = await prisma.follow.create({
     *   data: {
     *     // ... data to create a Follow
     *   }
     * })
     * 
     */
    create<T extends followCreateArgs>(args: SelectSubset<T, followCreateArgs<ExtArgs>>): Prisma__followClient<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Follows.
     * @param {followCreateManyArgs} args - Arguments to create many Follows.
     * @example
     * // Create many Follows
     * const follow = await prisma.follow.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends followCreateManyArgs>(args?: SelectSubset<T, followCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Follow.
     * @param {followDeleteArgs} args - Arguments to delete one Follow.
     * @example
     * // Delete one Follow
     * const Follow = await prisma.follow.delete({
     *   where: {
     *     // ... filter to delete one Follow
     *   }
     * })
     * 
     */
    delete<T extends followDeleteArgs>(args: SelectSubset<T, followDeleteArgs<ExtArgs>>): Prisma__followClient<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Follow.
     * @param {followUpdateArgs} args - Arguments to update one Follow.
     * @example
     * // Update one Follow
     * const follow = await prisma.follow.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends followUpdateArgs>(args: SelectSubset<T, followUpdateArgs<ExtArgs>>): Prisma__followClient<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Follows.
     * @param {followDeleteManyArgs} args - Arguments to filter Follows to delete.
     * @example
     * // Delete a few Follows
     * const { count } = await prisma.follow.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends followDeleteManyArgs>(args?: SelectSubset<T, followDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Follows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {followUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Follows
     * const follow = await prisma.follow.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends followUpdateManyArgs>(args: SelectSubset<T, followUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Follow.
     * @param {followUpsertArgs} args - Arguments to update or create a Follow.
     * @example
     * // Update or create a Follow
     * const follow = await prisma.follow.upsert({
     *   create: {
     *     // ... data to create a Follow
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Follow we want to update
     *   }
     * })
     */
    upsert<T extends followUpsertArgs>(args: SelectSubset<T, followUpsertArgs<ExtArgs>>): Prisma__followClient<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Follows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {followCountArgs} args - Arguments to filter Follows to count.
     * @example
     * // Count the number of Follows
     * const count = await prisma.follow.count({
     *   where: {
     *     // ... the filter for the Follows we want to count
     *   }
     * })
    **/
    count<T extends followCountArgs>(
      args?: Subset<T, followCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FollowCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Follow.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FollowAggregateArgs>(args: Subset<T, FollowAggregateArgs>): Prisma.PrismaPromise<GetFollowAggregateType<T>>

    /**
     * Group by Follow.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {followGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends followGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: followGroupByArgs['orderBy'] }
        : { orderBy?: followGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, followGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFollowGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the follow model
   */
  readonly fields: followFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for follow.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__followClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_follow_follower_idTouser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user_follow_following_idTouser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the follow model
   */
  interface followFieldRefs {
    readonly follower_id: FieldRef<"follow", 'Int'>
    readonly following_id: FieldRef<"follow", 'Int'>
    readonly created_at: FieldRef<"follow", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * follow findUnique
   */
  export type followFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    /**
     * Filter, which follow to fetch.
     */
    where: followWhereUniqueInput
  }

  /**
   * follow findUniqueOrThrow
   */
  export type followFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    /**
     * Filter, which follow to fetch.
     */
    where: followWhereUniqueInput
  }

  /**
   * follow findFirst
   */
  export type followFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    /**
     * Filter, which follow to fetch.
     */
    where?: followWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follows to fetch.
     */
    orderBy?: followOrderByWithRelationInput | followOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for follows.
     */
    cursor?: followWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of follows.
     */
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * follow findFirstOrThrow
   */
  export type followFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    /**
     * Filter, which follow to fetch.
     */
    where?: followWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follows to fetch.
     */
    orderBy?: followOrderByWithRelationInput | followOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for follows.
     */
    cursor?: followWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of follows.
     */
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * follow findMany
   */
  export type followFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    /**
     * Filter, which follows to fetch.
     */
    where?: followWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follows to fetch.
     */
    orderBy?: followOrderByWithRelationInput | followOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing follows.
     */
    cursor?: followWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follows.
     */
    skip?: number
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * follow create
   */
  export type followCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    /**
     * The data needed to create a follow.
     */
    data: XOR<followCreateInput, followUncheckedCreateInput>
  }

  /**
   * follow createMany
   */
  export type followCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many follows.
     */
    data: followCreateManyInput | followCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * follow update
   */
  export type followUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    /**
     * The data needed to update a follow.
     */
    data: XOR<followUpdateInput, followUncheckedUpdateInput>
    /**
     * Choose, which follow to update.
     */
    where: followWhereUniqueInput
  }

  /**
   * follow updateMany
   */
  export type followUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update follows.
     */
    data: XOR<followUpdateManyMutationInput, followUncheckedUpdateManyInput>
    /**
     * Filter which follows to update
     */
    where?: followWhereInput
    /**
     * Limit how many follows to update.
     */
    limit?: number
  }

  /**
   * follow upsert
   */
  export type followUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    /**
     * The filter to search for the follow to update in case it exists.
     */
    where: followWhereUniqueInput
    /**
     * In case the follow found by the `where` argument doesn't exist, create a new follow with this data.
     */
    create: XOR<followCreateInput, followUncheckedCreateInput>
    /**
     * In case the follow was found with the provided `where` argument, update it with this data.
     */
    update: XOR<followUpdateInput, followUncheckedUpdateInput>
  }

  /**
   * follow delete
   */
  export type followDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    /**
     * Filter which follow to delete.
     */
    where: followWhereUniqueInput
  }

  /**
   * follow deleteMany
   */
  export type followDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which follows to delete
     */
    where?: followWhereInput
    /**
     * Limit how many follows to delete.
     */
    limit?: number
  }

  /**
   * follow without action
   */
  export type followDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
  }


  /**
   * Model notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    source_user_id: number | null
    related_post_id: number | null
    related_comment_id: number | null
    chat_message_id: number | null
    chat_room_id: number | null
  }

  export type NotificationSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    source_user_id: number | null
    related_post_id: number | null
    related_comment_id: number | null
    chat_message_id: number | null
    chat_room_id: number | null
  }

  export type NotificationMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    type: string | null
    message: string | null
    is_read: boolean | null
    source_user_id: number | null
    related_post_id: number | null
    related_comment_id: number | null
    chat_message_id: number | null
    chat_room_id: number | null
    created_at: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    type: string | null
    message: string | null
    is_read: boolean | null
    source_user_id: number | null
    related_post_id: number | null
    related_comment_id: number | null
    chat_message_id: number | null
    chat_room_id: number | null
    created_at: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    user_id: number
    type: number
    message: number
    is_read: number
    source_user_id: number
    related_post_id: number
    related_comment_id: number
    chat_message_id: number
    chat_room_id: number
    created_at: number
    _all: number
  }


  export type NotificationAvgAggregateInputType = {
    id?: true
    user_id?: true
    source_user_id?: true
    related_post_id?: true
    related_comment_id?: true
    chat_message_id?: true
    chat_room_id?: true
  }

  export type NotificationSumAggregateInputType = {
    id?: true
    user_id?: true
    source_user_id?: true
    related_post_id?: true
    related_comment_id?: true
    chat_message_id?: true
    chat_room_id?: true
  }

  export type NotificationMinAggregateInputType = {
    id?: true
    user_id?: true
    type?: true
    message?: true
    is_read?: true
    source_user_id?: true
    related_post_id?: true
    related_comment_id?: true
    chat_message_id?: true
    chat_room_id?: true
    created_at?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    user_id?: true
    type?: true
    message?: true
    is_read?: true
    source_user_id?: true
    related_post_id?: true
    related_comment_id?: true
    chat_message_id?: true
    chat_room_id?: true
    created_at?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    user_id?: true
    type?: true
    message?: true
    is_read?: true
    source_user_id?: true
    related_post_id?: true
    related_comment_id?: true
    chat_message_id?: true
    chat_room_id?: true
    created_at?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notification to aggregate.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type notificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithAggregationInput | notificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: notificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _avg?: NotificationAvgAggregateInputType
    _sum?: NotificationSumAggregateInputType
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: number
    user_id: number
    type: string
    message: string | null
    is_read: boolean
    source_user_id: number | null
    related_post_id: number | null
    related_comment_id: number | null
    chat_message_id: number | null
    chat_room_id: number | null
    created_at: Date
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends notificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type notificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    type?: boolean
    message?: boolean
    is_read?: boolean
    source_user_id?: boolean
    related_post_id?: boolean
    related_comment_id?: boolean
    chat_message_id?: boolean
    chat_room_id?: boolean
    created_at?: boolean
    chat_message?: boolean | notification$chat_messageArgs<ExtArgs>
    chat_room?: boolean | notification$chat_roomArgs<ExtArgs>
    comment?: boolean | notification$commentArgs<ExtArgs>
    post?: boolean | notification$postArgs<ExtArgs>
    user_notification_source_user_idTouser?: boolean | notification$user_notification_source_user_idTouserArgs<ExtArgs>
    user_notification_user_idTouser?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>



  export type notificationSelectScalar = {
    id?: boolean
    user_id?: boolean
    type?: boolean
    message?: boolean
    is_read?: boolean
    source_user_id?: boolean
    related_post_id?: boolean
    related_comment_id?: boolean
    chat_message_id?: boolean
    chat_room_id?: boolean
    created_at?: boolean
  }

  export type notificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "type" | "message" | "is_read" | "source_user_id" | "related_post_id" | "related_comment_id" | "chat_message_id" | "chat_room_id" | "created_at", ExtArgs["result"]["notification"]>
  export type notificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_message?: boolean | notification$chat_messageArgs<ExtArgs>
    chat_room?: boolean | notification$chat_roomArgs<ExtArgs>
    comment?: boolean | notification$commentArgs<ExtArgs>
    post?: boolean | notification$postArgs<ExtArgs>
    user_notification_source_user_idTouser?: boolean | notification$user_notification_source_user_idTouserArgs<ExtArgs>
    user_notification_user_idTouser?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $notificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notification"
    objects: {
      chat_message: Prisma.$chat_messagePayload<ExtArgs> | null
      chat_room: Prisma.$chat_roomPayload<ExtArgs> | null
      comment: Prisma.$commentPayload<ExtArgs> | null
      post: Prisma.$postPayload<ExtArgs> | null
      user_notification_source_user_idTouser: Prisma.$userPayload<ExtArgs> | null
      user_notification_user_idTouser: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      type: string
      message: string | null
      is_read: boolean
      source_user_id: number | null
      related_post_id: number | null
      related_comment_id: number | null
      chat_message_id: number | null
      chat_room_id: number | null
      created_at: Date
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type notificationGetPayload<S extends boolean | null | undefined | notificationDefaultArgs> = $Result.GetResult<Prisma.$notificationPayload, S>

  type notificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface notificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notification'], meta: { name: 'notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {notificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificationFindUniqueArgs>(args: SelectSubset<T, notificationFindUniqueArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificationFindUniqueOrThrowArgs>(args: SelectSubset<T, notificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificationFindFirstArgs>(args?: SelectSubset<T, notificationFindFirstArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificationFindFirstOrThrowArgs>(args?: SelectSubset<T, notificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notificationFindManyArgs>(args?: SelectSubset<T, notificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {notificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends notificationCreateArgs>(args: SelectSubset<T, notificationCreateArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {notificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificationCreateManyArgs>(args?: SelectSubset<T, notificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Notification.
     * @param {notificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends notificationDeleteArgs>(args: SelectSubset<T, notificationDeleteArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {notificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificationUpdateArgs>(args: SelectSubset<T, notificationUpdateArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {notificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificationDeleteManyArgs>(args?: SelectSubset<T, notificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificationUpdateManyArgs>(args: SelectSubset<T, notificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {notificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends notificationUpsertArgs>(args: SelectSubset<T, notificationUpsertArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends notificationCountArgs>(
      args?: Subset<T, notificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationGroupByArgs['orderBy'] }
        : { orderBy?: notificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notification model
   */
  readonly fields: notificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat_message<T extends notification$chat_messageArgs<ExtArgs> = {}>(args?: Subset<T, notification$chat_messageArgs<ExtArgs>>): Prisma__chat_messageClient<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    chat_room<T extends notification$chat_roomArgs<ExtArgs> = {}>(args?: Subset<T, notification$chat_roomArgs<ExtArgs>>): Prisma__chat_roomClient<$Result.GetResult<Prisma.$chat_roomPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    comment<T extends notification$commentArgs<ExtArgs> = {}>(args?: Subset<T, notification$commentArgs<ExtArgs>>): Prisma__commentClient<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    post<T extends notification$postArgs<ExtArgs> = {}>(args?: Subset<T, notification$postArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_notification_source_user_idTouser<T extends notification$user_notification_source_user_idTouserArgs<ExtArgs> = {}>(args?: Subset<T, notification$user_notification_source_user_idTouserArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_notification_user_idTouser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notification model
   */
  interface notificationFieldRefs {
    readonly id: FieldRef<"notification", 'Int'>
    readonly user_id: FieldRef<"notification", 'Int'>
    readonly type: FieldRef<"notification", 'String'>
    readonly message: FieldRef<"notification", 'String'>
    readonly is_read: FieldRef<"notification", 'Boolean'>
    readonly source_user_id: FieldRef<"notification", 'Int'>
    readonly related_post_id: FieldRef<"notification", 'Int'>
    readonly related_comment_id: FieldRef<"notification", 'Int'>
    readonly chat_message_id: FieldRef<"notification", 'Int'>
    readonly chat_room_id: FieldRef<"notification", 'Int'>
    readonly created_at: FieldRef<"notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * notification findUnique
   */
  export type notificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification findUniqueOrThrow
   */
  export type notificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification findFirst
   */
  export type notificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification findFirstOrThrow
   */
  export type notificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification findMany
   */
  export type notificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification create
   */
  export type notificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The data needed to create a notification.
     */
    data: XOR<notificationCreateInput, notificationUncheckedCreateInput>
  }

  /**
   * notification createMany
   */
  export type notificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notifications.
     */
    data: notificationCreateManyInput | notificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notification update
   */
  export type notificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The data needed to update a notification.
     */
    data: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
    /**
     * Choose, which notification to update.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification updateMany
   */
  export type notificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
  }

  /**
   * notification upsert
   */
  export type notificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The filter to search for the notification to update in case it exists.
     */
    where: notificationWhereUniqueInput
    /**
     * In case the notification found by the `where` argument doesn't exist, create a new notification with this data.
     */
    create: XOR<notificationCreateInput, notificationUncheckedCreateInput>
    /**
     * In case the notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
  }

  /**
   * notification delete
   */
  export type notificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter which notification to delete.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification deleteMany
   */
  export type notificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to delete
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to delete.
     */
    limit?: number
  }

  /**
   * notification.chat_message
   */
  export type notification$chat_messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    where?: chat_messageWhereInput
  }

  /**
   * notification.chat_room
   */
  export type notification$chat_roomArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room
     */
    select?: chat_roomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room
     */
    omit?: chat_roomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_roomInclude<ExtArgs> | null
    where?: chat_roomWhereInput
  }

  /**
   * notification.comment
   */
  export type notification$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    where?: commentWhereInput
  }

  /**
   * notification.post
   */
  export type notification$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    where?: postWhereInput
  }

  /**
   * notification.user_notification_source_user_idTouser
   */
  export type notification$user_notification_source_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * notification without action
   */
  export type notificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
  }


  /**
   * Model post
   */

  export type AggregatePost = {
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  export type PostAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    community_id: number | null
    view_count: number | null
    comment_count: number | null
  }

  export type PostSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    community_id: number | null
    view_count: number | null
    comment_count: number | null
  }

  export type PostMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    community_id: number | null
    title: string | null
    content: string | null
    is_anonymous: boolean | null
    visibility: $Enums.post_visibility | null
    view_count: number | null
    comment_count: number | null
    is_blinded: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PostMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    community_id: number | null
    title: string | null
    content: string | null
    is_anonymous: boolean | null
    visibility: $Enums.post_visibility | null
    view_count: number | null
    comment_count: number | null
    is_blinded: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PostCountAggregateOutputType = {
    id: number
    user_id: number
    community_id: number
    title: number
    content: number
    is_anonymous: number
    visibility: number
    view_count: number
    comment_count: number
    is_blinded: number
    is_deleted: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PostAvgAggregateInputType = {
    id?: true
    user_id?: true
    community_id?: true
    view_count?: true
    comment_count?: true
  }

  export type PostSumAggregateInputType = {
    id?: true
    user_id?: true
    community_id?: true
    view_count?: true
    comment_count?: true
  }

  export type PostMinAggregateInputType = {
    id?: true
    user_id?: true
    community_id?: true
    title?: true
    content?: true
    is_anonymous?: true
    visibility?: true
    view_count?: true
    comment_count?: true
    is_blinded?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type PostMaxAggregateInputType = {
    id?: true
    user_id?: true
    community_id?: true
    title?: true
    content?: true
    is_anonymous?: true
    visibility?: true
    view_count?: true
    comment_count?: true
    is_blinded?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type PostCountAggregateInputType = {
    id?: true
    user_id?: true
    community_id?: true
    title?: true
    content?: true
    is_anonymous?: true
    visibility?: true
    view_count?: true
    comment_count?: true
    is_blinded?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post to aggregate.
     */
    where?: postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned posts
    **/
    _count?: true | PostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostMaxAggregateInputType
  }

  export type GetPostAggregateType<T extends PostAggregateArgs> = {
        [P in keyof T & keyof AggregatePost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost[P]>
      : GetScalarType<T[P], AggregatePost[P]>
  }




  export type postGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postWhereInput
    orderBy?: postOrderByWithAggregationInput | postOrderByWithAggregationInput[]
    by: PostScalarFieldEnum[] | PostScalarFieldEnum
    having?: postScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostCountAggregateInputType | true
    _avg?: PostAvgAggregateInputType
    _sum?: PostSumAggregateInputType
    _min?: PostMinAggregateInputType
    _max?: PostMaxAggregateInputType
  }

  export type PostGroupByOutputType = {
    id: number
    user_id: number
    community_id: number
    title: string | null
    content: string | null
    is_anonymous: boolean
    visibility: $Enums.post_visibility
    view_count: number
    comment_count: number
    is_blinded: boolean
    is_deleted: boolean
    created_at: Date
    updated_at: Date | null
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  type GetPostGroupByPayload<T extends postGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostGroupByOutputType[P]>
            : GetScalarType<T[P], PostGroupByOutputType[P]>
        }
      >
    >


  export type postSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    community_id?: boolean
    title?: boolean
    content?: boolean
    is_anonymous?: boolean
    visibility?: boolean
    view_count?: boolean
    comment_count?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    comment?: boolean | post$commentArgs<ExtArgs>
    feed_cache?: boolean | post$feed_cacheArgs<ExtArgs>
    notification?: boolean | post$notificationArgs<ExtArgs>
    community?: boolean | communityDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    post_file?: boolean | post$post_fileArgs<ExtArgs>
    post_like?: boolean | post$post_likeArgs<ExtArgs>
    post_reaction?: boolean | post$post_reactionArgs<ExtArgs>
    post_tag?: boolean | post$post_tagArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>



  export type postSelectScalar = {
    id?: boolean
    user_id?: boolean
    community_id?: boolean
    title?: boolean
    content?: boolean
    is_anonymous?: boolean
    visibility?: boolean
    view_count?: boolean
    comment_count?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type postOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "community_id" | "title" | "content" | "is_anonymous" | "visibility" | "view_count" | "comment_count" | "is_blinded" | "is_deleted" | "created_at" | "updated_at", ExtArgs["result"]["post"]>
  export type postInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comment?: boolean | post$commentArgs<ExtArgs>
    feed_cache?: boolean | post$feed_cacheArgs<ExtArgs>
    notification?: boolean | post$notificationArgs<ExtArgs>
    community?: boolean | communityDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    post_file?: boolean | post$post_fileArgs<ExtArgs>
    post_like?: boolean | post$post_likeArgs<ExtArgs>
    post_reaction?: boolean | post$post_reactionArgs<ExtArgs>
    post_tag?: boolean | post$post_tagArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $postPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post"
    objects: {
      comment: Prisma.$commentPayload<ExtArgs>[]
      feed_cache: Prisma.$feed_cachePayload<ExtArgs>[]
      notification: Prisma.$notificationPayload<ExtArgs>[]
      community: Prisma.$communityPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
      post_file: Prisma.$post_filePayload<ExtArgs>[]
      post_like: Prisma.$post_likePayload<ExtArgs>[]
      post_reaction: Prisma.$post_reactionPayload<ExtArgs>[]
      post_tag: Prisma.$post_tagPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      community_id: number
      title: string | null
      content: string | null
      is_anonymous: boolean
      visibility: $Enums.post_visibility
      view_count: number
      comment_count: number
      is_blinded: boolean
      is_deleted: boolean
      created_at: Date
      updated_at: Date | null
    }, ExtArgs["result"]["post"]>
    composites: {}
  }

  type postGetPayload<S extends boolean | null | undefined | postDefaultArgs> = $Result.GetResult<Prisma.$postPayload, S>

  type postCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<postFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PostCountAggregateInputType | true
    }

  export interface postDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post'], meta: { name: 'post' } }
    /**
     * Find zero or one Post that matches the filter.
     * @param {postFindUniqueArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends postFindUniqueArgs>(args: SelectSubset<T, postFindUniqueArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {postFindUniqueOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends postFindUniqueOrThrowArgs>(args: SelectSubset<T, postFindUniqueOrThrowArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postFindFirstArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends postFindFirstArgs>(args?: SelectSubset<T, postFindFirstArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postFindFirstOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends postFindFirstOrThrowArgs>(args?: SelectSubset<T, postFindFirstOrThrowArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.post.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.post.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postWithIdOnly = await prisma.post.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends postFindManyArgs>(args?: SelectSubset<T, postFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post.
     * @param {postCreateArgs} args - Arguments to create a Post.
     * @example
     * // Create one Post
     * const Post = await prisma.post.create({
     *   data: {
     *     // ... data to create a Post
     *   }
     * })
     * 
     */
    create<T extends postCreateArgs>(args: SelectSubset<T, postCreateArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Posts.
     * @param {postCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends postCreateManyArgs>(args?: SelectSubset<T, postCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post.
     * @param {postDeleteArgs} args - Arguments to delete one Post.
     * @example
     * // Delete one Post
     * const Post = await prisma.post.delete({
     *   where: {
     *     // ... filter to delete one Post
     *   }
     * })
     * 
     */
    delete<T extends postDeleteArgs>(args: SelectSubset<T, postDeleteArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post.
     * @param {postUpdateArgs} args - Arguments to update one Post.
     * @example
     * // Update one Post
     * const post = await prisma.post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends postUpdateArgs>(args: SelectSubset<T, postUpdateArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Posts.
     * @param {postDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends postDeleteManyArgs>(args?: SelectSubset<T, postDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends postUpdateManyArgs>(args: SelectSubset<T, postUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post.
     * @param {postUpsertArgs} args - Arguments to update or create a Post.
     * @example
     * // Update or create a Post
     * const post = await prisma.post.upsert({
     *   create: {
     *     // ... data to create a Post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post we want to update
     *   }
     * })
     */
    upsert<T extends postUpsertArgs>(args: SelectSubset<T, postUpsertArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.post.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends postCountArgs>(
      args?: Subset<T, postCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostAggregateArgs>(args: Subset<T, PostAggregateArgs>): Prisma.PrismaPromise<GetPostAggregateType<T>>

    /**
     * Group by Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends postGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: postGroupByArgs['orderBy'] }
        : { orderBy?: postGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, postGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post model
   */
  readonly fields: postFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__postClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comment<T extends post$commentArgs<ExtArgs> = {}>(args?: Subset<T, post$commentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    feed_cache<T extends post$feed_cacheArgs<ExtArgs> = {}>(args?: Subset<T, post$feed_cacheArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notification<T extends post$notificationArgs<ExtArgs> = {}>(args?: Subset<T, post$notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    community<T extends communityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, communityDefaultArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    post_file<T extends post$post_fileArgs<ExtArgs> = {}>(args?: Subset<T, post$post_fileArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_like<T extends post$post_likeArgs<ExtArgs> = {}>(args?: Subset<T, post$post_likeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_reaction<T extends post$post_reactionArgs<ExtArgs> = {}>(args?: Subset<T, post$post_reactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_tag<T extends post$post_tagArgs<ExtArgs> = {}>(args?: Subset<T, post$post_tagArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post model
   */
  interface postFieldRefs {
    readonly id: FieldRef<"post", 'Int'>
    readonly user_id: FieldRef<"post", 'Int'>
    readonly community_id: FieldRef<"post", 'Int'>
    readonly title: FieldRef<"post", 'String'>
    readonly content: FieldRef<"post", 'String'>
    readonly is_anonymous: FieldRef<"post", 'Boolean'>
    readonly visibility: FieldRef<"post", 'post_visibility'>
    readonly view_count: FieldRef<"post", 'Int'>
    readonly comment_count: FieldRef<"post", 'Int'>
    readonly is_blinded: FieldRef<"post", 'Boolean'>
    readonly is_deleted: FieldRef<"post", 'Boolean'>
    readonly created_at: FieldRef<"post", 'DateTime'>
    readonly updated_at: FieldRef<"post", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * post findUnique
   */
  export type postFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which post to fetch.
     */
    where: postWhereUniqueInput
  }

  /**
   * post findUniqueOrThrow
   */
  export type postFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which post to fetch.
     */
    where: postWhereUniqueInput
  }

  /**
   * post findFirst
   */
  export type postFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which post to fetch.
     */
    where?: postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * post findFirstOrThrow
   */
  export type postFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which post to fetch.
     */
    where?: postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * post findMany
   */
  export type postFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing posts.
     */
    cursor?: postWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * post create
   */
  export type postCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * The data needed to create a post.
     */
    data: XOR<postCreateInput, postUncheckedCreateInput>
  }

  /**
   * post createMany
   */
  export type postCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many posts.
     */
    data: postCreateManyInput | postCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post update
   */
  export type postUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * The data needed to update a post.
     */
    data: XOR<postUpdateInput, postUncheckedUpdateInput>
    /**
     * Choose, which post to update.
     */
    where: postWhereUniqueInput
  }

  /**
   * post updateMany
   */
  export type postUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update posts.
     */
    data: XOR<postUpdateManyMutationInput, postUncheckedUpdateManyInput>
    /**
     * Filter which posts to update
     */
    where?: postWhereInput
    /**
     * Limit how many posts to update.
     */
    limit?: number
  }

  /**
   * post upsert
   */
  export type postUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * The filter to search for the post to update in case it exists.
     */
    where: postWhereUniqueInput
    /**
     * In case the post found by the `where` argument doesn't exist, create a new post with this data.
     */
    create: XOR<postCreateInput, postUncheckedCreateInput>
    /**
     * In case the post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<postUpdateInput, postUncheckedUpdateInput>
  }

  /**
   * post delete
   */
  export type postDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    /**
     * Filter which post to delete.
     */
    where: postWhereUniqueInput
  }

  /**
   * post deleteMany
   */
  export type postDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts to delete
     */
    where?: postWhereInput
    /**
     * Limit how many posts to delete.
     */
    limit?: number
  }

  /**
   * post.comment
   */
  export type post$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    where?: commentWhereInput
    orderBy?: commentOrderByWithRelationInput | commentOrderByWithRelationInput[]
    cursor?: commentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * post.feed_cache
   */
  export type post$feed_cacheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    where?: feed_cacheWhereInput
    orderBy?: feed_cacheOrderByWithRelationInput | feed_cacheOrderByWithRelationInput[]
    cursor?: feed_cacheWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Feed_cacheScalarFieldEnum | Feed_cacheScalarFieldEnum[]
  }

  /**
   * post.notification
   */
  export type post$notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * post.post_file
   */
  export type post$post_fileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    where?: post_fileWhereInput
    orderBy?: post_fileOrderByWithRelationInput | post_fileOrderByWithRelationInput[]
    cursor?: post_fileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_fileScalarFieldEnum | Post_fileScalarFieldEnum[]
  }

  /**
   * post.post_like
   */
  export type post$post_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    where?: post_likeWhereInput
    orderBy?: post_likeOrderByWithRelationInput | post_likeOrderByWithRelationInput[]
    cursor?: post_likeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_likeScalarFieldEnum | Post_likeScalarFieldEnum[]
  }

  /**
   * post.post_reaction
   */
  export type post$post_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    where?: post_reactionWhereInput
    orderBy?: post_reactionOrderByWithRelationInput | post_reactionOrderByWithRelationInput[]
    cursor?: post_reactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_reactionScalarFieldEnum | Post_reactionScalarFieldEnum[]
  }

  /**
   * post.post_tag
   */
  export type post$post_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    where?: post_tagWhereInput
    orderBy?: post_tagOrderByWithRelationInput | post_tagOrderByWithRelationInput[]
    cursor?: post_tagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_tagScalarFieldEnum | Post_tagScalarFieldEnum[]
  }

  /**
   * post without action
   */
  export type postDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
  }


  /**
   * Model post_file
   */

  export type AggregatePost_file = {
    _count: Post_fileCountAggregateOutputType | null
    _avg: Post_fileAvgAggregateOutputType | null
    _sum: Post_fileSumAggregateOutputType | null
    _min: Post_fileMinAggregateOutputType | null
    _max: Post_fileMaxAggregateOutputType | null
  }

  export type Post_fileAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
  }

  export type Post_fileSumAggregateOutputType = {
    id: number | null
    post_id: number | null
  }

  export type Post_fileMinAggregateOutputType = {
    id: number | null
    post_id: number | null
    file_url: string | null
    file_type: string | null
    is_thumbnail: boolean | null
    uploaded_at: Date | null
  }

  export type Post_fileMaxAggregateOutputType = {
    id: number | null
    post_id: number | null
    file_url: string | null
    file_type: string | null
    is_thumbnail: boolean | null
    uploaded_at: Date | null
  }

  export type Post_fileCountAggregateOutputType = {
    id: number
    post_id: number
    file_url: number
    file_type: number
    is_thumbnail: number
    uploaded_at: number
    _all: number
  }


  export type Post_fileAvgAggregateInputType = {
    id?: true
    post_id?: true
  }

  export type Post_fileSumAggregateInputType = {
    id?: true
    post_id?: true
  }

  export type Post_fileMinAggregateInputType = {
    id?: true
    post_id?: true
    file_url?: true
    file_type?: true
    is_thumbnail?: true
    uploaded_at?: true
  }

  export type Post_fileMaxAggregateInputType = {
    id?: true
    post_id?: true
    file_url?: true
    file_type?: true
    is_thumbnail?: true
    uploaded_at?: true
  }

  export type Post_fileCountAggregateInputType = {
    id?: true
    post_id?: true
    file_url?: true
    file_type?: true
    is_thumbnail?: true
    uploaded_at?: true
    _all?: true
  }

  export type Post_fileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_file to aggregate.
     */
    where?: post_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_files to fetch.
     */
    orderBy?: post_fileOrderByWithRelationInput | post_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: post_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned post_files
    **/
    _count?: true | Post_fileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Post_fileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Post_fileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Post_fileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Post_fileMaxAggregateInputType
  }

  export type GetPost_fileAggregateType<T extends Post_fileAggregateArgs> = {
        [P in keyof T & keyof AggregatePost_file]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost_file[P]>
      : GetScalarType<T[P], AggregatePost_file[P]>
  }




  export type post_fileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_fileWhereInput
    orderBy?: post_fileOrderByWithAggregationInput | post_fileOrderByWithAggregationInput[]
    by: Post_fileScalarFieldEnum[] | Post_fileScalarFieldEnum
    having?: post_fileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Post_fileCountAggregateInputType | true
    _avg?: Post_fileAvgAggregateInputType
    _sum?: Post_fileSumAggregateInputType
    _min?: Post_fileMinAggregateInputType
    _max?: Post_fileMaxAggregateInputType
  }

  export type Post_fileGroupByOutputType = {
    id: number
    post_id: number
    file_url: string | null
    file_type: string | null
    is_thumbnail: boolean
    uploaded_at: Date
    _count: Post_fileCountAggregateOutputType | null
    _avg: Post_fileAvgAggregateOutputType | null
    _sum: Post_fileSumAggregateOutputType | null
    _min: Post_fileMinAggregateOutputType | null
    _max: Post_fileMaxAggregateOutputType | null
  }

  type GetPost_fileGroupByPayload<T extends post_fileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Post_fileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Post_fileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Post_fileGroupByOutputType[P]>
            : GetScalarType<T[P], Post_fileGroupByOutputType[P]>
        }
      >
    >


  export type post_fileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    file_url?: boolean
    file_type?: boolean
    is_thumbnail?: boolean
    uploaded_at?: boolean
    file_report?: boolean | post_file$file_reportArgs<ExtArgs>
    post?: boolean | postDefaultArgs<ExtArgs>
    _count?: boolean | Post_fileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post_file"]>



  export type post_fileSelectScalar = {
    id?: boolean
    post_id?: boolean
    file_url?: boolean
    file_type?: boolean
    is_thumbnail?: boolean
    uploaded_at?: boolean
  }

  export type post_fileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "file_url" | "file_type" | "is_thumbnail" | "uploaded_at", ExtArgs["result"]["post_file"]>
  export type post_fileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    file_report?: boolean | post_file$file_reportArgs<ExtArgs>
    post?: boolean | postDefaultArgs<ExtArgs>
    _count?: boolean | Post_fileCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $post_filePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post_file"
    objects: {
      file_report: Prisma.$file_reportPayload<ExtArgs>[]
      post: Prisma.$postPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      post_id: number
      file_url: string | null
      file_type: string | null
      is_thumbnail: boolean
      uploaded_at: Date
    }, ExtArgs["result"]["post_file"]>
    composites: {}
  }

  type post_fileGetPayload<S extends boolean | null | undefined | post_fileDefaultArgs> = $Result.GetResult<Prisma.$post_filePayload, S>

  type post_fileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<post_fileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Post_fileCountAggregateInputType | true
    }

  export interface post_fileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post_file'], meta: { name: 'post_file' } }
    /**
     * Find zero or one Post_file that matches the filter.
     * @param {post_fileFindUniqueArgs} args - Arguments to find a Post_file
     * @example
     * // Get one Post_file
     * const post_file = await prisma.post_file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends post_fileFindUniqueArgs>(args: SelectSubset<T, post_fileFindUniqueArgs<ExtArgs>>): Prisma__post_fileClient<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post_file that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {post_fileFindUniqueOrThrowArgs} args - Arguments to find a Post_file
     * @example
     * // Get one Post_file
     * const post_file = await prisma.post_file.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends post_fileFindUniqueOrThrowArgs>(args: SelectSubset<T, post_fileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__post_fileClient<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_file that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_fileFindFirstArgs} args - Arguments to find a Post_file
     * @example
     * // Get one Post_file
     * const post_file = await prisma.post_file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends post_fileFindFirstArgs>(args?: SelectSubset<T, post_fileFindFirstArgs<ExtArgs>>): Prisma__post_fileClient<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_file that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_fileFindFirstOrThrowArgs} args - Arguments to find a Post_file
     * @example
     * // Get one Post_file
     * const post_file = await prisma.post_file.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends post_fileFindFirstOrThrowArgs>(args?: SelectSubset<T, post_fileFindFirstOrThrowArgs<ExtArgs>>): Prisma__post_fileClient<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Post_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_fileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Post_files
     * const post_files = await prisma.post_file.findMany()
     * 
     * // Get first 10 Post_files
     * const post_files = await prisma.post_file.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const post_fileWithIdOnly = await prisma.post_file.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends post_fileFindManyArgs>(args?: SelectSubset<T, post_fileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post_file.
     * @param {post_fileCreateArgs} args - Arguments to create a Post_file.
     * @example
     * // Create one Post_file
     * const Post_file = await prisma.post_file.create({
     *   data: {
     *     // ... data to create a Post_file
     *   }
     * })
     * 
     */
    create<T extends post_fileCreateArgs>(args: SelectSubset<T, post_fileCreateArgs<ExtArgs>>): Prisma__post_fileClient<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Post_files.
     * @param {post_fileCreateManyArgs} args - Arguments to create many Post_files.
     * @example
     * // Create many Post_files
     * const post_file = await prisma.post_file.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends post_fileCreateManyArgs>(args?: SelectSubset<T, post_fileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post_file.
     * @param {post_fileDeleteArgs} args - Arguments to delete one Post_file.
     * @example
     * // Delete one Post_file
     * const Post_file = await prisma.post_file.delete({
     *   where: {
     *     // ... filter to delete one Post_file
     *   }
     * })
     * 
     */
    delete<T extends post_fileDeleteArgs>(args: SelectSubset<T, post_fileDeleteArgs<ExtArgs>>): Prisma__post_fileClient<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post_file.
     * @param {post_fileUpdateArgs} args - Arguments to update one Post_file.
     * @example
     * // Update one Post_file
     * const post_file = await prisma.post_file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends post_fileUpdateArgs>(args: SelectSubset<T, post_fileUpdateArgs<ExtArgs>>): Prisma__post_fileClient<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Post_files.
     * @param {post_fileDeleteManyArgs} args - Arguments to filter Post_files to delete.
     * @example
     * // Delete a few Post_files
     * const { count } = await prisma.post_file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends post_fileDeleteManyArgs>(args?: SelectSubset<T, post_fileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Post_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_fileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Post_files
     * const post_file = await prisma.post_file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends post_fileUpdateManyArgs>(args: SelectSubset<T, post_fileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post_file.
     * @param {post_fileUpsertArgs} args - Arguments to update or create a Post_file.
     * @example
     * // Update or create a Post_file
     * const post_file = await prisma.post_file.upsert({
     *   create: {
     *     // ... data to create a Post_file
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post_file we want to update
     *   }
     * })
     */
    upsert<T extends post_fileUpsertArgs>(args: SelectSubset<T, post_fileUpsertArgs<ExtArgs>>): Prisma__post_fileClient<$Result.GetResult<Prisma.$post_filePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Post_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_fileCountArgs} args - Arguments to filter Post_files to count.
     * @example
     * // Count the number of Post_files
     * const count = await prisma.post_file.count({
     *   where: {
     *     // ... the filter for the Post_files we want to count
     *   }
     * })
    **/
    count<T extends post_fileCountArgs>(
      args?: Subset<T, post_fileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Post_fileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Post_fileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Post_fileAggregateArgs>(args: Subset<T, Post_fileAggregateArgs>): Prisma.PrismaPromise<GetPost_fileAggregateType<T>>

    /**
     * Group by Post_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_fileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends post_fileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: post_fileGroupByArgs['orderBy'] }
        : { orderBy?: post_fileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, post_fileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPost_fileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post_file model
   */
  readonly fields: post_fileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post_file.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__post_fileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    file_report<T extends post_file$file_reportArgs<ExtArgs> = {}>(args?: Subset<T, post_file$file_reportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post<T extends postDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postDefaultArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post_file model
   */
  interface post_fileFieldRefs {
    readonly id: FieldRef<"post_file", 'Int'>
    readonly post_id: FieldRef<"post_file", 'Int'>
    readonly file_url: FieldRef<"post_file", 'String'>
    readonly file_type: FieldRef<"post_file", 'String'>
    readonly is_thumbnail: FieldRef<"post_file", 'Boolean'>
    readonly uploaded_at: FieldRef<"post_file", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * post_file findUnique
   */
  export type post_fileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    /**
     * Filter, which post_file to fetch.
     */
    where: post_fileWhereUniqueInput
  }

  /**
   * post_file findUniqueOrThrow
   */
  export type post_fileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    /**
     * Filter, which post_file to fetch.
     */
    where: post_fileWhereUniqueInput
  }

  /**
   * post_file findFirst
   */
  export type post_fileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    /**
     * Filter, which post_file to fetch.
     */
    where?: post_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_files to fetch.
     */
    orderBy?: post_fileOrderByWithRelationInput | post_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_files.
     */
    cursor?: post_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_files.
     */
    distinct?: Post_fileScalarFieldEnum | Post_fileScalarFieldEnum[]
  }

  /**
   * post_file findFirstOrThrow
   */
  export type post_fileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    /**
     * Filter, which post_file to fetch.
     */
    where?: post_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_files to fetch.
     */
    orderBy?: post_fileOrderByWithRelationInput | post_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_files.
     */
    cursor?: post_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_files.
     */
    distinct?: Post_fileScalarFieldEnum | Post_fileScalarFieldEnum[]
  }

  /**
   * post_file findMany
   */
  export type post_fileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    /**
     * Filter, which post_files to fetch.
     */
    where?: post_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_files to fetch.
     */
    orderBy?: post_fileOrderByWithRelationInput | post_fileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing post_files.
     */
    cursor?: post_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_files.
     */
    skip?: number
    distinct?: Post_fileScalarFieldEnum | Post_fileScalarFieldEnum[]
  }

  /**
   * post_file create
   */
  export type post_fileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    /**
     * The data needed to create a post_file.
     */
    data: XOR<post_fileCreateInput, post_fileUncheckedCreateInput>
  }

  /**
   * post_file createMany
   */
  export type post_fileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many post_files.
     */
    data: post_fileCreateManyInput | post_fileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post_file update
   */
  export type post_fileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    /**
     * The data needed to update a post_file.
     */
    data: XOR<post_fileUpdateInput, post_fileUncheckedUpdateInput>
    /**
     * Choose, which post_file to update.
     */
    where: post_fileWhereUniqueInput
  }

  /**
   * post_file updateMany
   */
  export type post_fileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update post_files.
     */
    data: XOR<post_fileUpdateManyMutationInput, post_fileUncheckedUpdateManyInput>
    /**
     * Filter which post_files to update
     */
    where?: post_fileWhereInput
    /**
     * Limit how many post_files to update.
     */
    limit?: number
  }

  /**
   * post_file upsert
   */
  export type post_fileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    /**
     * The filter to search for the post_file to update in case it exists.
     */
    where: post_fileWhereUniqueInput
    /**
     * In case the post_file found by the `where` argument doesn't exist, create a new post_file with this data.
     */
    create: XOR<post_fileCreateInput, post_fileUncheckedCreateInput>
    /**
     * In case the post_file was found with the provided `where` argument, update it with this data.
     */
    update: XOR<post_fileUpdateInput, post_fileUncheckedUpdateInput>
  }

  /**
   * post_file delete
   */
  export type post_fileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
    /**
     * Filter which post_file to delete.
     */
    where: post_fileWhereUniqueInput
  }

  /**
   * post_file deleteMany
   */
  export type post_fileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_files to delete
     */
    where?: post_fileWhereInput
    /**
     * Limit how many post_files to delete.
     */
    limit?: number
  }

  /**
   * post_file.file_report
   */
  export type post_file$file_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    where?: file_reportWhereInput
    orderBy?: file_reportOrderByWithRelationInput | file_reportOrderByWithRelationInput[]
    cursor?: file_reportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: File_reportScalarFieldEnum | File_reportScalarFieldEnum[]
  }

  /**
   * post_file without action
   */
  export type post_fileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_file
     */
    select?: post_fileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_file
     */
    omit?: post_fileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_fileInclude<ExtArgs> | null
  }


  /**
   * Model post_like
   */

  export type AggregatePost_like = {
    _count: Post_likeCountAggregateOutputType | null
    _avg: Post_likeAvgAggregateOutputType | null
    _sum: Post_likeSumAggregateOutputType | null
    _min: Post_likeMinAggregateOutputType | null
    _max: Post_likeMaxAggregateOutputType | null
  }

  export type Post_likeAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
    user_id: number | null
  }

  export type Post_likeSumAggregateOutputType = {
    id: number | null
    post_id: number | null
    user_id: number | null
  }

  export type Post_likeMinAggregateOutputType = {
    id: number | null
    post_id: number | null
    user_id: number | null
    created_at: Date | null
  }

  export type Post_likeMaxAggregateOutputType = {
    id: number | null
    post_id: number | null
    user_id: number | null
    created_at: Date | null
  }

  export type Post_likeCountAggregateOutputType = {
    id: number
    post_id: number
    user_id: number
    created_at: number
    _all: number
  }


  export type Post_likeAvgAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
  }

  export type Post_likeSumAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
  }

  export type Post_likeMinAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    created_at?: true
  }

  export type Post_likeMaxAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    created_at?: true
  }

  export type Post_likeCountAggregateInputType = {
    id?: true
    post_id?: true
    user_id?: true
    created_at?: true
    _all?: true
  }

  export type Post_likeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_like to aggregate.
     */
    where?: post_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_likes to fetch.
     */
    orderBy?: post_likeOrderByWithRelationInput | post_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: post_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned post_likes
    **/
    _count?: true | Post_likeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Post_likeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Post_likeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Post_likeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Post_likeMaxAggregateInputType
  }

  export type GetPost_likeAggregateType<T extends Post_likeAggregateArgs> = {
        [P in keyof T & keyof AggregatePost_like]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost_like[P]>
      : GetScalarType<T[P], AggregatePost_like[P]>
  }




  export type post_likeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_likeWhereInput
    orderBy?: post_likeOrderByWithAggregationInput | post_likeOrderByWithAggregationInput[]
    by: Post_likeScalarFieldEnum[] | Post_likeScalarFieldEnum
    having?: post_likeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Post_likeCountAggregateInputType | true
    _avg?: Post_likeAvgAggregateInputType
    _sum?: Post_likeSumAggregateInputType
    _min?: Post_likeMinAggregateInputType
    _max?: Post_likeMaxAggregateInputType
  }

  export type Post_likeGroupByOutputType = {
    id: number
    post_id: number
    user_id: number
    created_at: Date
    _count: Post_likeCountAggregateOutputType | null
    _avg: Post_likeAvgAggregateOutputType | null
    _sum: Post_likeSumAggregateOutputType | null
    _min: Post_likeMinAggregateOutputType | null
    _max: Post_likeMaxAggregateOutputType | null
  }

  type GetPost_likeGroupByPayload<T extends post_likeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Post_likeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Post_likeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Post_likeGroupByOutputType[P]>
            : GetScalarType<T[P], Post_likeGroupByOutputType[P]>
        }
      >
    >


  export type post_likeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    created_at?: boolean
    post?: boolean | postDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post_like"]>



  export type post_likeSelectScalar = {
    id?: boolean
    post_id?: boolean
    user_id?: boolean
    created_at?: boolean
  }

  export type post_likeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "user_id" | "created_at", ExtArgs["result"]["post_like"]>
  export type post_likeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | postDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $post_likePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post_like"
    objects: {
      post: Prisma.$postPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      post_id: number
      user_id: number
      created_at: Date
    }, ExtArgs["result"]["post_like"]>
    composites: {}
  }

  type post_likeGetPayload<S extends boolean | null | undefined | post_likeDefaultArgs> = $Result.GetResult<Prisma.$post_likePayload, S>

  type post_likeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<post_likeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Post_likeCountAggregateInputType | true
    }

  export interface post_likeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post_like'], meta: { name: 'post_like' } }
    /**
     * Find zero or one Post_like that matches the filter.
     * @param {post_likeFindUniqueArgs} args - Arguments to find a Post_like
     * @example
     * // Get one Post_like
     * const post_like = await prisma.post_like.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends post_likeFindUniqueArgs>(args: SelectSubset<T, post_likeFindUniqueArgs<ExtArgs>>): Prisma__post_likeClient<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post_like that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {post_likeFindUniqueOrThrowArgs} args - Arguments to find a Post_like
     * @example
     * // Get one Post_like
     * const post_like = await prisma.post_like.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends post_likeFindUniqueOrThrowArgs>(args: SelectSubset<T, post_likeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__post_likeClient<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_like that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_likeFindFirstArgs} args - Arguments to find a Post_like
     * @example
     * // Get one Post_like
     * const post_like = await prisma.post_like.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends post_likeFindFirstArgs>(args?: SelectSubset<T, post_likeFindFirstArgs<ExtArgs>>): Prisma__post_likeClient<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_like that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_likeFindFirstOrThrowArgs} args - Arguments to find a Post_like
     * @example
     * // Get one Post_like
     * const post_like = await prisma.post_like.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends post_likeFindFirstOrThrowArgs>(args?: SelectSubset<T, post_likeFindFirstOrThrowArgs<ExtArgs>>): Prisma__post_likeClient<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Post_likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_likeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Post_likes
     * const post_likes = await prisma.post_like.findMany()
     * 
     * // Get first 10 Post_likes
     * const post_likes = await prisma.post_like.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const post_likeWithIdOnly = await prisma.post_like.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends post_likeFindManyArgs>(args?: SelectSubset<T, post_likeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post_like.
     * @param {post_likeCreateArgs} args - Arguments to create a Post_like.
     * @example
     * // Create one Post_like
     * const Post_like = await prisma.post_like.create({
     *   data: {
     *     // ... data to create a Post_like
     *   }
     * })
     * 
     */
    create<T extends post_likeCreateArgs>(args: SelectSubset<T, post_likeCreateArgs<ExtArgs>>): Prisma__post_likeClient<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Post_likes.
     * @param {post_likeCreateManyArgs} args - Arguments to create many Post_likes.
     * @example
     * // Create many Post_likes
     * const post_like = await prisma.post_like.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends post_likeCreateManyArgs>(args?: SelectSubset<T, post_likeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post_like.
     * @param {post_likeDeleteArgs} args - Arguments to delete one Post_like.
     * @example
     * // Delete one Post_like
     * const Post_like = await prisma.post_like.delete({
     *   where: {
     *     // ... filter to delete one Post_like
     *   }
     * })
     * 
     */
    delete<T extends post_likeDeleteArgs>(args: SelectSubset<T, post_likeDeleteArgs<ExtArgs>>): Prisma__post_likeClient<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post_like.
     * @param {post_likeUpdateArgs} args - Arguments to update one Post_like.
     * @example
     * // Update one Post_like
     * const post_like = await prisma.post_like.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends post_likeUpdateArgs>(args: SelectSubset<T, post_likeUpdateArgs<ExtArgs>>): Prisma__post_likeClient<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Post_likes.
     * @param {post_likeDeleteManyArgs} args - Arguments to filter Post_likes to delete.
     * @example
     * // Delete a few Post_likes
     * const { count } = await prisma.post_like.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends post_likeDeleteManyArgs>(args?: SelectSubset<T, post_likeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Post_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_likeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Post_likes
     * const post_like = await prisma.post_like.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends post_likeUpdateManyArgs>(args: SelectSubset<T, post_likeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post_like.
     * @param {post_likeUpsertArgs} args - Arguments to update or create a Post_like.
     * @example
     * // Update or create a Post_like
     * const post_like = await prisma.post_like.upsert({
     *   create: {
     *     // ... data to create a Post_like
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post_like we want to update
     *   }
     * })
     */
    upsert<T extends post_likeUpsertArgs>(args: SelectSubset<T, post_likeUpsertArgs<ExtArgs>>): Prisma__post_likeClient<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Post_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_likeCountArgs} args - Arguments to filter Post_likes to count.
     * @example
     * // Count the number of Post_likes
     * const count = await prisma.post_like.count({
     *   where: {
     *     // ... the filter for the Post_likes we want to count
     *   }
     * })
    **/
    count<T extends post_likeCountArgs>(
      args?: Subset<T, post_likeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Post_likeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post_like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Post_likeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Post_likeAggregateArgs>(args: Subset<T, Post_likeAggregateArgs>): Prisma.PrismaPromise<GetPost_likeAggregateType<T>>

    /**
     * Group by Post_like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_likeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends post_likeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: post_likeGroupByArgs['orderBy'] }
        : { orderBy?: post_likeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, post_likeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPost_likeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post_like model
   */
  readonly fields: post_likeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post_like.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__post_likeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends postDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postDefaultArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post_like model
   */
  interface post_likeFieldRefs {
    readonly id: FieldRef<"post_like", 'Int'>
    readonly post_id: FieldRef<"post_like", 'Int'>
    readonly user_id: FieldRef<"post_like", 'Int'>
    readonly created_at: FieldRef<"post_like", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * post_like findUnique
   */
  export type post_likeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    /**
     * Filter, which post_like to fetch.
     */
    where: post_likeWhereUniqueInput
  }

  /**
   * post_like findUniqueOrThrow
   */
  export type post_likeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    /**
     * Filter, which post_like to fetch.
     */
    where: post_likeWhereUniqueInput
  }

  /**
   * post_like findFirst
   */
  export type post_likeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    /**
     * Filter, which post_like to fetch.
     */
    where?: post_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_likes to fetch.
     */
    orderBy?: post_likeOrderByWithRelationInput | post_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_likes.
     */
    cursor?: post_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_likes.
     */
    distinct?: Post_likeScalarFieldEnum | Post_likeScalarFieldEnum[]
  }

  /**
   * post_like findFirstOrThrow
   */
  export type post_likeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    /**
     * Filter, which post_like to fetch.
     */
    where?: post_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_likes to fetch.
     */
    orderBy?: post_likeOrderByWithRelationInput | post_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_likes.
     */
    cursor?: post_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_likes.
     */
    distinct?: Post_likeScalarFieldEnum | Post_likeScalarFieldEnum[]
  }

  /**
   * post_like findMany
   */
  export type post_likeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    /**
     * Filter, which post_likes to fetch.
     */
    where?: post_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_likes to fetch.
     */
    orderBy?: post_likeOrderByWithRelationInput | post_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing post_likes.
     */
    cursor?: post_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_likes.
     */
    skip?: number
    distinct?: Post_likeScalarFieldEnum | Post_likeScalarFieldEnum[]
  }

  /**
   * post_like create
   */
  export type post_likeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    /**
     * The data needed to create a post_like.
     */
    data: XOR<post_likeCreateInput, post_likeUncheckedCreateInput>
  }

  /**
   * post_like createMany
   */
  export type post_likeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many post_likes.
     */
    data: post_likeCreateManyInput | post_likeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post_like update
   */
  export type post_likeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    /**
     * The data needed to update a post_like.
     */
    data: XOR<post_likeUpdateInput, post_likeUncheckedUpdateInput>
    /**
     * Choose, which post_like to update.
     */
    where: post_likeWhereUniqueInput
  }

  /**
   * post_like updateMany
   */
  export type post_likeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update post_likes.
     */
    data: XOR<post_likeUpdateManyMutationInput, post_likeUncheckedUpdateManyInput>
    /**
     * Filter which post_likes to update
     */
    where?: post_likeWhereInput
    /**
     * Limit how many post_likes to update.
     */
    limit?: number
  }

  /**
   * post_like upsert
   */
  export type post_likeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    /**
     * The filter to search for the post_like to update in case it exists.
     */
    where: post_likeWhereUniqueInput
    /**
     * In case the post_like found by the `where` argument doesn't exist, create a new post_like with this data.
     */
    create: XOR<post_likeCreateInput, post_likeUncheckedCreateInput>
    /**
     * In case the post_like was found with the provided `where` argument, update it with this data.
     */
    update: XOR<post_likeUpdateInput, post_likeUncheckedUpdateInput>
  }

  /**
   * post_like delete
   */
  export type post_likeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    /**
     * Filter which post_like to delete.
     */
    where: post_likeWhereUniqueInput
  }

  /**
   * post_like deleteMany
   */
  export type post_likeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_likes to delete
     */
    where?: post_likeWhereInput
    /**
     * Limit how many post_likes to delete.
     */
    limit?: number
  }

  /**
   * post_like without action
   */
  export type post_likeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
  }


  /**
   * Model post_reaction
   */

  export type AggregatePost_reaction = {
    _count: Post_reactionCountAggregateOutputType | null
    _avg: Post_reactionAvgAggregateOutputType | null
    _sum: Post_reactionSumAggregateOutputType | null
    _min: Post_reactionMinAggregateOutputType | null
    _max: Post_reactionMaxAggregateOutputType | null
  }

  export type Post_reactionAvgAggregateOutputType = {
    post_id: number | null
    user_id: number | null
    emoji_id: number | null
  }

  export type Post_reactionSumAggregateOutputType = {
    post_id: number | null
    user_id: number | null
    emoji_id: number | null
  }

  export type Post_reactionMinAggregateOutputType = {
    post_id: number | null
    user_id: number | null
    emoji_id: number | null
    created_at: Date | null
  }

  export type Post_reactionMaxAggregateOutputType = {
    post_id: number | null
    user_id: number | null
    emoji_id: number | null
    created_at: Date | null
  }

  export type Post_reactionCountAggregateOutputType = {
    post_id: number
    user_id: number
    emoji_id: number
    created_at: number
    _all: number
  }


  export type Post_reactionAvgAggregateInputType = {
    post_id?: true
    user_id?: true
    emoji_id?: true
  }

  export type Post_reactionSumAggregateInputType = {
    post_id?: true
    user_id?: true
    emoji_id?: true
  }

  export type Post_reactionMinAggregateInputType = {
    post_id?: true
    user_id?: true
    emoji_id?: true
    created_at?: true
  }

  export type Post_reactionMaxAggregateInputType = {
    post_id?: true
    user_id?: true
    emoji_id?: true
    created_at?: true
  }

  export type Post_reactionCountAggregateInputType = {
    post_id?: true
    user_id?: true
    emoji_id?: true
    created_at?: true
    _all?: true
  }

  export type Post_reactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_reaction to aggregate.
     */
    where?: post_reactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_reactions to fetch.
     */
    orderBy?: post_reactionOrderByWithRelationInput | post_reactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: post_reactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_reactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_reactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned post_reactions
    **/
    _count?: true | Post_reactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Post_reactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Post_reactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Post_reactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Post_reactionMaxAggregateInputType
  }

  export type GetPost_reactionAggregateType<T extends Post_reactionAggregateArgs> = {
        [P in keyof T & keyof AggregatePost_reaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost_reaction[P]>
      : GetScalarType<T[P], AggregatePost_reaction[P]>
  }




  export type post_reactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_reactionWhereInput
    orderBy?: post_reactionOrderByWithAggregationInput | post_reactionOrderByWithAggregationInput[]
    by: Post_reactionScalarFieldEnum[] | Post_reactionScalarFieldEnum
    having?: post_reactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Post_reactionCountAggregateInputType | true
    _avg?: Post_reactionAvgAggregateInputType
    _sum?: Post_reactionSumAggregateInputType
    _min?: Post_reactionMinAggregateInputType
    _max?: Post_reactionMaxAggregateInputType
  }

  export type Post_reactionGroupByOutputType = {
    post_id: number
    user_id: number
    emoji_id: number
    created_at: Date
    _count: Post_reactionCountAggregateOutputType | null
    _avg: Post_reactionAvgAggregateOutputType | null
    _sum: Post_reactionSumAggregateOutputType | null
    _min: Post_reactionMinAggregateOutputType | null
    _max: Post_reactionMaxAggregateOutputType | null
  }

  type GetPost_reactionGroupByPayload<T extends post_reactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Post_reactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Post_reactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Post_reactionGroupByOutputType[P]>
            : GetScalarType<T[P], Post_reactionGroupByOutputType[P]>
        }
      >
    >


  export type post_reactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    post_id?: boolean
    user_id?: boolean
    emoji_id?: boolean
    created_at?: boolean
    emoji?: boolean | emojiDefaultArgs<ExtArgs>
    post?: boolean | postDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post_reaction"]>



  export type post_reactionSelectScalar = {
    post_id?: boolean
    user_id?: boolean
    emoji_id?: boolean
    created_at?: boolean
  }

  export type post_reactionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"post_id" | "user_id" | "emoji_id" | "created_at", ExtArgs["result"]["post_reaction"]>
  export type post_reactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    emoji?: boolean | emojiDefaultArgs<ExtArgs>
    post?: boolean | postDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $post_reactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post_reaction"
    objects: {
      emoji: Prisma.$emojiPayload<ExtArgs>
      post: Prisma.$postPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      post_id: number
      user_id: number
      emoji_id: number
      created_at: Date
    }, ExtArgs["result"]["post_reaction"]>
    composites: {}
  }

  type post_reactionGetPayload<S extends boolean | null | undefined | post_reactionDefaultArgs> = $Result.GetResult<Prisma.$post_reactionPayload, S>

  type post_reactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<post_reactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Post_reactionCountAggregateInputType | true
    }

  export interface post_reactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post_reaction'], meta: { name: 'post_reaction' } }
    /**
     * Find zero or one Post_reaction that matches the filter.
     * @param {post_reactionFindUniqueArgs} args - Arguments to find a Post_reaction
     * @example
     * // Get one Post_reaction
     * const post_reaction = await prisma.post_reaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends post_reactionFindUniqueArgs>(args: SelectSubset<T, post_reactionFindUniqueArgs<ExtArgs>>): Prisma__post_reactionClient<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post_reaction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {post_reactionFindUniqueOrThrowArgs} args - Arguments to find a Post_reaction
     * @example
     * // Get one Post_reaction
     * const post_reaction = await prisma.post_reaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends post_reactionFindUniqueOrThrowArgs>(args: SelectSubset<T, post_reactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__post_reactionClient<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_reaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_reactionFindFirstArgs} args - Arguments to find a Post_reaction
     * @example
     * // Get one Post_reaction
     * const post_reaction = await prisma.post_reaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends post_reactionFindFirstArgs>(args?: SelectSubset<T, post_reactionFindFirstArgs<ExtArgs>>): Prisma__post_reactionClient<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_reaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_reactionFindFirstOrThrowArgs} args - Arguments to find a Post_reaction
     * @example
     * // Get one Post_reaction
     * const post_reaction = await prisma.post_reaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends post_reactionFindFirstOrThrowArgs>(args?: SelectSubset<T, post_reactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__post_reactionClient<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Post_reactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_reactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Post_reactions
     * const post_reactions = await prisma.post_reaction.findMany()
     * 
     * // Get first 10 Post_reactions
     * const post_reactions = await prisma.post_reaction.findMany({ take: 10 })
     * 
     * // Only select the `post_id`
     * const post_reactionWithPost_idOnly = await prisma.post_reaction.findMany({ select: { post_id: true } })
     * 
     */
    findMany<T extends post_reactionFindManyArgs>(args?: SelectSubset<T, post_reactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post_reaction.
     * @param {post_reactionCreateArgs} args - Arguments to create a Post_reaction.
     * @example
     * // Create one Post_reaction
     * const Post_reaction = await prisma.post_reaction.create({
     *   data: {
     *     // ... data to create a Post_reaction
     *   }
     * })
     * 
     */
    create<T extends post_reactionCreateArgs>(args: SelectSubset<T, post_reactionCreateArgs<ExtArgs>>): Prisma__post_reactionClient<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Post_reactions.
     * @param {post_reactionCreateManyArgs} args - Arguments to create many Post_reactions.
     * @example
     * // Create many Post_reactions
     * const post_reaction = await prisma.post_reaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends post_reactionCreateManyArgs>(args?: SelectSubset<T, post_reactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post_reaction.
     * @param {post_reactionDeleteArgs} args - Arguments to delete one Post_reaction.
     * @example
     * // Delete one Post_reaction
     * const Post_reaction = await prisma.post_reaction.delete({
     *   where: {
     *     // ... filter to delete one Post_reaction
     *   }
     * })
     * 
     */
    delete<T extends post_reactionDeleteArgs>(args: SelectSubset<T, post_reactionDeleteArgs<ExtArgs>>): Prisma__post_reactionClient<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post_reaction.
     * @param {post_reactionUpdateArgs} args - Arguments to update one Post_reaction.
     * @example
     * // Update one Post_reaction
     * const post_reaction = await prisma.post_reaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends post_reactionUpdateArgs>(args: SelectSubset<T, post_reactionUpdateArgs<ExtArgs>>): Prisma__post_reactionClient<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Post_reactions.
     * @param {post_reactionDeleteManyArgs} args - Arguments to filter Post_reactions to delete.
     * @example
     * // Delete a few Post_reactions
     * const { count } = await prisma.post_reaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends post_reactionDeleteManyArgs>(args?: SelectSubset<T, post_reactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Post_reactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_reactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Post_reactions
     * const post_reaction = await prisma.post_reaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends post_reactionUpdateManyArgs>(args: SelectSubset<T, post_reactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post_reaction.
     * @param {post_reactionUpsertArgs} args - Arguments to update or create a Post_reaction.
     * @example
     * // Update or create a Post_reaction
     * const post_reaction = await prisma.post_reaction.upsert({
     *   create: {
     *     // ... data to create a Post_reaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post_reaction we want to update
     *   }
     * })
     */
    upsert<T extends post_reactionUpsertArgs>(args: SelectSubset<T, post_reactionUpsertArgs<ExtArgs>>): Prisma__post_reactionClient<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Post_reactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_reactionCountArgs} args - Arguments to filter Post_reactions to count.
     * @example
     * // Count the number of Post_reactions
     * const count = await prisma.post_reaction.count({
     *   where: {
     *     // ... the filter for the Post_reactions we want to count
     *   }
     * })
    **/
    count<T extends post_reactionCountArgs>(
      args?: Subset<T, post_reactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Post_reactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post_reaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Post_reactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Post_reactionAggregateArgs>(args: Subset<T, Post_reactionAggregateArgs>): Prisma.PrismaPromise<GetPost_reactionAggregateType<T>>

    /**
     * Group by Post_reaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_reactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends post_reactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: post_reactionGroupByArgs['orderBy'] }
        : { orderBy?: post_reactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, post_reactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPost_reactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post_reaction model
   */
  readonly fields: post_reactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post_reaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__post_reactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    emoji<T extends emojiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, emojiDefaultArgs<ExtArgs>>): Prisma__emojiClient<$Result.GetResult<Prisma.$emojiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    post<T extends postDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postDefaultArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post_reaction model
   */
  interface post_reactionFieldRefs {
    readonly post_id: FieldRef<"post_reaction", 'Int'>
    readonly user_id: FieldRef<"post_reaction", 'Int'>
    readonly emoji_id: FieldRef<"post_reaction", 'Int'>
    readonly created_at: FieldRef<"post_reaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * post_reaction findUnique
   */
  export type post_reactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    /**
     * Filter, which post_reaction to fetch.
     */
    where: post_reactionWhereUniqueInput
  }

  /**
   * post_reaction findUniqueOrThrow
   */
  export type post_reactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    /**
     * Filter, which post_reaction to fetch.
     */
    where: post_reactionWhereUniqueInput
  }

  /**
   * post_reaction findFirst
   */
  export type post_reactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    /**
     * Filter, which post_reaction to fetch.
     */
    where?: post_reactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_reactions to fetch.
     */
    orderBy?: post_reactionOrderByWithRelationInput | post_reactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_reactions.
     */
    cursor?: post_reactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_reactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_reactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_reactions.
     */
    distinct?: Post_reactionScalarFieldEnum | Post_reactionScalarFieldEnum[]
  }

  /**
   * post_reaction findFirstOrThrow
   */
  export type post_reactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    /**
     * Filter, which post_reaction to fetch.
     */
    where?: post_reactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_reactions to fetch.
     */
    orderBy?: post_reactionOrderByWithRelationInput | post_reactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_reactions.
     */
    cursor?: post_reactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_reactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_reactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_reactions.
     */
    distinct?: Post_reactionScalarFieldEnum | Post_reactionScalarFieldEnum[]
  }

  /**
   * post_reaction findMany
   */
  export type post_reactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    /**
     * Filter, which post_reactions to fetch.
     */
    where?: post_reactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_reactions to fetch.
     */
    orderBy?: post_reactionOrderByWithRelationInput | post_reactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing post_reactions.
     */
    cursor?: post_reactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_reactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_reactions.
     */
    skip?: number
    distinct?: Post_reactionScalarFieldEnum | Post_reactionScalarFieldEnum[]
  }

  /**
   * post_reaction create
   */
  export type post_reactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    /**
     * The data needed to create a post_reaction.
     */
    data: XOR<post_reactionCreateInput, post_reactionUncheckedCreateInput>
  }

  /**
   * post_reaction createMany
   */
  export type post_reactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many post_reactions.
     */
    data: post_reactionCreateManyInput | post_reactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post_reaction update
   */
  export type post_reactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    /**
     * The data needed to update a post_reaction.
     */
    data: XOR<post_reactionUpdateInput, post_reactionUncheckedUpdateInput>
    /**
     * Choose, which post_reaction to update.
     */
    where: post_reactionWhereUniqueInput
  }

  /**
   * post_reaction updateMany
   */
  export type post_reactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update post_reactions.
     */
    data: XOR<post_reactionUpdateManyMutationInput, post_reactionUncheckedUpdateManyInput>
    /**
     * Filter which post_reactions to update
     */
    where?: post_reactionWhereInput
    /**
     * Limit how many post_reactions to update.
     */
    limit?: number
  }

  /**
   * post_reaction upsert
   */
  export type post_reactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    /**
     * The filter to search for the post_reaction to update in case it exists.
     */
    where: post_reactionWhereUniqueInput
    /**
     * In case the post_reaction found by the `where` argument doesn't exist, create a new post_reaction with this data.
     */
    create: XOR<post_reactionCreateInput, post_reactionUncheckedCreateInput>
    /**
     * In case the post_reaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<post_reactionUpdateInput, post_reactionUncheckedUpdateInput>
  }

  /**
   * post_reaction delete
   */
  export type post_reactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    /**
     * Filter which post_reaction to delete.
     */
    where: post_reactionWhereUniqueInput
  }

  /**
   * post_reaction deleteMany
   */
  export type post_reactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_reactions to delete
     */
    where?: post_reactionWhereInput
    /**
     * Limit how many post_reactions to delete.
     */
    limit?: number
  }

  /**
   * post_reaction without action
   */
  export type post_reactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
  }


  /**
   * Model post_tag
   */

  export type AggregatePost_tag = {
    _count: Post_tagCountAggregateOutputType | null
    _avg: Post_tagAvgAggregateOutputType | null
    _sum: Post_tagSumAggregateOutputType | null
    _min: Post_tagMinAggregateOutputType | null
    _max: Post_tagMaxAggregateOutputType | null
  }

  export type Post_tagAvgAggregateOutputType = {
    post_id: number | null
    tag_id: number | null
  }

  export type Post_tagSumAggregateOutputType = {
    post_id: number | null
    tag_id: number | null
  }

  export type Post_tagMinAggregateOutputType = {
    post_id: number | null
    tag_id: number | null
  }

  export type Post_tagMaxAggregateOutputType = {
    post_id: number | null
    tag_id: number | null
  }

  export type Post_tagCountAggregateOutputType = {
    post_id: number
    tag_id: number
    _all: number
  }


  export type Post_tagAvgAggregateInputType = {
    post_id?: true
    tag_id?: true
  }

  export type Post_tagSumAggregateInputType = {
    post_id?: true
    tag_id?: true
  }

  export type Post_tagMinAggregateInputType = {
    post_id?: true
    tag_id?: true
  }

  export type Post_tagMaxAggregateInputType = {
    post_id?: true
    tag_id?: true
  }

  export type Post_tagCountAggregateInputType = {
    post_id?: true
    tag_id?: true
    _all?: true
  }

  export type Post_tagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_tag to aggregate.
     */
    where?: post_tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_tags to fetch.
     */
    orderBy?: post_tagOrderByWithRelationInput | post_tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: post_tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned post_tags
    **/
    _count?: true | Post_tagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Post_tagAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Post_tagSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Post_tagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Post_tagMaxAggregateInputType
  }

  export type GetPost_tagAggregateType<T extends Post_tagAggregateArgs> = {
        [P in keyof T & keyof AggregatePost_tag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost_tag[P]>
      : GetScalarType<T[P], AggregatePost_tag[P]>
  }




  export type post_tagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_tagWhereInput
    orderBy?: post_tagOrderByWithAggregationInput | post_tagOrderByWithAggregationInput[]
    by: Post_tagScalarFieldEnum[] | Post_tagScalarFieldEnum
    having?: post_tagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Post_tagCountAggregateInputType | true
    _avg?: Post_tagAvgAggregateInputType
    _sum?: Post_tagSumAggregateInputType
    _min?: Post_tagMinAggregateInputType
    _max?: Post_tagMaxAggregateInputType
  }

  export type Post_tagGroupByOutputType = {
    post_id: number
    tag_id: number
    _count: Post_tagCountAggregateOutputType | null
    _avg: Post_tagAvgAggregateOutputType | null
    _sum: Post_tagSumAggregateOutputType | null
    _min: Post_tagMinAggregateOutputType | null
    _max: Post_tagMaxAggregateOutputType | null
  }

  type GetPost_tagGroupByPayload<T extends post_tagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Post_tagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Post_tagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Post_tagGroupByOutputType[P]>
            : GetScalarType<T[P], Post_tagGroupByOutputType[P]>
        }
      >
    >


  export type post_tagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    post_id?: boolean
    tag_id?: boolean
    post?: boolean | postDefaultArgs<ExtArgs>
    tag?: boolean | tagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post_tag"]>



  export type post_tagSelectScalar = {
    post_id?: boolean
    tag_id?: boolean
  }

  export type post_tagOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"post_id" | "tag_id", ExtArgs["result"]["post_tag"]>
  export type post_tagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | postDefaultArgs<ExtArgs>
    tag?: boolean | tagDefaultArgs<ExtArgs>
  }

  export type $post_tagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post_tag"
    objects: {
      post: Prisma.$postPayload<ExtArgs>
      tag: Prisma.$tagPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      post_id: number
      tag_id: number
    }, ExtArgs["result"]["post_tag"]>
    composites: {}
  }

  type post_tagGetPayload<S extends boolean | null | undefined | post_tagDefaultArgs> = $Result.GetResult<Prisma.$post_tagPayload, S>

  type post_tagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<post_tagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Post_tagCountAggregateInputType | true
    }

  export interface post_tagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post_tag'], meta: { name: 'post_tag' } }
    /**
     * Find zero or one Post_tag that matches the filter.
     * @param {post_tagFindUniqueArgs} args - Arguments to find a Post_tag
     * @example
     * // Get one Post_tag
     * const post_tag = await prisma.post_tag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends post_tagFindUniqueArgs>(args: SelectSubset<T, post_tagFindUniqueArgs<ExtArgs>>): Prisma__post_tagClient<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post_tag that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {post_tagFindUniqueOrThrowArgs} args - Arguments to find a Post_tag
     * @example
     * // Get one Post_tag
     * const post_tag = await prisma.post_tag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends post_tagFindUniqueOrThrowArgs>(args: SelectSubset<T, post_tagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__post_tagClient<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_tag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_tagFindFirstArgs} args - Arguments to find a Post_tag
     * @example
     * // Get one Post_tag
     * const post_tag = await prisma.post_tag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends post_tagFindFirstArgs>(args?: SelectSubset<T, post_tagFindFirstArgs<ExtArgs>>): Prisma__post_tagClient<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_tag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_tagFindFirstOrThrowArgs} args - Arguments to find a Post_tag
     * @example
     * // Get one Post_tag
     * const post_tag = await prisma.post_tag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends post_tagFindFirstOrThrowArgs>(args?: SelectSubset<T, post_tagFindFirstOrThrowArgs<ExtArgs>>): Prisma__post_tagClient<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Post_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_tagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Post_tags
     * const post_tags = await prisma.post_tag.findMany()
     * 
     * // Get first 10 Post_tags
     * const post_tags = await prisma.post_tag.findMany({ take: 10 })
     * 
     * // Only select the `post_id`
     * const post_tagWithPost_idOnly = await prisma.post_tag.findMany({ select: { post_id: true } })
     * 
     */
    findMany<T extends post_tagFindManyArgs>(args?: SelectSubset<T, post_tagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post_tag.
     * @param {post_tagCreateArgs} args - Arguments to create a Post_tag.
     * @example
     * // Create one Post_tag
     * const Post_tag = await prisma.post_tag.create({
     *   data: {
     *     // ... data to create a Post_tag
     *   }
     * })
     * 
     */
    create<T extends post_tagCreateArgs>(args: SelectSubset<T, post_tagCreateArgs<ExtArgs>>): Prisma__post_tagClient<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Post_tags.
     * @param {post_tagCreateManyArgs} args - Arguments to create many Post_tags.
     * @example
     * // Create many Post_tags
     * const post_tag = await prisma.post_tag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends post_tagCreateManyArgs>(args?: SelectSubset<T, post_tagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post_tag.
     * @param {post_tagDeleteArgs} args - Arguments to delete one Post_tag.
     * @example
     * // Delete one Post_tag
     * const Post_tag = await prisma.post_tag.delete({
     *   where: {
     *     // ... filter to delete one Post_tag
     *   }
     * })
     * 
     */
    delete<T extends post_tagDeleteArgs>(args: SelectSubset<T, post_tagDeleteArgs<ExtArgs>>): Prisma__post_tagClient<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post_tag.
     * @param {post_tagUpdateArgs} args - Arguments to update one Post_tag.
     * @example
     * // Update one Post_tag
     * const post_tag = await prisma.post_tag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends post_tagUpdateArgs>(args: SelectSubset<T, post_tagUpdateArgs<ExtArgs>>): Prisma__post_tagClient<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Post_tags.
     * @param {post_tagDeleteManyArgs} args - Arguments to filter Post_tags to delete.
     * @example
     * // Delete a few Post_tags
     * const { count } = await prisma.post_tag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends post_tagDeleteManyArgs>(args?: SelectSubset<T, post_tagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Post_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_tagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Post_tags
     * const post_tag = await prisma.post_tag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends post_tagUpdateManyArgs>(args: SelectSubset<T, post_tagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post_tag.
     * @param {post_tagUpsertArgs} args - Arguments to update or create a Post_tag.
     * @example
     * // Update or create a Post_tag
     * const post_tag = await prisma.post_tag.upsert({
     *   create: {
     *     // ... data to create a Post_tag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post_tag we want to update
     *   }
     * })
     */
    upsert<T extends post_tagUpsertArgs>(args: SelectSubset<T, post_tagUpsertArgs<ExtArgs>>): Prisma__post_tagClient<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Post_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_tagCountArgs} args - Arguments to filter Post_tags to count.
     * @example
     * // Count the number of Post_tags
     * const count = await prisma.post_tag.count({
     *   where: {
     *     // ... the filter for the Post_tags we want to count
     *   }
     * })
    **/
    count<T extends post_tagCountArgs>(
      args?: Subset<T, post_tagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Post_tagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post_tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Post_tagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Post_tagAggregateArgs>(args: Subset<T, Post_tagAggregateArgs>): Prisma.PrismaPromise<GetPost_tagAggregateType<T>>

    /**
     * Group by Post_tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_tagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends post_tagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: post_tagGroupByArgs['orderBy'] }
        : { orderBy?: post_tagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, post_tagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPost_tagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post_tag model
   */
  readonly fields: post_tagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post_tag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__post_tagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends postDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postDefaultArgs<ExtArgs>>): Prisma__postClient<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tag<T extends tagDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tagDefaultArgs<ExtArgs>>): Prisma__tagClient<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post_tag model
   */
  interface post_tagFieldRefs {
    readonly post_id: FieldRef<"post_tag", 'Int'>
    readonly tag_id: FieldRef<"post_tag", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * post_tag findUnique
   */
  export type post_tagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    /**
     * Filter, which post_tag to fetch.
     */
    where: post_tagWhereUniqueInput
  }

  /**
   * post_tag findUniqueOrThrow
   */
  export type post_tagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    /**
     * Filter, which post_tag to fetch.
     */
    where: post_tagWhereUniqueInput
  }

  /**
   * post_tag findFirst
   */
  export type post_tagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    /**
     * Filter, which post_tag to fetch.
     */
    where?: post_tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_tags to fetch.
     */
    orderBy?: post_tagOrderByWithRelationInput | post_tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_tags.
     */
    cursor?: post_tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_tags.
     */
    distinct?: Post_tagScalarFieldEnum | Post_tagScalarFieldEnum[]
  }

  /**
   * post_tag findFirstOrThrow
   */
  export type post_tagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    /**
     * Filter, which post_tag to fetch.
     */
    where?: post_tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_tags to fetch.
     */
    orderBy?: post_tagOrderByWithRelationInput | post_tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_tags.
     */
    cursor?: post_tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_tags.
     */
    distinct?: Post_tagScalarFieldEnum | Post_tagScalarFieldEnum[]
  }

  /**
   * post_tag findMany
   */
  export type post_tagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    /**
     * Filter, which post_tags to fetch.
     */
    where?: post_tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_tags to fetch.
     */
    orderBy?: post_tagOrderByWithRelationInput | post_tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing post_tags.
     */
    cursor?: post_tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_tags.
     */
    skip?: number
    distinct?: Post_tagScalarFieldEnum | Post_tagScalarFieldEnum[]
  }

  /**
   * post_tag create
   */
  export type post_tagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    /**
     * The data needed to create a post_tag.
     */
    data: XOR<post_tagCreateInput, post_tagUncheckedCreateInput>
  }

  /**
   * post_tag createMany
   */
  export type post_tagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many post_tags.
     */
    data: post_tagCreateManyInput | post_tagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post_tag update
   */
  export type post_tagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    /**
     * The data needed to update a post_tag.
     */
    data: XOR<post_tagUpdateInput, post_tagUncheckedUpdateInput>
    /**
     * Choose, which post_tag to update.
     */
    where: post_tagWhereUniqueInput
  }

  /**
   * post_tag updateMany
   */
  export type post_tagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update post_tags.
     */
    data: XOR<post_tagUpdateManyMutationInput, post_tagUncheckedUpdateManyInput>
    /**
     * Filter which post_tags to update
     */
    where?: post_tagWhereInput
    /**
     * Limit how many post_tags to update.
     */
    limit?: number
  }

  /**
   * post_tag upsert
   */
  export type post_tagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    /**
     * The filter to search for the post_tag to update in case it exists.
     */
    where: post_tagWhereUniqueInput
    /**
     * In case the post_tag found by the `where` argument doesn't exist, create a new post_tag with this data.
     */
    create: XOR<post_tagCreateInput, post_tagUncheckedCreateInput>
    /**
     * In case the post_tag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<post_tagUpdateInput, post_tagUncheckedUpdateInput>
  }

  /**
   * post_tag delete
   */
  export type post_tagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    /**
     * Filter which post_tag to delete.
     */
    where: post_tagWhereUniqueInput
  }

  /**
   * post_tag deleteMany
   */
  export type post_tagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_tags to delete
     */
    where?: post_tagWhereInput
    /**
     * Limit how many post_tags to delete.
     */
    limit?: number
  }

  /**
   * post_tag without action
   */
  export type post_tagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
  }


  /**
   * Model profile_visit
   */

  export type AggregateProfile_visit = {
    _count: Profile_visitCountAggregateOutputType | null
    _avg: Profile_visitAvgAggregateOutputType | null
    _sum: Profile_visitSumAggregateOutputType | null
    _min: Profile_visitMinAggregateOutputType | null
    _max: Profile_visitMaxAggregateOutputType | null
  }

  export type Profile_visitAvgAggregateOutputType = {
    id: number | null
    visitor_id: number | null
    profile_user_id: number | null
  }

  export type Profile_visitSumAggregateOutputType = {
    id: number | null
    visitor_id: number | null
    profile_user_id: number | null
  }

  export type Profile_visitMinAggregateOutputType = {
    id: number | null
    visitor_id: number | null
    profile_user_id: number | null
    visited_at: Date | null
  }

  export type Profile_visitMaxAggregateOutputType = {
    id: number | null
    visitor_id: number | null
    profile_user_id: number | null
    visited_at: Date | null
  }

  export type Profile_visitCountAggregateOutputType = {
    id: number
    visitor_id: number
    profile_user_id: number
    visited_at: number
    _all: number
  }


  export type Profile_visitAvgAggregateInputType = {
    id?: true
    visitor_id?: true
    profile_user_id?: true
  }

  export type Profile_visitSumAggregateInputType = {
    id?: true
    visitor_id?: true
    profile_user_id?: true
  }

  export type Profile_visitMinAggregateInputType = {
    id?: true
    visitor_id?: true
    profile_user_id?: true
    visited_at?: true
  }

  export type Profile_visitMaxAggregateInputType = {
    id?: true
    visitor_id?: true
    profile_user_id?: true
    visited_at?: true
  }

  export type Profile_visitCountAggregateInputType = {
    id?: true
    visitor_id?: true
    profile_user_id?: true
    visited_at?: true
    _all?: true
  }

  export type Profile_visitAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profile_visit to aggregate.
     */
    where?: profile_visitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profile_visits to fetch.
     */
    orderBy?: profile_visitOrderByWithRelationInput | profile_visitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: profile_visitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profile_visits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profile_visits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned profile_visits
    **/
    _count?: true | Profile_visitCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Profile_visitAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Profile_visitSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Profile_visitMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Profile_visitMaxAggregateInputType
  }

  export type GetProfile_visitAggregateType<T extends Profile_visitAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile_visit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile_visit[P]>
      : GetScalarType<T[P], AggregateProfile_visit[P]>
  }




  export type profile_visitGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: profile_visitWhereInput
    orderBy?: profile_visitOrderByWithAggregationInput | profile_visitOrderByWithAggregationInput[]
    by: Profile_visitScalarFieldEnum[] | Profile_visitScalarFieldEnum
    having?: profile_visitScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Profile_visitCountAggregateInputType | true
    _avg?: Profile_visitAvgAggregateInputType
    _sum?: Profile_visitSumAggregateInputType
    _min?: Profile_visitMinAggregateInputType
    _max?: Profile_visitMaxAggregateInputType
  }

  export type Profile_visitGroupByOutputType = {
    id: number
    visitor_id: number
    profile_user_id: number
    visited_at: Date
    _count: Profile_visitCountAggregateOutputType | null
    _avg: Profile_visitAvgAggregateOutputType | null
    _sum: Profile_visitSumAggregateOutputType | null
    _min: Profile_visitMinAggregateOutputType | null
    _max: Profile_visitMaxAggregateOutputType | null
  }

  type GetProfile_visitGroupByPayload<T extends profile_visitGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Profile_visitGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Profile_visitGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Profile_visitGroupByOutputType[P]>
            : GetScalarType<T[P], Profile_visitGroupByOutputType[P]>
        }
      >
    >


  export type profile_visitSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    visitor_id?: boolean
    profile_user_id?: boolean
    visited_at?: boolean
    user_profile_visit_profile_user_idTouser?: boolean | userDefaultArgs<ExtArgs>
    user_profile_visit_visitor_idTouser?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile_visit"]>



  export type profile_visitSelectScalar = {
    id?: boolean
    visitor_id?: boolean
    profile_user_id?: boolean
    visited_at?: boolean
  }

  export type profile_visitOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "visitor_id" | "profile_user_id" | "visited_at", ExtArgs["result"]["profile_visit"]>
  export type profile_visitInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_profile_visit_profile_user_idTouser?: boolean | userDefaultArgs<ExtArgs>
    user_profile_visit_visitor_idTouser?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $profile_visitPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "profile_visit"
    objects: {
      user_profile_visit_profile_user_idTouser: Prisma.$userPayload<ExtArgs>
      user_profile_visit_visitor_idTouser: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      visitor_id: number
      profile_user_id: number
      visited_at: Date
    }, ExtArgs["result"]["profile_visit"]>
    composites: {}
  }

  type profile_visitGetPayload<S extends boolean | null | undefined | profile_visitDefaultArgs> = $Result.GetResult<Prisma.$profile_visitPayload, S>

  type profile_visitCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<profile_visitFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Profile_visitCountAggregateInputType | true
    }

  export interface profile_visitDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['profile_visit'], meta: { name: 'profile_visit' } }
    /**
     * Find zero or one Profile_visit that matches the filter.
     * @param {profile_visitFindUniqueArgs} args - Arguments to find a Profile_visit
     * @example
     * // Get one Profile_visit
     * const profile_visit = await prisma.profile_visit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends profile_visitFindUniqueArgs>(args: SelectSubset<T, profile_visitFindUniqueArgs<ExtArgs>>): Prisma__profile_visitClient<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Profile_visit that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {profile_visitFindUniqueOrThrowArgs} args - Arguments to find a Profile_visit
     * @example
     * // Get one Profile_visit
     * const profile_visit = await prisma.profile_visit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends profile_visitFindUniqueOrThrowArgs>(args: SelectSubset<T, profile_visitFindUniqueOrThrowArgs<ExtArgs>>): Prisma__profile_visitClient<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile_visit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profile_visitFindFirstArgs} args - Arguments to find a Profile_visit
     * @example
     * // Get one Profile_visit
     * const profile_visit = await prisma.profile_visit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends profile_visitFindFirstArgs>(args?: SelectSubset<T, profile_visitFindFirstArgs<ExtArgs>>): Prisma__profile_visitClient<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile_visit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profile_visitFindFirstOrThrowArgs} args - Arguments to find a Profile_visit
     * @example
     * // Get one Profile_visit
     * const profile_visit = await prisma.profile_visit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends profile_visitFindFirstOrThrowArgs>(args?: SelectSubset<T, profile_visitFindFirstOrThrowArgs<ExtArgs>>): Prisma__profile_visitClient<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Profile_visits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profile_visitFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profile_visits
     * const profile_visits = await prisma.profile_visit.findMany()
     * 
     * // Get first 10 Profile_visits
     * const profile_visits = await prisma.profile_visit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profile_visitWithIdOnly = await prisma.profile_visit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends profile_visitFindManyArgs>(args?: SelectSubset<T, profile_visitFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Profile_visit.
     * @param {profile_visitCreateArgs} args - Arguments to create a Profile_visit.
     * @example
     * // Create one Profile_visit
     * const Profile_visit = await prisma.profile_visit.create({
     *   data: {
     *     // ... data to create a Profile_visit
     *   }
     * })
     * 
     */
    create<T extends profile_visitCreateArgs>(args: SelectSubset<T, profile_visitCreateArgs<ExtArgs>>): Prisma__profile_visitClient<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Profile_visits.
     * @param {profile_visitCreateManyArgs} args - Arguments to create many Profile_visits.
     * @example
     * // Create many Profile_visits
     * const profile_visit = await prisma.profile_visit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends profile_visitCreateManyArgs>(args?: SelectSubset<T, profile_visitCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Profile_visit.
     * @param {profile_visitDeleteArgs} args - Arguments to delete one Profile_visit.
     * @example
     * // Delete one Profile_visit
     * const Profile_visit = await prisma.profile_visit.delete({
     *   where: {
     *     // ... filter to delete one Profile_visit
     *   }
     * })
     * 
     */
    delete<T extends profile_visitDeleteArgs>(args: SelectSubset<T, profile_visitDeleteArgs<ExtArgs>>): Prisma__profile_visitClient<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Profile_visit.
     * @param {profile_visitUpdateArgs} args - Arguments to update one Profile_visit.
     * @example
     * // Update one Profile_visit
     * const profile_visit = await prisma.profile_visit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends profile_visitUpdateArgs>(args: SelectSubset<T, profile_visitUpdateArgs<ExtArgs>>): Prisma__profile_visitClient<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Profile_visits.
     * @param {profile_visitDeleteManyArgs} args - Arguments to filter Profile_visits to delete.
     * @example
     * // Delete a few Profile_visits
     * const { count } = await prisma.profile_visit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends profile_visitDeleteManyArgs>(args?: SelectSubset<T, profile_visitDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profile_visits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profile_visitUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profile_visits
     * const profile_visit = await prisma.profile_visit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends profile_visitUpdateManyArgs>(args: SelectSubset<T, profile_visitUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Profile_visit.
     * @param {profile_visitUpsertArgs} args - Arguments to update or create a Profile_visit.
     * @example
     * // Update or create a Profile_visit
     * const profile_visit = await prisma.profile_visit.upsert({
     *   create: {
     *     // ... data to create a Profile_visit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile_visit we want to update
     *   }
     * })
     */
    upsert<T extends profile_visitUpsertArgs>(args: SelectSubset<T, profile_visitUpsertArgs<ExtArgs>>): Prisma__profile_visitClient<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Profile_visits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profile_visitCountArgs} args - Arguments to filter Profile_visits to count.
     * @example
     * // Count the number of Profile_visits
     * const count = await prisma.profile_visit.count({
     *   where: {
     *     // ... the filter for the Profile_visits we want to count
     *   }
     * })
    **/
    count<T extends profile_visitCountArgs>(
      args?: Subset<T, profile_visitCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Profile_visitCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile_visit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Profile_visitAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Profile_visitAggregateArgs>(args: Subset<T, Profile_visitAggregateArgs>): Prisma.PrismaPromise<GetProfile_visitAggregateType<T>>

    /**
     * Group by Profile_visit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profile_visitGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends profile_visitGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: profile_visitGroupByArgs['orderBy'] }
        : { orderBy?: profile_visitGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, profile_visitGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfile_visitGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the profile_visit model
   */
  readonly fields: profile_visitFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for profile_visit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__profile_visitClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_profile_visit_profile_user_idTouser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user_profile_visit_visitor_idTouser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the profile_visit model
   */
  interface profile_visitFieldRefs {
    readonly id: FieldRef<"profile_visit", 'Int'>
    readonly visitor_id: FieldRef<"profile_visit", 'Int'>
    readonly profile_user_id: FieldRef<"profile_visit", 'Int'>
    readonly visited_at: FieldRef<"profile_visit", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * profile_visit findUnique
   */
  export type profile_visitFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    /**
     * Filter, which profile_visit to fetch.
     */
    where: profile_visitWhereUniqueInput
  }

  /**
   * profile_visit findUniqueOrThrow
   */
  export type profile_visitFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    /**
     * Filter, which profile_visit to fetch.
     */
    where: profile_visitWhereUniqueInput
  }

  /**
   * profile_visit findFirst
   */
  export type profile_visitFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    /**
     * Filter, which profile_visit to fetch.
     */
    where?: profile_visitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profile_visits to fetch.
     */
    orderBy?: profile_visitOrderByWithRelationInput | profile_visitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profile_visits.
     */
    cursor?: profile_visitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profile_visits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profile_visits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profile_visits.
     */
    distinct?: Profile_visitScalarFieldEnum | Profile_visitScalarFieldEnum[]
  }

  /**
   * profile_visit findFirstOrThrow
   */
  export type profile_visitFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    /**
     * Filter, which profile_visit to fetch.
     */
    where?: profile_visitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profile_visits to fetch.
     */
    orderBy?: profile_visitOrderByWithRelationInput | profile_visitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profile_visits.
     */
    cursor?: profile_visitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profile_visits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profile_visits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profile_visits.
     */
    distinct?: Profile_visitScalarFieldEnum | Profile_visitScalarFieldEnum[]
  }

  /**
   * profile_visit findMany
   */
  export type profile_visitFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    /**
     * Filter, which profile_visits to fetch.
     */
    where?: profile_visitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profile_visits to fetch.
     */
    orderBy?: profile_visitOrderByWithRelationInput | profile_visitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing profile_visits.
     */
    cursor?: profile_visitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profile_visits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profile_visits.
     */
    skip?: number
    distinct?: Profile_visitScalarFieldEnum | Profile_visitScalarFieldEnum[]
  }

  /**
   * profile_visit create
   */
  export type profile_visitCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    /**
     * The data needed to create a profile_visit.
     */
    data: XOR<profile_visitCreateInput, profile_visitUncheckedCreateInput>
  }

  /**
   * profile_visit createMany
   */
  export type profile_visitCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many profile_visits.
     */
    data: profile_visitCreateManyInput | profile_visitCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * profile_visit update
   */
  export type profile_visitUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    /**
     * The data needed to update a profile_visit.
     */
    data: XOR<profile_visitUpdateInput, profile_visitUncheckedUpdateInput>
    /**
     * Choose, which profile_visit to update.
     */
    where: profile_visitWhereUniqueInput
  }

  /**
   * profile_visit updateMany
   */
  export type profile_visitUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update profile_visits.
     */
    data: XOR<profile_visitUpdateManyMutationInput, profile_visitUncheckedUpdateManyInput>
    /**
     * Filter which profile_visits to update
     */
    where?: profile_visitWhereInput
    /**
     * Limit how many profile_visits to update.
     */
    limit?: number
  }

  /**
   * profile_visit upsert
   */
  export type profile_visitUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    /**
     * The filter to search for the profile_visit to update in case it exists.
     */
    where: profile_visitWhereUniqueInput
    /**
     * In case the profile_visit found by the `where` argument doesn't exist, create a new profile_visit with this data.
     */
    create: XOR<profile_visitCreateInput, profile_visitUncheckedCreateInput>
    /**
     * In case the profile_visit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<profile_visitUpdateInput, profile_visitUncheckedUpdateInput>
  }

  /**
   * profile_visit delete
   */
  export type profile_visitDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    /**
     * Filter which profile_visit to delete.
     */
    where: profile_visitWhereUniqueInput
  }

  /**
   * profile_visit deleteMany
   */
  export type profile_visitDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profile_visits to delete
     */
    where?: profile_visitWhereInput
    /**
     * Limit how many profile_visits to delete.
     */
    limit?: number
  }

  /**
   * profile_visit without action
   */
  export type profile_visitDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
  }


  /**
   * Model report
   */

  export type AggregateReport = {
    _count: ReportCountAggregateOutputType | null
    _avg: ReportAvgAggregateOutputType | null
    _sum: ReportSumAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  export type ReportAvgAggregateOutputType = {
    id: number | null
    reporter_id: number | null
    target_id: number | null
  }

  export type ReportSumAggregateOutputType = {
    id: number | null
    reporter_id: number | null
    target_id: number | null
  }

  export type ReportMinAggregateOutputType = {
    id: number | null
    reporter_id: number | null
    target_type: $Enums.report_target_type | null
    target_id: number | null
    reason: string | null
    created_at: Date | null
  }

  export type ReportMaxAggregateOutputType = {
    id: number | null
    reporter_id: number | null
    target_type: $Enums.report_target_type | null
    target_id: number | null
    reason: string | null
    created_at: Date | null
  }

  export type ReportCountAggregateOutputType = {
    id: number
    reporter_id: number
    target_type: number
    target_id: number
    reason: number
    created_at: number
    _all: number
  }


  export type ReportAvgAggregateInputType = {
    id?: true
    reporter_id?: true
    target_id?: true
  }

  export type ReportSumAggregateInputType = {
    id?: true
    reporter_id?: true
    target_id?: true
  }

  export type ReportMinAggregateInputType = {
    id?: true
    reporter_id?: true
    target_type?: true
    target_id?: true
    reason?: true
    created_at?: true
  }

  export type ReportMaxAggregateInputType = {
    id?: true
    reporter_id?: true
    target_type?: true
    target_id?: true
    reason?: true
    created_at?: true
  }

  export type ReportCountAggregateInputType = {
    id?: true
    reporter_id?: true
    target_type?: true
    target_id?: true
    reason?: true
    created_at?: true
    _all?: true
  }

  export type ReportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which report to aggregate.
     */
    where?: reportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportOrderByWithRelationInput | reportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reports
    **/
    _count?: true | ReportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReportAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReportSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportMaxAggregateInputType
  }

  export type GetReportAggregateType<T extends ReportAggregateArgs> = {
        [P in keyof T & keyof AggregateReport]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReport[P]>
      : GetScalarType<T[P], AggregateReport[P]>
  }




  export type reportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportWhereInput
    orderBy?: reportOrderByWithAggregationInput | reportOrderByWithAggregationInput[]
    by: ReportScalarFieldEnum[] | ReportScalarFieldEnum
    having?: reportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportCountAggregateInputType | true
    _avg?: ReportAvgAggregateInputType
    _sum?: ReportSumAggregateInputType
    _min?: ReportMinAggregateInputType
    _max?: ReportMaxAggregateInputType
  }

  export type ReportGroupByOutputType = {
    id: number
    reporter_id: number
    target_type: $Enums.report_target_type
    target_id: number
    reason: string | null
    created_at: Date
    _count: ReportCountAggregateOutputType | null
    _avg: ReportAvgAggregateOutputType | null
    _sum: ReportSumAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  type GetReportGroupByPayload<T extends reportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportGroupByOutputType[P]>
            : GetScalarType<T[P], ReportGroupByOutputType[P]>
        }
      >
    >


  export type reportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reporter_id?: boolean
    target_type?: boolean
    target_id?: boolean
    reason?: boolean
    created_at?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>



  export type reportSelectScalar = {
    id?: boolean
    reporter_id?: boolean
    target_type?: boolean
    target_id?: boolean
    reason?: boolean
    created_at?: boolean
  }

  export type reportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reporter_id" | "target_type" | "target_id" | "reason" | "created_at", ExtArgs["result"]["report"]>
  export type reportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $reportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "report"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      reporter_id: number
      target_type: $Enums.report_target_type
      target_id: number
      reason: string | null
      created_at: Date
    }, ExtArgs["result"]["report"]>
    composites: {}
  }

  type reportGetPayload<S extends boolean | null | undefined | reportDefaultArgs> = $Result.GetResult<Prisma.$reportPayload, S>

  type reportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportCountAggregateInputType | true
    }

  export interface reportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['report'], meta: { name: 'report' } }
    /**
     * Find zero or one Report that matches the filter.
     * @param {reportFindUniqueArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reportFindUniqueArgs>(args: SelectSubset<T, reportFindUniqueArgs<ExtArgs>>): Prisma__reportClient<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Report that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reportFindUniqueOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reportFindUniqueOrThrowArgs>(args: SelectSubset<T, reportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reportClient<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportFindFirstArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reportFindFirstArgs>(args?: SelectSubset<T, reportFindFirstArgs<ExtArgs>>): Prisma__reportClient<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportFindFirstOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reportFindFirstOrThrowArgs>(args?: SelectSubset<T, reportFindFirstOrThrowArgs<ExtArgs>>): Prisma__reportClient<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reports
     * const reports = await prisma.report.findMany()
     * 
     * // Get first 10 Reports
     * const reports = await prisma.report.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportWithIdOnly = await prisma.report.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reportFindManyArgs>(args?: SelectSubset<T, reportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Report.
     * @param {reportCreateArgs} args - Arguments to create a Report.
     * @example
     * // Create one Report
     * const Report = await prisma.report.create({
     *   data: {
     *     // ... data to create a Report
     *   }
     * })
     * 
     */
    create<T extends reportCreateArgs>(args: SelectSubset<T, reportCreateArgs<ExtArgs>>): Prisma__reportClient<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reports.
     * @param {reportCreateManyArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const report = await prisma.report.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reportCreateManyArgs>(args?: SelectSubset<T, reportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Report.
     * @param {reportDeleteArgs} args - Arguments to delete one Report.
     * @example
     * // Delete one Report
     * const Report = await prisma.report.delete({
     *   where: {
     *     // ... filter to delete one Report
     *   }
     * })
     * 
     */
    delete<T extends reportDeleteArgs>(args: SelectSubset<T, reportDeleteArgs<ExtArgs>>): Prisma__reportClient<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Report.
     * @param {reportUpdateArgs} args - Arguments to update one Report.
     * @example
     * // Update one Report
     * const report = await prisma.report.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reportUpdateArgs>(args: SelectSubset<T, reportUpdateArgs<ExtArgs>>): Prisma__reportClient<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reports.
     * @param {reportDeleteManyArgs} args - Arguments to filter Reports to delete.
     * @example
     * // Delete a few Reports
     * const { count } = await prisma.report.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reportDeleteManyArgs>(args?: SelectSubset<T, reportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reports
     * const report = await prisma.report.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reportUpdateManyArgs>(args: SelectSubset<T, reportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Report.
     * @param {reportUpsertArgs} args - Arguments to update or create a Report.
     * @example
     * // Update or create a Report
     * const report = await prisma.report.upsert({
     *   create: {
     *     // ... data to create a Report
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Report we want to update
     *   }
     * })
     */
    upsert<T extends reportUpsertArgs>(args: SelectSubset<T, reportUpsertArgs<ExtArgs>>): Prisma__reportClient<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportCountArgs} args - Arguments to filter Reports to count.
     * @example
     * // Count the number of Reports
     * const count = await prisma.report.count({
     *   where: {
     *     // ... the filter for the Reports we want to count
     *   }
     * })
    **/
    count<T extends reportCountArgs>(
      args?: Subset<T, reportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportAggregateArgs>(args: Subset<T, ReportAggregateArgs>): Prisma.PrismaPromise<GetReportAggregateType<T>>

    /**
     * Group by Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reportGroupByArgs['orderBy'] }
        : { orderBy?: reportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the report model
   */
  readonly fields: reportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for report.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the report model
   */
  interface reportFieldRefs {
    readonly id: FieldRef<"report", 'Int'>
    readonly reporter_id: FieldRef<"report", 'Int'>
    readonly target_type: FieldRef<"report", 'report_target_type'>
    readonly target_id: FieldRef<"report", 'Int'>
    readonly reason: FieldRef<"report", 'String'>
    readonly created_at: FieldRef<"report", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * report findUnique
   */
  export type reportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    /**
     * Filter, which report to fetch.
     */
    where: reportWhereUniqueInput
  }

  /**
   * report findUniqueOrThrow
   */
  export type reportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    /**
     * Filter, which report to fetch.
     */
    where: reportWhereUniqueInput
  }

  /**
   * report findFirst
   */
  export type reportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    /**
     * Filter, which report to fetch.
     */
    where?: reportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportOrderByWithRelationInput | reportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reports.
     */
    cursor?: reportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * report findFirstOrThrow
   */
  export type reportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    /**
     * Filter, which report to fetch.
     */
    where?: reportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportOrderByWithRelationInput | reportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reports.
     */
    cursor?: reportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * report findMany
   */
  export type reportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where?: reportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportOrderByWithRelationInput | reportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reports.
     */
    cursor?: reportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * report create
   */
  export type reportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    /**
     * The data needed to create a report.
     */
    data: XOR<reportCreateInput, reportUncheckedCreateInput>
  }

  /**
   * report createMany
   */
  export type reportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reports.
     */
    data: reportCreateManyInput | reportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * report update
   */
  export type reportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    /**
     * The data needed to update a report.
     */
    data: XOR<reportUpdateInput, reportUncheckedUpdateInput>
    /**
     * Choose, which report to update.
     */
    where: reportWhereUniqueInput
  }

  /**
   * report updateMany
   */
  export type reportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reports.
     */
    data: XOR<reportUpdateManyMutationInput, reportUncheckedUpdateManyInput>
    /**
     * Filter which reports to update
     */
    where?: reportWhereInput
    /**
     * Limit how many reports to update.
     */
    limit?: number
  }

  /**
   * report upsert
   */
  export type reportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    /**
     * The filter to search for the report to update in case it exists.
     */
    where: reportWhereUniqueInput
    /**
     * In case the report found by the `where` argument doesn't exist, create a new report with this data.
     */
    create: XOR<reportCreateInput, reportUncheckedCreateInput>
    /**
     * In case the report was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reportUpdateInput, reportUncheckedUpdateInput>
  }

  /**
   * report delete
   */
  export type reportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    /**
     * Filter which report to delete.
     */
    where: reportWhereUniqueInput
  }

  /**
   * report deleteMany
   */
  export type reportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reports to delete
     */
    where?: reportWhereInput
    /**
     * Limit how many reports to delete.
     */
    limit?: number
  }

  /**
   * report without action
   */
  export type reportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
  }


  /**
   * Model search_history
   */

  export type AggregateSearch_history = {
    _count: Search_historyCountAggregateOutputType | null
    _avg: Search_historyAvgAggregateOutputType | null
    _sum: Search_historySumAggregateOutputType | null
    _min: Search_historyMinAggregateOutputType | null
    _max: Search_historyMaxAggregateOutputType | null
  }

  export type Search_historyAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Search_historySumAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Search_historyMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    keyword: string | null
    searched_at: Date | null
  }

  export type Search_historyMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    keyword: string | null
    searched_at: Date | null
  }

  export type Search_historyCountAggregateOutputType = {
    id: number
    user_id: number
    keyword: number
    searched_at: number
    _all: number
  }


  export type Search_historyAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Search_historySumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Search_historyMinAggregateInputType = {
    id?: true
    user_id?: true
    keyword?: true
    searched_at?: true
  }

  export type Search_historyMaxAggregateInputType = {
    id?: true
    user_id?: true
    keyword?: true
    searched_at?: true
  }

  export type Search_historyCountAggregateInputType = {
    id?: true
    user_id?: true
    keyword?: true
    searched_at?: true
    _all?: true
  }

  export type Search_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which search_history to aggregate.
     */
    where?: search_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of search_histories to fetch.
     */
    orderBy?: search_historyOrderByWithRelationInput | search_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: search_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` search_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` search_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned search_histories
    **/
    _count?: true | Search_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Search_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Search_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Search_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Search_historyMaxAggregateInputType
  }

  export type GetSearch_historyAggregateType<T extends Search_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateSearch_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSearch_history[P]>
      : GetScalarType<T[P], AggregateSearch_history[P]>
  }




  export type search_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: search_historyWhereInput
    orderBy?: search_historyOrderByWithAggregationInput | search_historyOrderByWithAggregationInput[]
    by: Search_historyScalarFieldEnum[] | Search_historyScalarFieldEnum
    having?: search_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Search_historyCountAggregateInputType | true
    _avg?: Search_historyAvgAggregateInputType
    _sum?: Search_historySumAggregateInputType
    _min?: Search_historyMinAggregateInputType
    _max?: Search_historyMaxAggregateInputType
  }

  export type Search_historyGroupByOutputType = {
    id: number
    user_id: number
    keyword: string
    searched_at: Date
    _count: Search_historyCountAggregateOutputType | null
    _avg: Search_historyAvgAggregateOutputType | null
    _sum: Search_historySumAggregateOutputType | null
    _min: Search_historyMinAggregateOutputType | null
    _max: Search_historyMaxAggregateOutputType | null
  }

  type GetSearch_historyGroupByPayload<T extends search_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Search_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Search_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Search_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Search_historyGroupByOutputType[P]>
        }
      >
    >


  export type search_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    keyword?: boolean
    searched_at?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["search_history"]>



  export type search_historySelectScalar = {
    id?: boolean
    user_id?: boolean
    keyword?: boolean
    searched_at?: boolean
  }

  export type search_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "keyword" | "searched_at", ExtArgs["result"]["search_history"]>
  export type search_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $search_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "search_history"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      keyword: string
      searched_at: Date
    }, ExtArgs["result"]["search_history"]>
    composites: {}
  }

  type search_historyGetPayload<S extends boolean | null | undefined | search_historyDefaultArgs> = $Result.GetResult<Prisma.$search_historyPayload, S>

  type search_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<search_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Search_historyCountAggregateInputType | true
    }

  export interface search_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['search_history'], meta: { name: 'search_history' } }
    /**
     * Find zero or one Search_history that matches the filter.
     * @param {search_historyFindUniqueArgs} args - Arguments to find a Search_history
     * @example
     * // Get one Search_history
     * const search_history = await prisma.search_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends search_historyFindUniqueArgs>(args: SelectSubset<T, search_historyFindUniqueArgs<ExtArgs>>): Prisma__search_historyClient<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Search_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {search_historyFindUniqueOrThrowArgs} args - Arguments to find a Search_history
     * @example
     * // Get one Search_history
     * const search_history = await prisma.search_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends search_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, search_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__search_historyClient<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Search_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {search_historyFindFirstArgs} args - Arguments to find a Search_history
     * @example
     * // Get one Search_history
     * const search_history = await prisma.search_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends search_historyFindFirstArgs>(args?: SelectSubset<T, search_historyFindFirstArgs<ExtArgs>>): Prisma__search_historyClient<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Search_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {search_historyFindFirstOrThrowArgs} args - Arguments to find a Search_history
     * @example
     * // Get one Search_history
     * const search_history = await prisma.search_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends search_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, search_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__search_historyClient<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Search_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {search_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Search_histories
     * const search_histories = await prisma.search_history.findMany()
     * 
     * // Get first 10 Search_histories
     * const search_histories = await prisma.search_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const search_historyWithIdOnly = await prisma.search_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends search_historyFindManyArgs>(args?: SelectSubset<T, search_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Search_history.
     * @param {search_historyCreateArgs} args - Arguments to create a Search_history.
     * @example
     * // Create one Search_history
     * const Search_history = await prisma.search_history.create({
     *   data: {
     *     // ... data to create a Search_history
     *   }
     * })
     * 
     */
    create<T extends search_historyCreateArgs>(args: SelectSubset<T, search_historyCreateArgs<ExtArgs>>): Prisma__search_historyClient<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Search_histories.
     * @param {search_historyCreateManyArgs} args - Arguments to create many Search_histories.
     * @example
     * // Create many Search_histories
     * const search_history = await prisma.search_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends search_historyCreateManyArgs>(args?: SelectSubset<T, search_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Search_history.
     * @param {search_historyDeleteArgs} args - Arguments to delete one Search_history.
     * @example
     * // Delete one Search_history
     * const Search_history = await prisma.search_history.delete({
     *   where: {
     *     // ... filter to delete one Search_history
     *   }
     * })
     * 
     */
    delete<T extends search_historyDeleteArgs>(args: SelectSubset<T, search_historyDeleteArgs<ExtArgs>>): Prisma__search_historyClient<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Search_history.
     * @param {search_historyUpdateArgs} args - Arguments to update one Search_history.
     * @example
     * // Update one Search_history
     * const search_history = await prisma.search_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends search_historyUpdateArgs>(args: SelectSubset<T, search_historyUpdateArgs<ExtArgs>>): Prisma__search_historyClient<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Search_histories.
     * @param {search_historyDeleteManyArgs} args - Arguments to filter Search_histories to delete.
     * @example
     * // Delete a few Search_histories
     * const { count } = await prisma.search_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends search_historyDeleteManyArgs>(args?: SelectSubset<T, search_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Search_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {search_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Search_histories
     * const search_history = await prisma.search_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends search_historyUpdateManyArgs>(args: SelectSubset<T, search_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Search_history.
     * @param {search_historyUpsertArgs} args - Arguments to update or create a Search_history.
     * @example
     * // Update or create a Search_history
     * const search_history = await prisma.search_history.upsert({
     *   create: {
     *     // ... data to create a Search_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Search_history we want to update
     *   }
     * })
     */
    upsert<T extends search_historyUpsertArgs>(args: SelectSubset<T, search_historyUpsertArgs<ExtArgs>>): Prisma__search_historyClient<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Search_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {search_historyCountArgs} args - Arguments to filter Search_histories to count.
     * @example
     * // Count the number of Search_histories
     * const count = await prisma.search_history.count({
     *   where: {
     *     // ... the filter for the Search_histories we want to count
     *   }
     * })
    **/
    count<T extends search_historyCountArgs>(
      args?: Subset<T, search_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Search_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Search_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Search_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Search_historyAggregateArgs>(args: Subset<T, Search_historyAggregateArgs>): Prisma.PrismaPromise<GetSearch_historyAggregateType<T>>

    /**
     * Group by Search_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {search_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends search_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: search_historyGroupByArgs['orderBy'] }
        : { orderBy?: search_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, search_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSearch_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the search_history model
   */
  readonly fields: search_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for search_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__search_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the search_history model
   */
  interface search_historyFieldRefs {
    readonly id: FieldRef<"search_history", 'Int'>
    readonly user_id: FieldRef<"search_history", 'Int'>
    readonly keyword: FieldRef<"search_history", 'String'>
    readonly searched_at: FieldRef<"search_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * search_history findUnique
   */
  export type search_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    /**
     * Filter, which search_history to fetch.
     */
    where: search_historyWhereUniqueInput
  }

  /**
   * search_history findUniqueOrThrow
   */
  export type search_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    /**
     * Filter, which search_history to fetch.
     */
    where: search_historyWhereUniqueInput
  }

  /**
   * search_history findFirst
   */
  export type search_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    /**
     * Filter, which search_history to fetch.
     */
    where?: search_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of search_histories to fetch.
     */
    orderBy?: search_historyOrderByWithRelationInput | search_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for search_histories.
     */
    cursor?: search_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` search_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` search_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of search_histories.
     */
    distinct?: Search_historyScalarFieldEnum | Search_historyScalarFieldEnum[]
  }

  /**
   * search_history findFirstOrThrow
   */
  export type search_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    /**
     * Filter, which search_history to fetch.
     */
    where?: search_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of search_histories to fetch.
     */
    orderBy?: search_historyOrderByWithRelationInput | search_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for search_histories.
     */
    cursor?: search_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` search_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` search_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of search_histories.
     */
    distinct?: Search_historyScalarFieldEnum | Search_historyScalarFieldEnum[]
  }

  /**
   * search_history findMany
   */
  export type search_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    /**
     * Filter, which search_histories to fetch.
     */
    where?: search_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of search_histories to fetch.
     */
    orderBy?: search_historyOrderByWithRelationInput | search_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing search_histories.
     */
    cursor?: search_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` search_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` search_histories.
     */
    skip?: number
    distinct?: Search_historyScalarFieldEnum | Search_historyScalarFieldEnum[]
  }

  /**
   * search_history create
   */
  export type search_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a search_history.
     */
    data: XOR<search_historyCreateInput, search_historyUncheckedCreateInput>
  }

  /**
   * search_history createMany
   */
  export type search_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many search_histories.
     */
    data: search_historyCreateManyInput | search_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * search_history update
   */
  export type search_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a search_history.
     */
    data: XOR<search_historyUpdateInput, search_historyUncheckedUpdateInput>
    /**
     * Choose, which search_history to update.
     */
    where: search_historyWhereUniqueInput
  }

  /**
   * search_history updateMany
   */
  export type search_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update search_histories.
     */
    data: XOR<search_historyUpdateManyMutationInput, search_historyUncheckedUpdateManyInput>
    /**
     * Filter which search_histories to update
     */
    where?: search_historyWhereInput
    /**
     * Limit how many search_histories to update.
     */
    limit?: number
  }

  /**
   * search_history upsert
   */
  export type search_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the search_history to update in case it exists.
     */
    where: search_historyWhereUniqueInput
    /**
     * In case the search_history found by the `where` argument doesn't exist, create a new search_history with this data.
     */
    create: XOR<search_historyCreateInput, search_historyUncheckedCreateInput>
    /**
     * In case the search_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<search_historyUpdateInput, search_historyUncheckedUpdateInput>
  }

  /**
   * search_history delete
   */
  export type search_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    /**
     * Filter which search_history to delete.
     */
    where: search_historyWhereUniqueInput
  }

  /**
   * search_history deleteMany
   */
  export type search_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which search_histories to delete
     */
    where?: search_historyWhereInput
    /**
     * Limit how many search_histories to delete.
     */
    limit?: number
  }

  /**
   * search_history without action
   */
  export type search_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
  }


  /**
   * Model tag
   */

  export type AggregateTag = {
    _count: TagCountAggregateOutputType | null
    _avg: TagAvgAggregateOutputType | null
    _sum: TagSumAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  export type TagAvgAggregateOutputType = {
    id: number | null
  }

  export type TagSumAggregateOutputType = {
    id: number | null
  }

  export type TagMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type TagMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type TagCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type TagAvgAggregateInputType = {
    id?: true
  }

  export type TagSumAggregateInputType = {
    id?: true
  }

  export type TagMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type TagMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type TagCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type TagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tag to aggregate.
     */
    where?: tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagOrderByWithRelationInput | tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tags
    **/
    _count?: true | TagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TagAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TagSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagMaxAggregateInputType
  }

  export type GetTagAggregateType<T extends TagAggregateArgs> = {
        [P in keyof T & keyof AggregateTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTag[P]>
      : GetScalarType<T[P], AggregateTag[P]>
  }




  export type tagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tagWhereInput
    orderBy?: tagOrderByWithAggregationInput | tagOrderByWithAggregationInput[]
    by: TagScalarFieldEnum[] | TagScalarFieldEnum
    having?: tagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagCountAggregateInputType | true
    _avg?: TagAvgAggregateInputType
    _sum?: TagSumAggregateInputType
    _min?: TagMinAggregateInputType
    _max?: TagMaxAggregateInputType
  }

  export type TagGroupByOutputType = {
    id: number
    name: string
    _count: TagCountAggregateOutputType | null
    _avg: TagAvgAggregateOutputType | null
    _sum: TagSumAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  type GetTagGroupByPayload<T extends tagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagGroupByOutputType[P]>
            : GetScalarType<T[P], TagGroupByOutputType[P]>
        }
      >
    >


  export type tagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    post_tag?: boolean | tag$post_tagArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tag"]>



  export type tagSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type tagOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["tag"]>
  export type tagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_tag?: boolean | tag$post_tagArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tag"
    objects: {
      post_tag: Prisma.$post_tagPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["tag"]>
    composites: {}
  }

  type tagGetPayload<S extends boolean | null | undefined | tagDefaultArgs> = $Result.GetResult<Prisma.$tagPayload, S>

  type tagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TagCountAggregateInputType | true
    }

  export interface tagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tag'], meta: { name: 'tag' } }
    /**
     * Find zero or one Tag that matches the filter.
     * @param {tagFindUniqueArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tagFindUniqueArgs>(args: SelectSubset<T, tagFindUniqueArgs<ExtArgs>>): Prisma__tagClient<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tag that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tagFindUniqueOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tagFindUniqueOrThrowArgs>(args: SelectSubset<T, tagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tagClient<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagFindFirstArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tagFindFirstArgs>(args?: SelectSubset<T, tagFindFirstArgs<ExtArgs>>): Prisma__tagClient<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagFindFirstOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tagFindFirstOrThrowArgs>(args?: SelectSubset<T, tagFindFirstOrThrowArgs<ExtArgs>>): Prisma__tagClient<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tag.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tagWithIdOnly = await prisma.tag.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tagFindManyArgs>(args?: SelectSubset<T, tagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tag.
     * @param {tagCreateArgs} args - Arguments to create a Tag.
     * @example
     * // Create one Tag
     * const Tag = await prisma.tag.create({
     *   data: {
     *     // ... data to create a Tag
     *   }
     * })
     * 
     */
    create<T extends tagCreateArgs>(args: SelectSubset<T, tagCreateArgs<ExtArgs>>): Prisma__tagClient<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tags.
     * @param {tagCreateManyArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tag = await prisma.tag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tagCreateManyArgs>(args?: SelectSubset<T, tagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tag.
     * @param {tagDeleteArgs} args - Arguments to delete one Tag.
     * @example
     * // Delete one Tag
     * const Tag = await prisma.tag.delete({
     *   where: {
     *     // ... filter to delete one Tag
     *   }
     * })
     * 
     */
    delete<T extends tagDeleteArgs>(args: SelectSubset<T, tagDeleteArgs<ExtArgs>>): Prisma__tagClient<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tag.
     * @param {tagUpdateArgs} args - Arguments to update one Tag.
     * @example
     * // Update one Tag
     * const tag = await prisma.tag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tagUpdateArgs>(args: SelectSubset<T, tagUpdateArgs<ExtArgs>>): Prisma__tagClient<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tags.
     * @param {tagDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tagDeleteManyArgs>(args?: SelectSubset<T, tagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tag = await prisma.tag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tagUpdateManyArgs>(args: SelectSubset<T, tagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tag.
     * @param {tagUpsertArgs} args - Arguments to update or create a Tag.
     * @example
     * // Update or create a Tag
     * const tag = await prisma.tag.upsert({
     *   create: {
     *     // ... data to create a Tag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tag we want to update
     *   }
     * })
     */
    upsert<T extends tagUpsertArgs>(args: SelectSubset<T, tagUpsertArgs<ExtArgs>>): Prisma__tagClient<$Result.GetResult<Prisma.$tagPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tag.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends tagCountArgs>(
      args?: Subset<T, tagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagAggregateArgs>(args: Subset<T, TagAggregateArgs>): Prisma.PrismaPromise<GetTagAggregateType<T>>

    /**
     * Group by Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tagGroupByArgs['orderBy'] }
        : { orderBy?: tagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tag model
   */
  readonly fields: tagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post_tag<T extends tag$post_tagArgs<ExtArgs> = {}>(args?: Subset<T, tag$post_tagArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_tagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tag model
   */
  interface tagFieldRefs {
    readonly id: FieldRef<"tag", 'Int'>
    readonly name: FieldRef<"tag", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tag findUnique
   */
  export type tagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
    /**
     * Filter, which tag to fetch.
     */
    where: tagWhereUniqueInput
  }

  /**
   * tag findUniqueOrThrow
   */
  export type tagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
    /**
     * Filter, which tag to fetch.
     */
    where: tagWhereUniqueInput
  }

  /**
   * tag findFirst
   */
  export type tagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
    /**
     * Filter, which tag to fetch.
     */
    where?: tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagOrderByWithRelationInput | tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tags.
     */
    cursor?: tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * tag findFirstOrThrow
   */
  export type tagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
    /**
     * Filter, which tag to fetch.
     */
    where?: tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagOrderByWithRelationInput | tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tags.
     */
    cursor?: tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * tag findMany
   */
  export type tagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagOrderByWithRelationInput | tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tags.
     */
    cursor?: tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * tag create
   */
  export type tagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
    /**
     * The data needed to create a tag.
     */
    data: XOR<tagCreateInput, tagUncheckedCreateInput>
  }

  /**
   * tag createMany
   */
  export type tagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tags.
     */
    data: tagCreateManyInput | tagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tag update
   */
  export type tagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
    /**
     * The data needed to update a tag.
     */
    data: XOR<tagUpdateInput, tagUncheckedUpdateInput>
    /**
     * Choose, which tag to update.
     */
    where: tagWhereUniqueInput
  }

  /**
   * tag updateMany
   */
  export type tagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tags.
     */
    data: XOR<tagUpdateManyMutationInput, tagUncheckedUpdateManyInput>
    /**
     * Filter which tags to update
     */
    where?: tagWhereInput
    /**
     * Limit how many tags to update.
     */
    limit?: number
  }

  /**
   * tag upsert
   */
  export type tagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
    /**
     * The filter to search for the tag to update in case it exists.
     */
    where: tagWhereUniqueInput
    /**
     * In case the tag found by the `where` argument doesn't exist, create a new tag with this data.
     */
    create: XOR<tagCreateInput, tagUncheckedCreateInput>
    /**
     * In case the tag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tagUpdateInput, tagUncheckedUpdateInput>
  }

  /**
   * tag delete
   */
  export type tagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
    /**
     * Filter which tag to delete.
     */
    where: tagWhereUniqueInput
  }

  /**
   * tag deleteMany
   */
  export type tagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tags to delete
     */
    where?: tagWhereInput
    /**
     * Limit how many tags to delete.
     */
    limit?: number
  }

  /**
   * tag.post_tag
   */
  export type tag$post_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_tag
     */
    select?: post_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_tag
     */
    omit?: post_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_tagInclude<ExtArgs> | null
    where?: post_tagWhereInput
    orderBy?: post_tagOrderByWithRelationInput | post_tagOrderByWithRelationInput[]
    cursor?: post_tagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_tagScalarFieldEnum | Post_tagScalarFieldEnum[]
  }

  /**
   * tag without action
   */
  export type tagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tag
     */
    select?: tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tag
     */
    omit?: tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagInclude<ExtArgs> | null
  }


  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    email: string | null
    name: string | null
    nickname: string | null
    profile_img: string | null
    bio: string | null
    gender: string | null
    email_verified: boolean | null
    status: $Enums.user_status | null
    website: string | null
    location: string | null
    birthday: Date | null
    oauth_provider: string | null
    oauth_id: string | null
    created_at: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    email: string | null
    name: string | null
    nickname: string | null
    profile_img: string | null
    bio: string | null
    gender: string | null
    email_verified: boolean | null
    status: $Enums.user_status | null
    website: string | null
    location: string | null
    birthday: Date | null
    oauth_provider: string | null
    oauth_id: string | null
    created_at: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    email: number
    name: number
    nickname: number
    profile_img: number
    bio: number
    gender: number
    email_verified: number
    status: number
    website: number
    location: number
    birthday: number
    oauth_provider: number
    oauth_id: number
    created_at: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    name?: true
    nickname?: true
    profile_img?: true
    bio?: true
    gender?: true
    email_verified?: true
    status?: true
    website?: true
    location?: true
    birthday?: true
    oauth_provider?: true
    oauth_id?: true
    created_at?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    name?: true
    nickname?: true
    profile_img?: true
    bio?: true
    gender?: true
    email_verified?: true
    status?: true
    website?: true
    location?: true
    birthday?: true
    oauth_provider?: true
    oauth_id?: true
    created_at?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    name?: true
    nickname?: true
    profile_img?: true
    bio?: true
    gender?: true
    email_verified?: true
    status?: true
    website?: true
    location?: true
    birthday?: true
    oauth_provider?: true
    oauth_id?: true
    created_at?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    username: string
    password: string
    email: string
    name: string | null
    nickname: string | null
    profile_img: string | null
    bio: string | null
    gender: string | null
    email_verified: boolean
    status: $Enums.user_status
    website: string | null
    location: string | null
    birthday: Date | null
    oauth_provider: string | null
    oauth_id: string | null
    created_at: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    name?: boolean
    nickname?: boolean
    profile_img?: boolean
    bio?: boolean
    gender?: boolean
    email_verified?: boolean
    status?: boolean
    website?: boolean
    location?: boolean
    birthday?: boolean
    oauth_provider?: boolean
    oauth_id?: boolean
    created_at?: boolean
    chat_message?: boolean | user$chat_messageArgs<ExtArgs>
    chat_room_user?: boolean | user$chat_room_userArgs<ExtArgs>
    comment?: boolean | user$commentArgs<ExtArgs>
    comment_like?: boolean | user$comment_likeArgs<ExtArgs>
    community?: boolean | user$communityArgs<ExtArgs>
    feed_cache?: boolean | user$feed_cacheArgs<ExtArgs>
    file_report?: boolean | user$file_reportArgs<ExtArgs>
    follow_follow_follower_idTouser?: boolean | user$follow_follow_follower_idTouserArgs<ExtArgs>
    follow_follow_following_idTouser?: boolean | user$follow_follow_following_idTouserArgs<ExtArgs>
    notification_notification_source_user_idTouser?: boolean | user$notification_notification_source_user_idTouserArgs<ExtArgs>
    notification_notification_user_idTouser?: boolean | user$notification_notification_user_idTouserArgs<ExtArgs>
    post?: boolean | user$postArgs<ExtArgs>
    post_like?: boolean | user$post_likeArgs<ExtArgs>
    post_reaction?: boolean | user$post_reactionArgs<ExtArgs>
    profile_visit_profile_visit_profile_user_idTouser?: boolean | user$profile_visit_profile_visit_profile_user_idTouserArgs<ExtArgs>
    profile_visit_profile_visit_visitor_idTouser?: boolean | user$profile_visit_profile_visit_visitor_idTouserArgs<ExtArgs>
    report?: boolean | user$reportArgs<ExtArgs>
    search_history?: boolean | user$search_historyArgs<ExtArgs>
    user_block_user_block_blocked_user_idTouser?: boolean | user$user_block_user_block_blocked_user_idTouserArgs<ExtArgs>
    user_block_user_block_user_idTouser?: boolean | user$user_block_user_block_user_idTouserArgs<ExtArgs>
    user_oauth?: boolean | user$user_oauthArgs<ExtArgs>
    user_profile?: boolean | user$user_profileArgs<ExtArgs>
    user_security?: boolean | user$user_securityArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type userSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    name?: boolean
    nickname?: boolean
    profile_img?: boolean
    bio?: boolean
    gender?: boolean
    email_verified?: boolean
    status?: boolean
    website?: boolean
    location?: boolean
    birthday?: boolean
    oauth_provider?: boolean
    oauth_id?: boolean
    created_at?: boolean
  }

  export type userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "email" | "name" | "nickname" | "profile_img" | "bio" | "gender" | "email_verified" | "status" | "website" | "location" | "birthday" | "oauth_provider" | "oauth_id" | "created_at", ExtArgs["result"]["user"]>
  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_message?: boolean | user$chat_messageArgs<ExtArgs>
    chat_room_user?: boolean | user$chat_room_userArgs<ExtArgs>
    comment?: boolean | user$commentArgs<ExtArgs>
    comment_like?: boolean | user$comment_likeArgs<ExtArgs>
    community?: boolean | user$communityArgs<ExtArgs>
    feed_cache?: boolean | user$feed_cacheArgs<ExtArgs>
    file_report?: boolean | user$file_reportArgs<ExtArgs>
    follow_follow_follower_idTouser?: boolean | user$follow_follow_follower_idTouserArgs<ExtArgs>
    follow_follow_following_idTouser?: boolean | user$follow_follow_following_idTouserArgs<ExtArgs>
    notification_notification_source_user_idTouser?: boolean | user$notification_notification_source_user_idTouserArgs<ExtArgs>
    notification_notification_user_idTouser?: boolean | user$notification_notification_user_idTouserArgs<ExtArgs>
    post?: boolean | user$postArgs<ExtArgs>
    post_like?: boolean | user$post_likeArgs<ExtArgs>
    post_reaction?: boolean | user$post_reactionArgs<ExtArgs>
    profile_visit_profile_visit_profile_user_idTouser?: boolean | user$profile_visit_profile_visit_profile_user_idTouserArgs<ExtArgs>
    profile_visit_profile_visit_visitor_idTouser?: boolean | user$profile_visit_profile_visit_visitor_idTouserArgs<ExtArgs>
    report?: boolean | user$reportArgs<ExtArgs>
    search_history?: boolean | user$search_historyArgs<ExtArgs>
    user_block_user_block_blocked_user_idTouser?: boolean | user$user_block_user_block_blocked_user_idTouserArgs<ExtArgs>
    user_block_user_block_user_idTouser?: boolean | user$user_block_user_block_user_idTouserArgs<ExtArgs>
    user_oauth?: boolean | user$user_oauthArgs<ExtArgs>
    user_profile?: boolean | user$user_profileArgs<ExtArgs>
    user_security?: boolean | user$user_securityArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      chat_message: Prisma.$chat_messagePayload<ExtArgs>[]
      chat_room_user: Prisma.$chat_room_userPayload<ExtArgs>[]
      comment: Prisma.$commentPayload<ExtArgs>[]
      comment_like: Prisma.$comment_likePayload<ExtArgs>[]
      community: Prisma.$communityPayload<ExtArgs>[]
      feed_cache: Prisma.$feed_cachePayload<ExtArgs>[]
      file_report: Prisma.$file_reportPayload<ExtArgs>[]
      follow_follow_follower_idTouser: Prisma.$followPayload<ExtArgs>[]
      follow_follow_following_idTouser: Prisma.$followPayload<ExtArgs>[]
      notification_notification_source_user_idTouser: Prisma.$notificationPayload<ExtArgs>[]
      notification_notification_user_idTouser: Prisma.$notificationPayload<ExtArgs>[]
      post: Prisma.$postPayload<ExtArgs>[]
      post_like: Prisma.$post_likePayload<ExtArgs>[]
      post_reaction: Prisma.$post_reactionPayload<ExtArgs>[]
      profile_visit_profile_visit_profile_user_idTouser: Prisma.$profile_visitPayload<ExtArgs>[]
      profile_visit_profile_visit_visitor_idTouser: Prisma.$profile_visitPayload<ExtArgs>[]
      report: Prisma.$reportPayload<ExtArgs>[]
      search_history: Prisma.$search_historyPayload<ExtArgs>[]
      user_block_user_block_blocked_user_idTouser: Prisma.$user_blockPayload<ExtArgs>[]
      user_block_user_block_user_idTouser: Prisma.$user_blockPayload<ExtArgs>[]
      user_oauth: Prisma.$user_oauthPayload<ExtArgs> | null
      user_profile: Prisma.$user_profilePayload<ExtArgs> | null
      user_security: Prisma.$user_securityPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      email: string
      name: string | null
      nickname: string | null
      profile_img: string | null
      bio: string | null
      gender: string | null
      email_verified: boolean
      status: $Enums.user_status
      website: string | null
      location: string | null
      birthday: Date | null
      oauth_provider: string | null
      oauth_id: string | null
      created_at: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userFindUniqueArgs>(args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs>(args: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userFindFirstArgs>(args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userFindFirstOrThrowArgs>(args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends userFindManyArgs>(args?: SelectSubset<T, userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends userCreateArgs>(args: SelectSubset<T, userCreateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {userCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userCreateManyArgs>(args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends userDeleteArgs>(args: SelectSubset<T, userDeleteArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userUpdateArgs>(args: SelectSubset<T, userUpdateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userDeleteManyArgs>(args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userUpdateManyArgs>(args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends userUpsertArgs>(args: SelectSubset<T, userUpsertArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat_message<T extends user$chat_messageArgs<ExtArgs> = {}>(args?: Subset<T, user$chat_messageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_messagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_room_user<T extends user$chat_room_userArgs<ExtArgs> = {}>(args?: Subset<T, user$chat_room_userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_room_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comment<T extends user$commentArgs<ExtArgs> = {}>(args?: Subset<T, user$commentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$commentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comment_like<T extends user$comment_likeArgs<ExtArgs> = {}>(args?: Subset<T, user$comment_likeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comment_likePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    community<T extends user$communityArgs<ExtArgs> = {}>(args?: Subset<T, user$communityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    feed_cache<T extends user$feed_cacheArgs<ExtArgs> = {}>(args?: Subset<T, user$feed_cacheArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$feed_cachePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    file_report<T extends user$file_reportArgs<ExtArgs> = {}>(args?: Subset<T, user$file_reportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$file_reportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    follow_follow_follower_idTouser<T extends user$follow_follow_follower_idTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$follow_follow_follower_idTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    follow_follow_following_idTouser<T extends user$follow_follow_following_idTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$follow_follow_following_idTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$followPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notification_notification_source_user_idTouser<T extends user$notification_notification_source_user_idTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$notification_notification_source_user_idTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notification_notification_user_idTouser<T extends user$notification_notification_user_idTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$notification_notification_user_idTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post<T extends user$postArgs<ExtArgs> = {}>(args?: Subset<T, user$postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_like<T extends user$post_likeArgs<ExtArgs> = {}>(args?: Subset<T, user$post_likeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_likePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_reaction<T extends user$post_reactionArgs<ExtArgs> = {}>(args?: Subset<T, user$post_reactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_reactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    profile_visit_profile_visit_profile_user_idTouser<T extends user$profile_visit_profile_visit_profile_user_idTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$profile_visit_profile_visit_profile_user_idTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    profile_visit_profile_visit_visitor_idTouser<T extends user$profile_visit_profile_visit_visitor_idTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$profile_visit_profile_visit_visitor_idTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profile_visitPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    report<T extends user$reportArgs<ExtArgs> = {}>(args?: Subset<T, user$reportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    search_history<T extends user$search_historyArgs<ExtArgs> = {}>(args?: Subset<T, user$search_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$search_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_block_user_block_blocked_user_idTouser<T extends user$user_block_user_block_blocked_user_idTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$user_block_user_block_blocked_user_idTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_block_user_block_user_idTouser<T extends user$user_block_user_block_user_idTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$user_block_user_block_user_idTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_oauth<T extends user$user_oauthArgs<ExtArgs> = {}>(args?: Subset<T, user$user_oauthArgs<ExtArgs>>): Prisma__user_oauthClient<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_profile<T extends user$user_profileArgs<ExtArgs> = {}>(args?: Subset<T, user$user_profileArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_security<T extends user$user_securityArgs<ExtArgs> = {}>(args?: Subset<T, user$user_securityArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user model
   */
  interface userFieldRefs {
    readonly id: FieldRef<"user", 'Int'>
    readonly username: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly email: FieldRef<"user", 'String'>
    readonly name: FieldRef<"user", 'String'>
    readonly nickname: FieldRef<"user", 'String'>
    readonly profile_img: FieldRef<"user", 'String'>
    readonly bio: FieldRef<"user", 'String'>
    readonly gender: FieldRef<"user", 'String'>
    readonly email_verified: FieldRef<"user", 'Boolean'>
    readonly status: FieldRef<"user", 'user_status'>
    readonly website: FieldRef<"user", 'String'>
    readonly location: FieldRef<"user", 'String'>
    readonly birthday: FieldRef<"user", 'DateTime'>
    readonly oauth_provider: FieldRef<"user", 'String'>
    readonly oauth_id: FieldRef<"user", 'String'>
    readonly created_at: FieldRef<"user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }

  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }

  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }

  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }

  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * user.chat_message
   */
  export type user$chat_messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_message
     */
    select?: chat_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_message
     */
    omit?: chat_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messageInclude<ExtArgs> | null
    where?: chat_messageWhereInput
    orderBy?: chat_messageOrderByWithRelationInput | chat_messageOrderByWithRelationInput[]
    cursor?: chat_messageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_messageScalarFieldEnum | Chat_messageScalarFieldEnum[]
  }

  /**
   * user.chat_room_user
   */
  export type user$chat_room_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_room_user
     */
    select?: chat_room_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_room_user
     */
    omit?: chat_room_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_room_userInclude<ExtArgs> | null
    where?: chat_room_userWhereInput
    orderBy?: chat_room_userOrderByWithRelationInput | chat_room_userOrderByWithRelationInput[]
    cursor?: chat_room_userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_room_userScalarFieldEnum | Chat_room_userScalarFieldEnum[]
  }

  /**
   * user.comment
   */
  export type user$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment
     */
    select?: commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment
     */
    omit?: commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: commentInclude<ExtArgs> | null
    where?: commentWhereInput
    orderBy?: commentOrderByWithRelationInput | commentOrderByWithRelationInput[]
    cursor?: commentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * user.comment_like
   */
  export type user$comment_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the comment_like
     */
    select?: comment_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the comment_like
     */
    omit?: comment_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comment_likeInclude<ExtArgs> | null
    where?: comment_likeWhereInput
    orderBy?: comment_likeOrderByWithRelationInput | comment_likeOrderByWithRelationInput[]
    cursor?: comment_likeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Comment_likeScalarFieldEnum | Comment_likeScalarFieldEnum[]
  }

  /**
   * user.community
   */
  export type user$communityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    where?: communityWhereInput
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    cursor?: communityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * user.feed_cache
   */
  export type user$feed_cacheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the feed_cache
     */
    select?: feed_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the feed_cache
     */
    omit?: feed_cacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: feed_cacheInclude<ExtArgs> | null
    where?: feed_cacheWhereInput
    orderBy?: feed_cacheOrderByWithRelationInput | feed_cacheOrderByWithRelationInput[]
    cursor?: feed_cacheWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Feed_cacheScalarFieldEnum | Feed_cacheScalarFieldEnum[]
  }

  /**
   * user.file_report
   */
  export type user$file_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the file_report
     */
    select?: file_reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the file_report
     */
    omit?: file_reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: file_reportInclude<ExtArgs> | null
    where?: file_reportWhereInput
    orderBy?: file_reportOrderByWithRelationInput | file_reportOrderByWithRelationInput[]
    cursor?: file_reportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: File_reportScalarFieldEnum | File_reportScalarFieldEnum[]
  }

  /**
   * user.follow_follow_follower_idTouser
   */
  export type user$follow_follow_follower_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    where?: followWhereInput
    orderBy?: followOrderByWithRelationInput | followOrderByWithRelationInput[]
    cursor?: followWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * user.follow_follow_following_idTouser
   */
  export type user$follow_follow_following_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow
     */
    select?: followSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow
     */
    omit?: followOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: followInclude<ExtArgs> | null
    where?: followWhereInput
    orderBy?: followOrderByWithRelationInput | followOrderByWithRelationInput[]
    cursor?: followWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * user.notification_notification_source_user_idTouser
   */
  export type user$notification_notification_source_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * user.notification_notification_user_idTouser
   */
  export type user$notification_notification_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * user.post
   */
  export type user$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post
     */
    select?: postSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post
     */
    omit?: postOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postInclude<ExtArgs> | null
    where?: postWhereInput
    orderBy?: postOrderByWithRelationInput | postOrderByWithRelationInput[]
    cursor?: postWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * user.post_like
   */
  export type user$post_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_like
     */
    select?: post_likeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_like
     */
    omit?: post_likeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_likeInclude<ExtArgs> | null
    where?: post_likeWhereInput
    orderBy?: post_likeOrderByWithRelationInput | post_likeOrderByWithRelationInput[]
    cursor?: post_likeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_likeScalarFieldEnum | Post_likeScalarFieldEnum[]
  }

  /**
   * user.post_reaction
   */
  export type user$post_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_reaction
     */
    select?: post_reactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_reaction
     */
    omit?: post_reactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_reactionInclude<ExtArgs> | null
    where?: post_reactionWhereInput
    orderBy?: post_reactionOrderByWithRelationInput | post_reactionOrderByWithRelationInput[]
    cursor?: post_reactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_reactionScalarFieldEnum | Post_reactionScalarFieldEnum[]
  }

  /**
   * user.profile_visit_profile_visit_profile_user_idTouser
   */
  export type user$profile_visit_profile_visit_profile_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    where?: profile_visitWhereInput
    orderBy?: profile_visitOrderByWithRelationInput | profile_visitOrderByWithRelationInput[]
    cursor?: profile_visitWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Profile_visitScalarFieldEnum | Profile_visitScalarFieldEnum[]
  }

  /**
   * user.profile_visit_profile_visit_visitor_idTouser
   */
  export type user$profile_visit_profile_visit_visitor_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile_visit
     */
    select?: profile_visitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile_visit
     */
    omit?: profile_visitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profile_visitInclude<ExtArgs> | null
    where?: profile_visitWhereInput
    orderBy?: profile_visitOrderByWithRelationInput | profile_visitOrderByWithRelationInput[]
    cursor?: profile_visitWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Profile_visitScalarFieldEnum | Profile_visitScalarFieldEnum[]
  }

  /**
   * user.report
   */
  export type user$reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report
     */
    select?: reportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report
     */
    omit?: reportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportInclude<ExtArgs> | null
    where?: reportWhereInput
    orderBy?: reportOrderByWithRelationInput | reportOrderByWithRelationInput[]
    cursor?: reportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * user.search_history
   */
  export type user$search_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the search_history
     */
    select?: search_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the search_history
     */
    omit?: search_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: search_historyInclude<ExtArgs> | null
    where?: search_historyWhereInput
    orderBy?: search_historyOrderByWithRelationInput | search_historyOrderByWithRelationInput[]
    cursor?: search_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Search_historyScalarFieldEnum | Search_historyScalarFieldEnum[]
  }

  /**
   * user.user_block_user_block_blocked_user_idTouser
   */
  export type user$user_block_user_block_blocked_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    where?: user_blockWhereInput
    orderBy?: user_blockOrderByWithRelationInput | user_blockOrderByWithRelationInput[]
    cursor?: user_blockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_blockScalarFieldEnum | User_blockScalarFieldEnum[]
  }

  /**
   * user.user_block_user_block_user_idTouser
   */
  export type user$user_block_user_block_user_idTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    where?: user_blockWhereInput
    orderBy?: user_blockOrderByWithRelationInput | user_blockOrderByWithRelationInput[]
    cursor?: user_blockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_blockScalarFieldEnum | User_blockScalarFieldEnum[]
  }

  /**
   * user.user_oauth
   */
  export type user$user_oauthArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    where?: user_oauthWhereInput
  }

  /**
   * user.user_profile
   */
  export type user$user_profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    where?: user_profileWhereInput
  }

  /**
   * user.user_security
   */
  export type user$user_securityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    where?: user_securityWhereInput
  }

  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
  }


  /**
   * Model user_block
   */

  export type AggregateUser_block = {
    _count: User_blockCountAggregateOutputType | null
    _avg: User_blockAvgAggregateOutputType | null
    _sum: User_blockSumAggregateOutputType | null
    _min: User_blockMinAggregateOutputType | null
    _max: User_blockMaxAggregateOutputType | null
  }

  export type User_blockAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    blocked_user_id: number | null
  }

  export type User_blockSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    blocked_user_id: number | null
  }

  export type User_blockMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    blocked_user_id: number | null
    created_at: Date | null
  }

  export type User_blockMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    blocked_user_id: number | null
    created_at: Date | null
  }

  export type User_blockCountAggregateOutputType = {
    id: number
    user_id: number
    blocked_user_id: number
    created_at: number
    _all: number
  }


  export type User_blockAvgAggregateInputType = {
    id?: true
    user_id?: true
    blocked_user_id?: true
  }

  export type User_blockSumAggregateInputType = {
    id?: true
    user_id?: true
    blocked_user_id?: true
  }

  export type User_blockMinAggregateInputType = {
    id?: true
    user_id?: true
    blocked_user_id?: true
    created_at?: true
  }

  export type User_blockMaxAggregateInputType = {
    id?: true
    user_id?: true
    blocked_user_id?: true
    created_at?: true
  }

  export type User_blockCountAggregateInputType = {
    id?: true
    user_id?: true
    blocked_user_id?: true
    created_at?: true
    _all?: true
  }

  export type User_blockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_block to aggregate.
     */
    where?: user_blockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_blocks to fetch.
     */
    orderBy?: user_blockOrderByWithRelationInput | user_blockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_blockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_blocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_blocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_blocks
    **/
    _count?: true | User_blockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_blockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_blockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_blockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_blockMaxAggregateInputType
  }

  export type GetUser_blockAggregateType<T extends User_blockAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_block]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_block[P]>
      : GetScalarType<T[P], AggregateUser_block[P]>
  }




  export type user_blockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_blockWhereInput
    orderBy?: user_blockOrderByWithAggregationInput | user_blockOrderByWithAggregationInput[]
    by: User_blockScalarFieldEnum[] | User_blockScalarFieldEnum
    having?: user_blockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_blockCountAggregateInputType | true
    _avg?: User_blockAvgAggregateInputType
    _sum?: User_blockSumAggregateInputType
    _min?: User_blockMinAggregateInputType
    _max?: User_blockMaxAggregateInputType
  }

  export type User_blockGroupByOutputType = {
    id: number
    user_id: number
    blocked_user_id: number
    created_at: Date
    _count: User_blockCountAggregateOutputType | null
    _avg: User_blockAvgAggregateOutputType | null
    _sum: User_blockSumAggregateOutputType | null
    _min: User_blockMinAggregateOutputType | null
    _max: User_blockMaxAggregateOutputType | null
  }

  type GetUser_blockGroupByPayload<T extends user_blockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_blockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_blockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_blockGroupByOutputType[P]>
            : GetScalarType<T[P], User_blockGroupByOutputType[P]>
        }
      >
    >


  export type user_blockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    blocked_user_id?: boolean
    created_at?: boolean
    user_user_block_blocked_user_idTouser?: boolean | userDefaultArgs<ExtArgs>
    user_user_block_user_idTouser?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_block"]>



  export type user_blockSelectScalar = {
    id?: boolean
    user_id?: boolean
    blocked_user_id?: boolean
    created_at?: boolean
  }

  export type user_blockOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "blocked_user_id" | "created_at", ExtArgs["result"]["user_block"]>
  export type user_blockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_user_block_blocked_user_idTouser?: boolean | userDefaultArgs<ExtArgs>
    user_user_block_user_idTouser?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_blockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_block"
    objects: {
      user_user_block_blocked_user_idTouser: Prisma.$userPayload<ExtArgs>
      user_user_block_user_idTouser: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      blocked_user_id: number
      created_at: Date
    }, ExtArgs["result"]["user_block"]>
    composites: {}
  }

  type user_blockGetPayload<S extends boolean | null | undefined | user_blockDefaultArgs> = $Result.GetResult<Prisma.$user_blockPayload, S>

  type user_blockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_blockFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_blockCountAggregateInputType | true
    }

  export interface user_blockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_block'], meta: { name: 'user_block' } }
    /**
     * Find zero or one User_block that matches the filter.
     * @param {user_blockFindUniqueArgs} args - Arguments to find a User_block
     * @example
     * // Get one User_block
     * const user_block = await prisma.user_block.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_blockFindUniqueArgs>(args: SelectSubset<T, user_blockFindUniqueArgs<ExtArgs>>): Prisma__user_blockClient<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_block that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_blockFindUniqueOrThrowArgs} args - Arguments to find a User_block
     * @example
     * // Get one User_block
     * const user_block = await prisma.user_block.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_blockFindUniqueOrThrowArgs>(args: SelectSubset<T, user_blockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_blockClient<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_block that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blockFindFirstArgs} args - Arguments to find a User_block
     * @example
     * // Get one User_block
     * const user_block = await prisma.user_block.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_blockFindFirstArgs>(args?: SelectSubset<T, user_blockFindFirstArgs<ExtArgs>>): Prisma__user_blockClient<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_block that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blockFindFirstOrThrowArgs} args - Arguments to find a User_block
     * @example
     * // Get one User_block
     * const user_block = await prisma.user_block.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_blockFindFirstOrThrowArgs>(args?: SelectSubset<T, user_blockFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_blockClient<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_blocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_blocks
     * const user_blocks = await prisma.user_block.findMany()
     * 
     * // Get first 10 User_blocks
     * const user_blocks = await prisma.user_block.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_blockWithIdOnly = await prisma.user_block.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_blockFindManyArgs>(args?: SelectSubset<T, user_blockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_block.
     * @param {user_blockCreateArgs} args - Arguments to create a User_block.
     * @example
     * // Create one User_block
     * const User_block = await prisma.user_block.create({
     *   data: {
     *     // ... data to create a User_block
     *   }
     * })
     * 
     */
    create<T extends user_blockCreateArgs>(args: SelectSubset<T, user_blockCreateArgs<ExtArgs>>): Prisma__user_blockClient<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_blocks.
     * @param {user_blockCreateManyArgs} args - Arguments to create many User_blocks.
     * @example
     * // Create many User_blocks
     * const user_block = await prisma.user_block.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_blockCreateManyArgs>(args?: SelectSubset<T, user_blockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_block.
     * @param {user_blockDeleteArgs} args - Arguments to delete one User_block.
     * @example
     * // Delete one User_block
     * const User_block = await prisma.user_block.delete({
     *   where: {
     *     // ... filter to delete one User_block
     *   }
     * })
     * 
     */
    delete<T extends user_blockDeleteArgs>(args: SelectSubset<T, user_blockDeleteArgs<ExtArgs>>): Prisma__user_blockClient<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_block.
     * @param {user_blockUpdateArgs} args - Arguments to update one User_block.
     * @example
     * // Update one User_block
     * const user_block = await prisma.user_block.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_blockUpdateArgs>(args: SelectSubset<T, user_blockUpdateArgs<ExtArgs>>): Prisma__user_blockClient<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_blocks.
     * @param {user_blockDeleteManyArgs} args - Arguments to filter User_blocks to delete.
     * @example
     * // Delete a few User_blocks
     * const { count } = await prisma.user_block.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_blockDeleteManyArgs>(args?: SelectSubset<T, user_blockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_blocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_blocks
     * const user_block = await prisma.user_block.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_blockUpdateManyArgs>(args: SelectSubset<T, user_blockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_block.
     * @param {user_blockUpsertArgs} args - Arguments to update or create a User_block.
     * @example
     * // Update or create a User_block
     * const user_block = await prisma.user_block.upsert({
     *   create: {
     *     // ... data to create a User_block
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_block we want to update
     *   }
     * })
     */
    upsert<T extends user_blockUpsertArgs>(args: SelectSubset<T, user_blockUpsertArgs<ExtArgs>>): Prisma__user_blockClient<$Result.GetResult<Prisma.$user_blockPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_blocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blockCountArgs} args - Arguments to filter User_blocks to count.
     * @example
     * // Count the number of User_blocks
     * const count = await prisma.user_block.count({
     *   where: {
     *     // ... the filter for the User_blocks we want to count
     *   }
     * })
    **/
    count<T extends user_blockCountArgs>(
      args?: Subset<T, user_blockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_blockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_block.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_blockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_blockAggregateArgs>(args: Subset<T, User_blockAggregateArgs>): Prisma.PrismaPromise<GetUser_blockAggregateType<T>>

    /**
     * Group by User_block.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_blockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_blockGroupByArgs['orderBy'] }
        : { orderBy?: user_blockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_blockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_blockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_block model
   */
  readonly fields: user_blockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_block.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_blockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_user_block_blocked_user_idTouser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user_user_block_user_idTouser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_block model
   */
  interface user_blockFieldRefs {
    readonly id: FieldRef<"user_block", 'Int'>
    readonly user_id: FieldRef<"user_block", 'Int'>
    readonly blocked_user_id: FieldRef<"user_block", 'Int'>
    readonly created_at: FieldRef<"user_block", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_block findUnique
   */
  export type user_blockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    /**
     * Filter, which user_block to fetch.
     */
    where: user_blockWhereUniqueInput
  }

  /**
   * user_block findUniqueOrThrow
   */
  export type user_blockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    /**
     * Filter, which user_block to fetch.
     */
    where: user_blockWhereUniqueInput
  }

  /**
   * user_block findFirst
   */
  export type user_blockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    /**
     * Filter, which user_block to fetch.
     */
    where?: user_blockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_blocks to fetch.
     */
    orderBy?: user_blockOrderByWithRelationInput | user_blockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_blocks.
     */
    cursor?: user_blockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_blocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_blocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_blocks.
     */
    distinct?: User_blockScalarFieldEnum | User_blockScalarFieldEnum[]
  }

  /**
   * user_block findFirstOrThrow
   */
  export type user_blockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    /**
     * Filter, which user_block to fetch.
     */
    where?: user_blockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_blocks to fetch.
     */
    orderBy?: user_blockOrderByWithRelationInput | user_blockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_blocks.
     */
    cursor?: user_blockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_blocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_blocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_blocks.
     */
    distinct?: User_blockScalarFieldEnum | User_blockScalarFieldEnum[]
  }

  /**
   * user_block findMany
   */
  export type user_blockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    /**
     * Filter, which user_blocks to fetch.
     */
    where?: user_blockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_blocks to fetch.
     */
    orderBy?: user_blockOrderByWithRelationInput | user_blockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_blocks.
     */
    cursor?: user_blockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_blocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_blocks.
     */
    skip?: number
    distinct?: User_blockScalarFieldEnum | User_blockScalarFieldEnum[]
  }

  /**
   * user_block create
   */
  export type user_blockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    /**
     * The data needed to create a user_block.
     */
    data: XOR<user_blockCreateInput, user_blockUncheckedCreateInput>
  }

  /**
   * user_block createMany
   */
  export type user_blockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_blocks.
     */
    data: user_blockCreateManyInput | user_blockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_block update
   */
  export type user_blockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    /**
     * The data needed to update a user_block.
     */
    data: XOR<user_blockUpdateInput, user_blockUncheckedUpdateInput>
    /**
     * Choose, which user_block to update.
     */
    where: user_blockWhereUniqueInput
  }

  /**
   * user_block updateMany
   */
  export type user_blockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_blocks.
     */
    data: XOR<user_blockUpdateManyMutationInput, user_blockUncheckedUpdateManyInput>
    /**
     * Filter which user_blocks to update
     */
    where?: user_blockWhereInput
    /**
     * Limit how many user_blocks to update.
     */
    limit?: number
  }

  /**
   * user_block upsert
   */
  export type user_blockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    /**
     * The filter to search for the user_block to update in case it exists.
     */
    where: user_blockWhereUniqueInput
    /**
     * In case the user_block found by the `where` argument doesn't exist, create a new user_block with this data.
     */
    create: XOR<user_blockCreateInput, user_blockUncheckedCreateInput>
    /**
     * In case the user_block was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_blockUpdateInput, user_blockUncheckedUpdateInput>
  }

  /**
   * user_block delete
   */
  export type user_blockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
    /**
     * Filter which user_block to delete.
     */
    where: user_blockWhereUniqueInput
  }

  /**
   * user_block deleteMany
   */
  export type user_blockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_blocks to delete
     */
    where?: user_blockWhereInput
    /**
     * Limit how many user_blocks to delete.
     */
    limit?: number
  }

  /**
   * user_block without action
   */
  export type user_blockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_block
     */
    select?: user_blockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_block
     */
    omit?: user_blockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blockInclude<ExtArgs> | null
  }


  /**
   * Model user_oauth
   */

  export type AggregateUser_oauth = {
    _count: User_oauthCountAggregateOutputType | null
    _avg: User_oauthAvgAggregateOutputType | null
    _sum: User_oauthSumAggregateOutputType | null
    _min: User_oauthMinAggregateOutputType | null
    _max: User_oauthMaxAggregateOutputType | null
  }

  export type User_oauthAvgAggregateOutputType = {
    user_id: number | null
  }

  export type User_oauthSumAggregateOutputType = {
    user_id: number | null
  }

  export type User_oauthMinAggregateOutputType = {
    user_id: number | null
    oauth_provider: string | null
    oauth_id: string | null
  }

  export type User_oauthMaxAggregateOutputType = {
    user_id: number | null
    oauth_provider: string | null
    oauth_id: string | null
  }

  export type User_oauthCountAggregateOutputType = {
    user_id: number
    oauth_provider: number
    oauth_id: number
    _all: number
  }


  export type User_oauthAvgAggregateInputType = {
    user_id?: true
  }

  export type User_oauthSumAggregateInputType = {
    user_id?: true
  }

  export type User_oauthMinAggregateInputType = {
    user_id?: true
    oauth_provider?: true
    oauth_id?: true
  }

  export type User_oauthMaxAggregateInputType = {
    user_id?: true
    oauth_provider?: true
    oauth_id?: true
  }

  export type User_oauthCountAggregateInputType = {
    user_id?: true
    oauth_provider?: true
    oauth_id?: true
    _all?: true
  }

  export type User_oauthAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_oauth to aggregate.
     */
    where?: user_oauthWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_oauths to fetch.
     */
    orderBy?: user_oauthOrderByWithRelationInput | user_oauthOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_oauthWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_oauths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_oauths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_oauths
    **/
    _count?: true | User_oauthCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_oauthAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_oauthSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_oauthMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_oauthMaxAggregateInputType
  }

  export type GetUser_oauthAggregateType<T extends User_oauthAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_oauth]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_oauth[P]>
      : GetScalarType<T[P], AggregateUser_oauth[P]>
  }




  export type user_oauthGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_oauthWhereInput
    orderBy?: user_oauthOrderByWithAggregationInput | user_oauthOrderByWithAggregationInput[]
    by: User_oauthScalarFieldEnum[] | User_oauthScalarFieldEnum
    having?: user_oauthScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_oauthCountAggregateInputType | true
    _avg?: User_oauthAvgAggregateInputType
    _sum?: User_oauthSumAggregateInputType
    _min?: User_oauthMinAggregateInputType
    _max?: User_oauthMaxAggregateInputType
  }

  export type User_oauthGroupByOutputType = {
    user_id: number
    oauth_provider: string | null
    oauth_id: string | null
    _count: User_oauthCountAggregateOutputType | null
    _avg: User_oauthAvgAggregateOutputType | null
    _sum: User_oauthSumAggregateOutputType | null
    _min: User_oauthMinAggregateOutputType | null
    _max: User_oauthMaxAggregateOutputType | null
  }

  type GetUser_oauthGroupByPayload<T extends user_oauthGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_oauthGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_oauthGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_oauthGroupByOutputType[P]>
            : GetScalarType<T[P], User_oauthGroupByOutputType[P]>
        }
      >
    >


  export type user_oauthSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    oauth_provider?: boolean
    oauth_id?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_oauth"]>



  export type user_oauthSelectScalar = {
    user_id?: boolean
    oauth_provider?: boolean
    oauth_id?: boolean
  }

  export type user_oauthOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "oauth_provider" | "oauth_id", ExtArgs["result"]["user_oauth"]>
  export type user_oauthInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_oauthPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_oauth"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: number
      oauth_provider: string | null
      oauth_id: string | null
    }, ExtArgs["result"]["user_oauth"]>
    composites: {}
  }

  type user_oauthGetPayload<S extends boolean | null | undefined | user_oauthDefaultArgs> = $Result.GetResult<Prisma.$user_oauthPayload, S>

  type user_oauthCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_oauthFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_oauthCountAggregateInputType | true
    }

  export interface user_oauthDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_oauth'], meta: { name: 'user_oauth' } }
    /**
     * Find zero or one User_oauth that matches the filter.
     * @param {user_oauthFindUniqueArgs} args - Arguments to find a User_oauth
     * @example
     * // Get one User_oauth
     * const user_oauth = await prisma.user_oauth.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_oauthFindUniqueArgs>(args: SelectSubset<T, user_oauthFindUniqueArgs<ExtArgs>>): Prisma__user_oauthClient<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_oauth that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_oauthFindUniqueOrThrowArgs} args - Arguments to find a User_oauth
     * @example
     * // Get one User_oauth
     * const user_oauth = await prisma.user_oauth.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_oauthFindUniqueOrThrowArgs>(args: SelectSubset<T, user_oauthFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_oauthClient<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_oauth that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_oauthFindFirstArgs} args - Arguments to find a User_oauth
     * @example
     * // Get one User_oauth
     * const user_oauth = await prisma.user_oauth.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_oauthFindFirstArgs>(args?: SelectSubset<T, user_oauthFindFirstArgs<ExtArgs>>): Prisma__user_oauthClient<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_oauth that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_oauthFindFirstOrThrowArgs} args - Arguments to find a User_oauth
     * @example
     * // Get one User_oauth
     * const user_oauth = await prisma.user_oauth.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_oauthFindFirstOrThrowArgs>(args?: SelectSubset<T, user_oauthFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_oauthClient<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_oauths that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_oauthFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_oauths
     * const user_oauths = await prisma.user_oauth.findMany()
     * 
     * // Get first 10 User_oauths
     * const user_oauths = await prisma.user_oauth.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_oauthWithUser_idOnly = await prisma.user_oauth.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_oauthFindManyArgs>(args?: SelectSubset<T, user_oauthFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_oauth.
     * @param {user_oauthCreateArgs} args - Arguments to create a User_oauth.
     * @example
     * // Create one User_oauth
     * const User_oauth = await prisma.user_oauth.create({
     *   data: {
     *     // ... data to create a User_oauth
     *   }
     * })
     * 
     */
    create<T extends user_oauthCreateArgs>(args: SelectSubset<T, user_oauthCreateArgs<ExtArgs>>): Prisma__user_oauthClient<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_oauths.
     * @param {user_oauthCreateManyArgs} args - Arguments to create many User_oauths.
     * @example
     * // Create many User_oauths
     * const user_oauth = await prisma.user_oauth.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_oauthCreateManyArgs>(args?: SelectSubset<T, user_oauthCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_oauth.
     * @param {user_oauthDeleteArgs} args - Arguments to delete one User_oauth.
     * @example
     * // Delete one User_oauth
     * const User_oauth = await prisma.user_oauth.delete({
     *   where: {
     *     // ... filter to delete one User_oauth
     *   }
     * })
     * 
     */
    delete<T extends user_oauthDeleteArgs>(args: SelectSubset<T, user_oauthDeleteArgs<ExtArgs>>): Prisma__user_oauthClient<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_oauth.
     * @param {user_oauthUpdateArgs} args - Arguments to update one User_oauth.
     * @example
     * // Update one User_oauth
     * const user_oauth = await prisma.user_oauth.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_oauthUpdateArgs>(args: SelectSubset<T, user_oauthUpdateArgs<ExtArgs>>): Prisma__user_oauthClient<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_oauths.
     * @param {user_oauthDeleteManyArgs} args - Arguments to filter User_oauths to delete.
     * @example
     * // Delete a few User_oauths
     * const { count } = await prisma.user_oauth.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_oauthDeleteManyArgs>(args?: SelectSubset<T, user_oauthDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_oauths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_oauthUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_oauths
     * const user_oauth = await prisma.user_oauth.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_oauthUpdateManyArgs>(args: SelectSubset<T, user_oauthUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_oauth.
     * @param {user_oauthUpsertArgs} args - Arguments to update or create a User_oauth.
     * @example
     * // Update or create a User_oauth
     * const user_oauth = await prisma.user_oauth.upsert({
     *   create: {
     *     // ... data to create a User_oauth
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_oauth we want to update
     *   }
     * })
     */
    upsert<T extends user_oauthUpsertArgs>(args: SelectSubset<T, user_oauthUpsertArgs<ExtArgs>>): Prisma__user_oauthClient<$Result.GetResult<Prisma.$user_oauthPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_oauths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_oauthCountArgs} args - Arguments to filter User_oauths to count.
     * @example
     * // Count the number of User_oauths
     * const count = await prisma.user_oauth.count({
     *   where: {
     *     // ... the filter for the User_oauths we want to count
     *   }
     * })
    **/
    count<T extends user_oauthCountArgs>(
      args?: Subset<T, user_oauthCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_oauthCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_oauth.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_oauthAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_oauthAggregateArgs>(args: Subset<T, User_oauthAggregateArgs>): Prisma.PrismaPromise<GetUser_oauthAggregateType<T>>

    /**
     * Group by User_oauth.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_oauthGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_oauthGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_oauthGroupByArgs['orderBy'] }
        : { orderBy?: user_oauthGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_oauthGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_oauthGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_oauth model
   */
  readonly fields: user_oauthFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_oauth.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_oauthClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_oauth model
   */
  interface user_oauthFieldRefs {
    readonly user_id: FieldRef<"user_oauth", 'Int'>
    readonly oauth_provider: FieldRef<"user_oauth", 'String'>
    readonly oauth_id: FieldRef<"user_oauth", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_oauth findUnique
   */
  export type user_oauthFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    /**
     * Filter, which user_oauth to fetch.
     */
    where: user_oauthWhereUniqueInput
  }

  /**
   * user_oauth findUniqueOrThrow
   */
  export type user_oauthFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    /**
     * Filter, which user_oauth to fetch.
     */
    where: user_oauthWhereUniqueInput
  }

  /**
   * user_oauth findFirst
   */
  export type user_oauthFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    /**
     * Filter, which user_oauth to fetch.
     */
    where?: user_oauthWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_oauths to fetch.
     */
    orderBy?: user_oauthOrderByWithRelationInput | user_oauthOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_oauths.
     */
    cursor?: user_oauthWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_oauths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_oauths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_oauths.
     */
    distinct?: User_oauthScalarFieldEnum | User_oauthScalarFieldEnum[]
  }

  /**
   * user_oauth findFirstOrThrow
   */
  export type user_oauthFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    /**
     * Filter, which user_oauth to fetch.
     */
    where?: user_oauthWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_oauths to fetch.
     */
    orderBy?: user_oauthOrderByWithRelationInput | user_oauthOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_oauths.
     */
    cursor?: user_oauthWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_oauths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_oauths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_oauths.
     */
    distinct?: User_oauthScalarFieldEnum | User_oauthScalarFieldEnum[]
  }

  /**
   * user_oauth findMany
   */
  export type user_oauthFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    /**
     * Filter, which user_oauths to fetch.
     */
    where?: user_oauthWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_oauths to fetch.
     */
    orderBy?: user_oauthOrderByWithRelationInput | user_oauthOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_oauths.
     */
    cursor?: user_oauthWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_oauths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_oauths.
     */
    skip?: number
    distinct?: User_oauthScalarFieldEnum | User_oauthScalarFieldEnum[]
  }

  /**
   * user_oauth create
   */
  export type user_oauthCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    /**
     * The data needed to create a user_oauth.
     */
    data: XOR<user_oauthCreateInput, user_oauthUncheckedCreateInput>
  }

  /**
   * user_oauth createMany
   */
  export type user_oauthCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_oauths.
     */
    data: user_oauthCreateManyInput | user_oauthCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_oauth update
   */
  export type user_oauthUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    /**
     * The data needed to update a user_oauth.
     */
    data: XOR<user_oauthUpdateInput, user_oauthUncheckedUpdateInput>
    /**
     * Choose, which user_oauth to update.
     */
    where: user_oauthWhereUniqueInput
  }

  /**
   * user_oauth updateMany
   */
  export type user_oauthUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_oauths.
     */
    data: XOR<user_oauthUpdateManyMutationInput, user_oauthUncheckedUpdateManyInput>
    /**
     * Filter which user_oauths to update
     */
    where?: user_oauthWhereInput
    /**
     * Limit how many user_oauths to update.
     */
    limit?: number
  }

  /**
   * user_oauth upsert
   */
  export type user_oauthUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    /**
     * The filter to search for the user_oauth to update in case it exists.
     */
    where: user_oauthWhereUniqueInput
    /**
     * In case the user_oauth found by the `where` argument doesn't exist, create a new user_oauth with this data.
     */
    create: XOR<user_oauthCreateInput, user_oauthUncheckedCreateInput>
    /**
     * In case the user_oauth was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_oauthUpdateInput, user_oauthUncheckedUpdateInput>
  }

  /**
   * user_oauth delete
   */
  export type user_oauthDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
    /**
     * Filter which user_oauth to delete.
     */
    where: user_oauthWhereUniqueInput
  }

  /**
   * user_oauth deleteMany
   */
  export type user_oauthDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_oauths to delete
     */
    where?: user_oauthWhereInput
    /**
     * Limit how many user_oauths to delete.
     */
    limit?: number
  }

  /**
   * user_oauth without action
   */
  export type user_oauthDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_oauth
     */
    select?: user_oauthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_oauth
     */
    omit?: user_oauthOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_oauthInclude<ExtArgs> | null
  }


  /**
   * Model user_profile
   */

  export type AggregateUser_profile = {
    _count: User_profileCountAggregateOutputType | null
    _avg: User_profileAvgAggregateOutputType | null
    _sum: User_profileSumAggregateOutputType | null
    _min: User_profileMinAggregateOutputType | null
    _max: User_profileMaxAggregateOutputType | null
  }

  export type User_profileAvgAggregateOutputType = {
    user_id: number | null
  }

  export type User_profileSumAggregateOutputType = {
    user_id: number | null
  }

  export type User_profileMinAggregateOutputType = {
    user_id: number | null
    name: string | null
    profile_img: string | null
    bio: string | null
    gender: string | null
    website: string | null
    location: string | null
    birthday: Date | null
  }

  export type User_profileMaxAggregateOutputType = {
    user_id: number | null
    name: string | null
    profile_img: string | null
    bio: string | null
    gender: string | null
    website: string | null
    location: string | null
    birthday: Date | null
  }

  export type User_profileCountAggregateOutputType = {
    user_id: number
    name: number
    profile_img: number
    bio: number
    gender: number
    website: number
    location: number
    birthday: number
    _all: number
  }


  export type User_profileAvgAggregateInputType = {
    user_id?: true
  }

  export type User_profileSumAggregateInputType = {
    user_id?: true
  }

  export type User_profileMinAggregateInputType = {
    user_id?: true
    name?: true
    profile_img?: true
    bio?: true
    gender?: true
    website?: true
    location?: true
    birthday?: true
  }

  export type User_profileMaxAggregateInputType = {
    user_id?: true
    name?: true
    profile_img?: true
    bio?: true
    gender?: true
    website?: true
    location?: true
    birthday?: true
  }

  export type User_profileCountAggregateInputType = {
    user_id?: true
    name?: true
    profile_img?: true
    bio?: true
    gender?: true
    website?: true
    location?: true
    birthday?: true
    _all?: true
  }

  export type User_profileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_profile to aggregate.
     */
    where?: user_profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profileOrderByWithRelationInput | user_profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_profiles
    **/
    _count?: true | User_profileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_profileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_profileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_profileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_profileMaxAggregateInputType
  }

  export type GetUser_profileAggregateType<T extends User_profileAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_profile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_profile[P]>
      : GetScalarType<T[P], AggregateUser_profile[P]>
  }




  export type user_profileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_profileWhereInput
    orderBy?: user_profileOrderByWithAggregationInput | user_profileOrderByWithAggregationInput[]
    by: User_profileScalarFieldEnum[] | User_profileScalarFieldEnum
    having?: user_profileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_profileCountAggregateInputType | true
    _avg?: User_profileAvgAggregateInputType
    _sum?: User_profileSumAggregateInputType
    _min?: User_profileMinAggregateInputType
    _max?: User_profileMaxAggregateInputType
  }

  export type User_profileGroupByOutputType = {
    user_id: number
    name: string
    profile_img: string | null
    bio: string | null
    gender: string | null
    website: string | null
    location: string | null
    birthday: Date | null
    _count: User_profileCountAggregateOutputType | null
    _avg: User_profileAvgAggregateOutputType | null
    _sum: User_profileSumAggregateOutputType | null
    _min: User_profileMinAggregateOutputType | null
    _max: User_profileMaxAggregateOutputType | null
  }

  type GetUser_profileGroupByPayload<T extends user_profileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_profileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_profileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_profileGroupByOutputType[P]>
            : GetScalarType<T[P], User_profileGroupByOutputType[P]>
        }
      >
    >


  export type user_profileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    name?: boolean
    profile_img?: boolean
    bio?: boolean
    gender?: boolean
    website?: boolean
    location?: boolean
    birthday?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_profile"]>



  export type user_profileSelectScalar = {
    user_id?: boolean
    name?: boolean
    profile_img?: boolean
    bio?: boolean
    gender?: boolean
    website?: boolean
    location?: boolean
    birthday?: boolean
  }

  export type user_profileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "name" | "profile_img" | "bio" | "gender" | "website" | "location" | "birthday", ExtArgs["result"]["user_profile"]>
  export type user_profileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_profilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_profile"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: number
      name: string
      profile_img: string | null
      bio: string | null
      gender: string | null
      website: string | null
      location: string | null
      birthday: Date | null
    }, ExtArgs["result"]["user_profile"]>
    composites: {}
  }

  type user_profileGetPayload<S extends boolean | null | undefined | user_profileDefaultArgs> = $Result.GetResult<Prisma.$user_profilePayload, S>

  type user_profileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_profileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_profileCountAggregateInputType | true
    }

  export interface user_profileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_profile'], meta: { name: 'user_profile' } }
    /**
     * Find zero or one User_profile that matches the filter.
     * @param {user_profileFindUniqueArgs} args - Arguments to find a User_profile
     * @example
     * // Get one User_profile
     * const user_profile = await prisma.user_profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_profileFindUniqueArgs>(args: SelectSubset<T, user_profileFindUniqueArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_profile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_profileFindUniqueOrThrowArgs} args - Arguments to find a User_profile
     * @example
     * // Get one User_profile
     * const user_profile = await prisma.user_profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_profileFindUniqueOrThrowArgs>(args: SelectSubset<T, user_profileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileFindFirstArgs} args - Arguments to find a User_profile
     * @example
     * // Get one User_profile
     * const user_profile = await prisma.user_profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_profileFindFirstArgs>(args?: SelectSubset<T, user_profileFindFirstArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileFindFirstOrThrowArgs} args - Arguments to find a User_profile
     * @example
     * // Get one User_profile
     * const user_profile = await prisma.user_profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_profileFindFirstOrThrowArgs>(args?: SelectSubset<T, user_profileFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_profiles
     * const user_profiles = await prisma.user_profile.findMany()
     * 
     * // Get first 10 User_profiles
     * const user_profiles = await prisma.user_profile.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_profileWithUser_idOnly = await prisma.user_profile.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_profileFindManyArgs>(args?: SelectSubset<T, user_profileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_profile.
     * @param {user_profileCreateArgs} args - Arguments to create a User_profile.
     * @example
     * // Create one User_profile
     * const User_profile = await prisma.user_profile.create({
     *   data: {
     *     // ... data to create a User_profile
     *   }
     * })
     * 
     */
    create<T extends user_profileCreateArgs>(args: SelectSubset<T, user_profileCreateArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_profiles.
     * @param {user_profileCreateManyArgs} args - Arguments to create many User_profiles.
     * @example
     * // Create many User_profiles
     * const user_profile = await prisma.user_profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_profileCreateManyArgs>(args?: SelectSubset<T, user_profileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_profile.
     * @param {user_profileDeleteArgs} args - Arguments to delete one User_profile.
     * @example
     * // Delete one User_profile
     * const User_profile = await prisma.user_profile.delete({
     *   where: {
     *     // ... filter to delete one User_profile
     *   }
     * })
     * 
     */
    delete<T extends user_profileDeleteArgs>(args: SelectSubset<T, user_profileDeleteArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_profile.
     * @param {user_profileUpdateArgs} args - Arguments to update one User_profile.
     * @example
     * // Update one User_profile
     * const user_profile = await prisma.user_profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_profileUpdateArgs>(args: SelectSubset<T, user_profileUpdateArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_profiles.
     * @param {user_profileDeleteManyArgs} args - Arguments to filter User_profiles to delete.
     * @example
     * // Delete a few User_profiles
     * const { count } = await prisma.user_profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_profileDeleteManyArgs>(args?: SelectSubset<T, user_profileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_profiles
     * const user_profile = await prisma.user_profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_profileUpdateManyArgs>(args: SelectSubset<T, user_profileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_profile.
     * @param {user_profileUpsertArgs} args - Arguments to update or create a User_profile.
     * @example
     * // Update or create a User_profile
     * const user_profile = await prisma.user_profile.upsert({
     *   create: {
     *     // ... data to create a User_profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_profile we want to update
     *   }
     * })
     */
    upsert<T extends user_profileUpsertArgs>(args: SelectSubset<T, user_profileUpsertArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileCountArgs} args - Arguments to filter User_profiles to count.
     * @example
     * // Count the number of User_profiles
     * const count = await prisma.user_profile.count({
     *   where: {
     *     // ... the filter for the User_profiles we want to count
     *   }
     * })
    **/
    count<T extends user_profileCountArgs>(
      args?: Subset<T, user_profileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_profileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_profileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_profileAggregateArgs>(args: Subset<T, User_profileAggregateArgs>): Prisma.PrismaPromise<GetUser_profileAggregateType<T>>

    /**
     * Group by User_profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_profileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_profileGroupByArgs['orderBy'] }
        : { orderBy?: user_profileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_profileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_profileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_profile model
   */
  readonly fields: user_profileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_profileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_profile model
   */
  interface user_profileFieldRefs {
    readonly user_id: FieldRef<"user_profile", 'Int'>
    readonly name: FieldRef<"user_profile", 'String'>
    readonly profile_img: FieldRef<"user_profile", 'String'>
    readonly bio: FieldRef<"user_profile", 'String'>
    readonly gender: FieldRef<"user_profile", 'String'>
    readonly website: FieldRef<"user_profile", 'String'>
    readonly location: FieldRef<"user_profile", 'String'>
    readonly birthday: FieldRef<"user_profile", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_profile findUnique
   */
  export type user_profileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profile to fetch.
     */
    where: user_profileWhereUniqueInput
  }

  /**
   * user_profile findUniqueOrThrow
   */
  export type user_profileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profile to fetch.
     */
    where: user_profileWhereUniqueInput
  }

  /**
   * user_profile findFirst
   */
  export type user_profileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profile to fetch.
     */
    where?: user_profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profileOrderByWithRelationInput | user_profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_profiles.
     */
    cursor?: user_profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_profiles.
     */
    distinct?: User_profileScalarFieldEnum | User_profileScalarFieldEnum[]
  }

  /**
   * user_profile findFirstOrThrow
   */
  export type user_profileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profile to fetch.
     */
    where?: user_profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profileOrderByWithRelationInput | user_profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_profiles.
     */
    cursor?: user_profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_profiles.
     */
    distinct?: User_profileScalarFieldEnum | User_profileScalarFieldEnum[]
  }

  /**
   * user_profile findMany
   */
  export type user_profileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profiles to fetch.
     */
    where?: user_profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profileOrderByWithRelationInput | user_profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_profiles.
     */
    cursor?: user_profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    distinct?: User_profileScalarFieldEnum | User_profileScalarFieldEnum[]
  }

  /**
   * user_profile create
   */
  export type user_profileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * The data needed to create a user_profile.
     */
    data: XOR<user_profileCreateInput, user_profileUncheckedCreateInput>
  }

  /**
   * user_profile createMany
   */
  export type user_profileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_profiles.
     */
    data: user_profileCreateManyInput | user_profileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_profile update
   */
  export type user_profileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * The data needed to update a user_profile.
     */
    data: XOR<user_profileUpdateInput, user_profileUncheckedUpdateInput>
    /**
     * Choose, which user_profile to update.
     */
    where: user_profileWhereUniqueInput
  }

  /**
   * user_profile updateMany
   */
  export type user_profileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_profiles.
     */
    data: XOR<user_profileUpdateManyMutationInput, user_profileUncheckedUpdateManyInput>
    /**
     * Filter which user_profiles to update
     */
    where?: user_profileWhereInput
    /**
     * Limit how many user_profiles to update.
     */
    limit?: number
  }

  /**
   * user_profile upsert
   */
  export type user_profileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * The filter to search for the user_profile to update in case it exists.
     */
    where: user_profileWhereUniqueInput
    /**
     * In case the user_profile found by the `where` argument doesn't exist, create a new user_profile with this data.
     */
    create: XOR<user_profileCreateInput, user_profileUncheckedCreateInput>
    /**
     * In case the user_profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_profileUpdateInput, user_profileUncheckedUpdateInput>
  }

  /**
   * user_profile delete
   */
  export type user_profileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter which user_profile to delete.
     */
    where: user_profileWhereUniqueInput
  }

  /**
   * user_profile deleteMany
   */
  export type user_profileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_profiles to delete
     */
    where?: user_profileWhereInput
    /**
     * Limit how many user_profiles to delete.
     */
    limit?: number
  }

  /**
   * user_profile without action
   */
  export type user_profileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
  }


  /**
   * Model user_security
   */

  export type AggregateUser_security = {
    _count: User_securityCountAggregateOutputType | null
    _avg: User_securityAvgAggregateOutputType | null
    _sum: User_securitySumAggregateOutputType | null
    _min: User_securityMinAggregateOutputType | null
    _max: User_securityMaxAggregateOutputType | null
  }

  export type User_securityAvgAggregateOutputType = {
    user_id: number | null
  }

  export type User_securitySumAggregateOutputType = {
    user_id: number | null
  }

  export type User_securityMinAggregateOutputType = {
    user_id: number | null
    email_verified: boolean | null
    last_login_at: Date | null
  }

  export type User_securityMaxAggregateOutputType = {
    user_id: number | null
    email_verified: boolean | null
    last_login_at: Date | null
  }

  export type User_securityCountAggregateOutputType = {
    user_id: number
    email_verified: number
    last_login_at: number
    _all: number
  }


  export type User_securityAvgAggregateInputType = {
    user_id?: true
  }

  export type User_securitySumAggregateInputType = {
    user_id?: true
  }

  export type User_securityMinAggregateInputType = {
    user_id?: true
    email_verified?: true
    last_login_at?: true
  }

  export type User_securityMaxAggregateInputType = {
    user_id?: true
    email_verified?: true
    last_login_at?: true
  }

  export type User_securityCountAggregateInputType = {
    user_id?: true
    email_verified?: true
    last_login_at?: true
    _all?: true
  }

  export type User_securityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_security to aggregate.
     */
    where?: user_securityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_securities to fetch.
     */
    orderBy?: user_securityOrderByWithRelationInput | user_securityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_securityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_securities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_securities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_securities
    **/
    _count?: true | User_securityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_securityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_securitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_securityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_securityMaxAggregateInputType
  }

  export type GetUser_securityAggregateType<T extends User_securityAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_security]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_security[P]>
      : GetScalarType<T[P], AggregateUser_security[P]>
  }




  export type user_securityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_securityWhereInput
    orderBy?: user_securityOrderByWithAggregationInput | user_securityOrderByWithAggregationInput[]
    by: User_securityScalarFieldEnum[] | User_securityScalarFieldEnum
    having?: user_securityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_securityCountAggregateInputType | true
    _avg?: User_securityAvgAggregateInputType
    _sum?: User_securitySumAggregateInputType
    _min?: User_securityMinAggregateInputType
    _max?: User_securityMaxAggregateInputType
  }

  export type User_securityGroupByOutputType = {
    user_id: number
    email_verified: boolean
    last_login_at: Date | null
    _count: User_securityCountAggregateOutputType | null
    _avg: User_securityAvgAggregateOutputType | null
    _sum: User_securitySumAggregateOutputType | null
    _min: User_securityMinAggregateOutputType | null
    _max: User_securityMaxAggregateOutputType | null
  }

  type GetUser_securityGroupByPayload<T extends user_securityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_securityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_securityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_securityGroupByOutputType[P]>
            : GetScalarType<T[P], User_securityGroupByOutputType[P]>
        }
      >
    >


  export type user_securitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    email_verified?: boolean
    last_login_at?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_security"]>



  export type user_securitySelectScalar = {
    user_id?: boolean
    email_verified?: boolean
    last_login_at?: boolean
  }

  export type user_securityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "email_verified" | "last_login_at", ExtArgs["result"]["user_security"]>
  export type user_securityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_securityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_security"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: number
      email_verified: boolean
      last_login_at: Date | null
    }, ExtArgs["result"]["user_security"]>
    composites: {}
  }

  type user_securityGetPayload<S extends boolean | null | undefined | user_securityDefaultArgs> = $Result.GetResult<Prisma.$user_securityPayload, S>

  type user_securityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_securityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_securityCountAggregateInputType | true
    }

  export interface user_securityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_security'], meta: { name: 'user_security' } }
    /**
     * Find zero or one User_security that matches the filter.
     * @param {user_securityFindUniqueArgs} args - Arguments to find a User_security
     * @example
     * // Get one User_security
     * const user_security = await prisma.user_security.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_securityFindUniqueArgs>(args: SelectSubset<T, user_securityFindUniqueArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_security that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_securityFindUniqueOrThrowArgs} args - Arguments to find a User_security
     * @example
     * // Get one User_security
     * const user_security = await prisma.user_security.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_securityFindUniqueOrThrowArgs>(args: SelectSubset<T, user_securityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_security that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityFindFirstArgs} args - Arguments to find a User_security
     * @example
     * // Get one User_security
     * const user_security = await prisma.user_security.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_securityFindFirstArgs>(args?: SelectSubset<T, user_securityFindFirstArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_security that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityFindFirstOrThrowArgs} args - Arguments to find a User_security
     * @example
     * // Get one User_security
     * const user_security = await prisma.user_security.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_securityFindFirstOrThrowArgs>(args?: SelectSubset<T, user_securityFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_securities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_securities
     * const user_securities = await prisma.user_security.findMany()
     * 
     * // Get first 10 User_securities
     * const user_securities = await prisma.user_security.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_securityWithUser_idOnly = await prisma.user_security.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_securityFindManyArgs>(args?: SelectSubset<T, user_securityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_security.
     * @param {user_securityCreateArgs} args - Arguments to create a User_security.
     * @example
     * // Create one User_security
     * const User_security = await prisma.user_security.create({
     *   data: {
     *     // ... data to create a User_security
     *   }
     * })
     * 
     */
    create<T extends user_securityCreateArgs>(args: SelectSubset<T, user_securityCreateArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_securities.
     * @param {user_securityCreateManyArgs} args - Arguments to create many User_securities.
     * @example
     * // Create many User_securities
     * const user_security = await prisma.user_security.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_securityCreateManyArgs>(args?: SelectSubset<T, user_securityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_security.
     * @param {user_securityDeleteArgs} args - Arguments to delete one User_security.
     * @example
     * // Delete one User_security
     * const User_security = await prisma.user_security.delete({
     *   where: {
     *     // ... filter to delete one User_security
     *   }
     * })
     * 
     */
    delete<T extends user_securityDeleteArgs>(args: SelectSubset<T, user_securityDeleteArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_security.
     * @param {user_securityUpdateArgs} args - Arguments to update one User_security.
     * @example
     * // Update one User_security
     * const user_security = await prisma.user_security.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_securityUpdateArgs>(args: SelectSubset<T, user_securityUpdateArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_securities.
     * @param {user_securityDeleteManyArgs} args - Arguments to filter User_securities to delete.
     * @example
     * // Delete a few User_securities
     * const { count } = await prisma.user_security.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_securityDeleteManyArgs>(args?: SelectSubset<T, user_securityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_securities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_securities
     * const user_security = await prisma.user_security.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_securityUpdateManyArgs>(args: SelectSubset<T, user_securityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_security.
     * @param {user_securityUpsertArgs} args - Arguments to update or create a User_security.
     * @example
     * // Update or create a User_security
     * const user_security = await prisma.user_security.upsert({
     *   create: {
     *     // ... data to create a User_security
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_security we want to update
     *   }
     * })
     */
    upsert<T extends user_securityUpsertArgs>(args: SelectSubset<T, user_securityUpsertArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_securities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityCountArgs} args - Arguments to filter User_securities to count.
     * @example
     * // Count the number of User_securities
     * const count = await prisma.user_security.count({
     *   where: {
     *     // ... the filter for the User_securities we want to count
     *   }
     * })
    **/
    count<T extends user_securityCountArgs>(
      args?: Subset<T, user_securityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_securityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_security.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_securityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_securityAggregateArgs>(args: Subset<T, User_securityAggregateArgs>): Prisma.PrismaPromise<GetUser_securityAggregateType<T>>

    /**
     * Group by User_security.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_securityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_securityGroupByArgs['orderBy'] }
        : { orderBy?: user_securityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_securityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_securityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_security model
   */
  readonly fields: user_securityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_security.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_securityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_security model
   */
  interface user_securityFieldRefs {
    readonly user_id: FieldRef<"user_security", 'Int'>
    readonly email_verified: FieldRef<"user_security", 'Boolean'>
    readonly last_login_at: FieldRef<"user_security", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_security findUnique
   */
  export type user_securityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_security to fetch.
     */
    where: user_securityWhereUniqueInput
  }

  /**
   * user_security findUniqueOrThrow
   */
  export type user_securityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_security to fetch.
     */
    where: user_securityWhereUniqueInput
  }

  /**
   * user_security findFirst
   */
  export type user_securityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_security to fetch.
     */
    where?: user_securityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_securities to fetch.
     */
    orderBy?: user_securityOrderByWithRelationInput | user_securityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_securities.
     */
    cursor?: user_securityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_securities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_securities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_securities.
     */
    distinct?: User_securityScalarFieldEnum | User_securityScalarFieldEnum[]
  }

  /**
   * user_security findFirstOrThrow
   */
  export type user_securityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_security to fetch.
     */
    where?: user_securityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_securities to fetch.
     */
    orderBy?: user_securityOrderByWithRelationInput | user_securityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_securities.
     */
    cursor?: user_securityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_securities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_securities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_securities.
     */
    distinct?: User_securityScalarFieldEnum | User_securityScalarFieldEnum[]
  }

  /**
   * user_security findMany
   */
  export type user_securityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_securities to fetch.
     */
    where?: user_securityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_securities to fetch.
     */
    orderBy?: user_securityOrderByWithRelationInput | user_securityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_securities.
     */
    cursor?: user_securityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_securities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_securities.
     */
    skip?: number
    distinct?: User_securityScalarFieldEnum | User_securityScalarFieldEnum[]
  }

  /**
   * user_security create
   */
  export type user_securityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * The data needed to create a user_security.
     */
    data: XOR<user_securityCreateInput, user_securityUncheckedCreateInput>
  }

  /**
   * user_security createMany
   */
  export type user_securityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_securities.
     */
    data: user_securityCreateManyInput | user_securityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_security update
   */
  export type user_securityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * The data needed to update a user_security.
     */
    data: XOR<user_securityUpdateInput, user_securityUncheckedUpdateInput>
    /**
     * Choose, which user_security to update.
     */
    where: user_securityWhereUniqueInput
  }

  /**
   * user_security updateMany
   */
  export type user_securityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_securities.
     */
    data: XOR<user_securityUpdateManyMutationInput, user_securityUncheckedUpdateManyInput>
    /**
     * Filter which user_securities to update
     */
    where?: user_securityWhereInput
    /**
     * Limit how many user_securities to update.
     */
    limit?: number
  }

  /**
   * user_security upsert
   */
  export type user_securityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * The filter to search for the user_security to update in case it exists.
     */
    where: user_securityWhereUniqueInput
    /**
     * In case the user_security found by the `where` argument doesn't exist, create a new user_security with this data.
     */
    create: XOR<user_securityCreateInput, user_securityUncheckedCreateInput>
    /**
     * In case the user_security was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_securityUpdateInput, user_securityUncheckedUpdateInput>
  }

  /**
   * user_security delete
   */
  export type user_securityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter which user_security to delete.
     */
    where: user_securityWhereUniqueInput
  }

  /**
   * user_security deleteMany
   */
  export type user_securityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_securities to delete
     */
    where?: user_securityWhereInput
    /**
     * Limit how many user_securities to delete.
     */
    limit?: number
  }

  /**
   * user_security without action
   */
  export type user_securityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Chat_messageScalarFieldEnum: {
    id: 'id',
    chatroom_id: 'chatroom_id',
    sender_id: 'sender_id',
    message: 'message',
    file_url: 'file_url',
    is_deleted: 'is_deleted',
    created_at: 'created_at'
  };

  export type Chat_messageScalarFieldEnum = (typeof Chat_messageScalarFieldEnum)[keyof typeof Chat_messageScalarFieldEnum]


  export const Chat_roomScalarFieldEnum: {
    id: 'id',
    name: 'name',
    is_group: 'is_group',
    created_at: 'created_at'
  };

  export type Chat_roomScalarFieldEnum = (typeof Chat_roomScalarFieldEnum)[keyof typeof Chat_roomScalarFieldEnum]


  export const Chat_room_userScalarFieldEnum: {
    id: 'id',
    chatroom_id: 'chatroom_id',
    user_id: 'user_id',
    left_at: 'left_at'
  };

  export type Chat_room_userScalarFieldEnum = (typeof Chat_room_userScalarFieldEnum)[keyof typeof Chat_room_userScalarFieldEnum]


  export const CommentScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    user_id: 'user_id',
    content: 'content',
    parent_id: 'parent_id',
    is_anonymous: 'is_anonymous',
    is_blinded: 'is_blinded',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CommentScalarFieldEnum = (typeof CommentScalarFieldEnum)[keyof typeof CommentScalarFieldEnum]


  export const Comment_likeScalarFieldEnum: {
    id: 'id',
    comment_id: 'comment_id',
    user_id: 'user_id',
    created_at: 'created_at'
  };

  export type Comment_likeScalarFieldEnum = (typeof Comment_likeScalarFieldEnum)[keyof typeof Comment_likeScalarFieldEnum]


  export const CommunityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    admin_id: 'admin_id',
    is_private: 'is_private',
    created_at: 'created_at'
  };

  export type CommunityScalarFieldEnum = (typeof CommunityScalarFieldEnum)[keyof typeof CommunityScalarFieldEnum]


  export const EmojiScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type EmojiScalarFieldEnum = (typeof EmojiScalarFieldEnum)[keyof typeof EmojiScalarFieldEnum]


  export const Feed_cacheScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    post_id: 'post_id',
    score: 'score',
    created_at: 'created_at'
  };

  export type Feed_cacheScalarFieldEnum = (typeof Feed_cacheScalarFieldEnum)[keyof typeof Feed_cacheScalarFieldEnum]


  export const File_reportScalarFieldEnum: {
    id: 'id',
    file_id: 'file_id',
    reporter_id: 'reporter_id',
    reason: 'reason',
    created_at: 'created_at'
  };

  export type File_reportScalarFieldEnum = (typeof File_reportScalarFieldEnum)[keyof typeof File_reportScalarFieldEnum]


  export const FollowScalarFieldEnum: {
    follower_id: 'follower_id',
    following_id: 'following_id',
    created_at: 'created_at'
  };

  export type FollowScalarFieldEnum = (typeof FollowScalarFieldEnum)[keyof typeof FollowScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    type: 'type',
    message: 'message',
    is_read: 'is_read',
    source_user_id: 'source_user_id',
    related_post_id: 'related_post_id',
    related_comment_id: 'related_comment_id',
    chat_message_id: 'chat_message_id',
    chat_room_id: 'chat_room_id',
    created_at: 'created_at'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const PostScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    community_id: 'community_id',
    title: 'title',
    content: 'content',
    is_anonymous: 'is_anonymous',
    visibility: 'visibility',
    view_count: 'view_count',
    comment_count: 'comment_count',
    is_blinded: 'is_blinded',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


  export const Post_fileScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    file_url: 'file_url',
    file_type: 'file_type',
    is_thumbnail: 'is_thumbnail',
    uploaded_at: 'uploaded_at'
  };

  export type Post_fileScalarFieldEnum = (typeof Post_fileScalarFieldEnum)[keyof typeof Post_fileScalarFieldEnum]


  export const Post_likeScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    user_id: 'user_id',
    created_at: 'created_at'
  };

  export type Post_likeScalarFieldEnum = (typeof Post_likeScalarFieldEnum)[keyof typeof Post_likeScalarFieldEnum]


  export const Post_reactionScalarFieldEnum: {
    post_id: 'post_id',
    user_id: 'user_id',
    emoji_id: 'emoji_id',
    created_at: 'created_at'
  };

  export type Post_reactionScalarFieldEnum = (typeof Post_reactionScalarFieldEnum)[keyof typeof Post_reactionScalarFieldEnum]


  export const Post_tagScalarFieldEnum: {
    post_id: 'post_id',
    tag_id: 'tag_id'
  };

  export type Post_tagScalarFieldEnum = (typeof Post_tagScalarFieldEnum)[keyof typeof Post_tagScalarFieldEnum]


  export const Profile_visitScalarFieldEnum: {
    id: 'id',
    visitor_id: 'visitor_id',
    profile_user_id: 'profile_user_id',
    visited_at: 'visited_at'
  };

  export type Profile_visitScalarFieldEnum = (typeof Profile_visitScalarFieldEnum)[keyof typeof Profile_visitScalarFieldEnum]


  export const ReportScalarFieldEnum: {
    id: 'id',
    reporter_id: 'reporter_id',
    target_type: 'target_type',
    target_id: 'target_id',
    reason: 'reason',
    created_at: 'created_at'
  };

  export type ReportScalarFieldEnum = (typeof ReportScalarFieldEnum)[keyof typeof ReportScalarFieldEnum]


  export const Search_historyScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    keyword: 'keyword',
    searched_at: 'searched_at'
  };

  export type Search_historyScalarFieldEnum = (typeof Search_historyScalarFieldEnum)[keyof typeof Search_historyScalarFieldEnum]


  export const TagScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type TagScalarFieldEnum = (typeof TagScalarFieldEnum)[keyof typeof TagScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    email: 'email',
    name: 'name',
    nickname: 'nickname',
    profile_img: 'profile_img',
    bio: 'bio',
    gender: 'gender',
    email_verified: 'email_verified',
    status: 'status',
    website: 'website',
    location: 'location',
    birthday: 'birthday',
    oauth_provider: 'oauth_provider',
    oauth_id: 'oauth_id',
    created_at: 'created_at'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const User_blockScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    blocked_user_id: 'blocked_user_id',
    created_at: 'created_at'
  };

  export type User_blockScalarFieldEnum = (typeof User_blockScalarFieldEnum)[keyof typeof User_blockScalarFieldEnum]


  export const User_oauthScalarFieldEnum: {
    user_id: 'user_id',
    oauth_provider: 'oauth_provider',
    oauth_id: 'oauth_id'
  };

  export type User_oauthScalarFieldEnum = (typeof User_oauthScalarFieldEnum)[keyof typeof User_oauthScalarFieldEnum]


  export const User_profileScalarFieldEnum: {
    user_id: 'user_id',
    name: 'name',
    profile_img: 'profile_img',
    bio: 'bio',
    gender: 'gender',
    website: 'website',
    location: 'location',
    birthday: 'birthday'
  };

  export type User_profileScalarFieldEnum = (typeof User_profileScalarFieldEnum)[keyof typeof User_profileScalarFieldEnum]


  export const User_securityScalarFieldEnum: {
    user_id: 'user_id',
    email_verified: 'email_verified',
    last_login_at: 'last_login_at'
  };

  export type User_securityScalarFieldEnum = (typeof User_securityScalarFieldEnum)[keyof typeof User_securityScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const chat_messageOrderByRelevanceFieldEnum: {
    message: 'message',
    file_url: 'file_url'
  };

  export type chat_messageOrderByRelevanceFieldEnum = (typeof chat_messageOrderByRelevanceFieldEnum)[keyof typeof chat_messageOrderByRelevanceFieldEnum]


  export const chat_roomOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type chat_roomOrderByRelevanceFieldEnum = (typeof chat_roomOrderByRelevanceFieldEnum)[keyof typeof chat_roomOrderByRelevanceFieldEnum]


  export const commentOrderByRelevanceFieldEnum: {
    content: 'content'
  };

  export type commentOrderByRelevanceFieldEnum = (typeof commentOrderByRelevanceFieldEnum)[keyof typeof commentOrderByRelevanceFieldEnum]


  export const communityOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description'
  };

  export type communityOrderByRelevanceFieldEnum = (typeof communityOrderByRelevanceFieldEnum)[keyof typeof communityOrderByRelevanceFieldEnum]


  export const emojiOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type emojiOrderByRelevanceFieldEnum = (typeof emojiOrderByRelevanceFieldEnum)[keyof typeof emojiOrderByRelevanceFieldEnum]


  export const file_reportOrderByRelevanceFieldEnum: {
    reason: 'reason'
  };

  export type file_reportOrderByRelevanceFieldEnum = (typeof file_reportOrderByRelevanceFieldEnum)[keyof typeof file_reportOrderByRelevanceFieldEnum]


  export const notificationOrderByRelevanceFieldEnum: {
    type: 'type',
    message: 'message'
  };

  export type notificationOrderByRelevanceFieldEnum = (typeof notificationOrderByRelevanceFieldEnum)[keyof typeof notificationOrderByRelevanceFieldEnum]


  export const postOrderByRelevanceFieldEnum: {
    title: 'title',
    content: 'content'
  };

  export type postOrderByRelevanceFieldEnum = (typeof postOrderByRelevanceFieldEnum)[keyof typeof postOrderByRelevanceFieldEnum]


  export const post_fileOrderByRelevanceFieldEnum: {
    file_url: 'file_url',
    file_type: 'file_type'
  };

  export type post_fileOrderByRelevanceFieldEnum = (typeof post_fileOrderByRelevanceFieldEnum)[keyof typeof post_fileOrderByRelevanceFieldEnum]


  export const reportOrderByRelevanceFieldEnum: {
    reason: 'reason'
  };

  export type reportOrderByRelevanceFieldEnum = (typeof reportOrderByRelevanceFieldEnum)[keyof typeof reportOrderByRelevanceFieldEnum]


  export const search_historyOrderByRelevanceFieldEnum: {
    keyword: 'keyword'
  };

  export type search_historyOrderByRelevanceFieldEnum = (typeof search_historyOrderByRelevanceFieldEnum)[keyof typeof search_historyOrderByRelevanceFieldEnum]


  export const tagOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type tagOrderByRelevanceFieldEnum = (typeof tagOrderByRelevanceFieldEnum)[keyof typeof tagOrderByRelevanceFieldEnum]


  export const userOrderByRelevanceFieldEnum: {
    username: 'username',
    password: 'password',
    email: 'email',
    name: 'name',
    nickname: 'nickname',
    profile_img: 'profile_img',
    bio: 'bio',
    gender: 'gender',
    website: 'website',
    location: 'location',
    oauth_provider: 'oauth_provider',
    oauth_id: 'oauth_id'
  };

  export type userOrderByRelevanceFieldEnum = (typeof userOrderByRelevanceFieldEnum)[keyof typeof userOrderByRelevanceFieldEnum]


  export const user_oauthOrderByRelevanceFieldEnum: {
    oauth_provider: 'oauth_provider',
    oauth_id: 'oauth_id'
  };

  export type user_oauthOrderByRelevanceFieldEnum = (typeof user_oauthOrderByRelevanceFieldEnum)[keyof typeof user_oauthOrderByRelevanceFieldEnum]


  export const user_profileOrderByRelevanceFieldEnum: {
    name: 'name',
    profile_img: 'profile_img',
    bio: 'bio',
    gender: 'gender',
    website: 'website',
    location: 'location'
  };

  export type user_profileOrderByRelevanceFieldEnum = (typeof user_profileOrderByRelevanceFieldEnum)[keyof typeof user_profileOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'post_visibility'
   */
  export type Enumpost_visibilityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'post_visibility'>
    


  /**
   * Reference to a field of type 'report_target_type'
   */
  export type Enumreport_target_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'report_target_type'>
    


  /**
   * Reference to a field of type 'user_status'
   */
  export type Enumuser_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_status'>
    
  /**
   * Deep Input Types
   */


  export type chat_messageWhereInput = {
    AND?: chat_messageWhereInput | chat_messageWhereInput[]
    OR?: chat_messageWhereInput[]
    NOT?: chat_messageWhereInput | chat_messageWhereInput[]
    id?: IntFilter<"chat_message"> | number
    chatroom_id?: IntFilter<"chat_message"> | number
    sender_id?: IntFilter<"chat_message"> | number
    message?: StringNullableFilter<"chat_message"> | string | null
    file_url?: StringNullableFilter<"chat_message"> | string | null
    is_deleted?: BoolFilter<"chat_message"> | boolean
    created_at?: DateTimeFilter<"chat_message"> | Date | string
    chat_room?: XOR<Chat_roomScalarRelationFilter, chat_roomWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    notification?: NotificationListRelationFilter
  }

  export type chat_messageOrderByWithRelationInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    sender_id?: SortOrder
    message?: SortOrderInput | SortOrder
    file_url?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    chat_room?: chat_roomOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    notification?: notificationOrderByRelationAggregateInput
    _relevance?: chat_messageOrderByRelevanceInput
  }

  export type chat_messageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: chat_messageWhereInput | chat_messageWhereInput[]
    OR?: chat_messageWhereInput[]
    NOT?: chat_messageWhereInput | chat_messageWhereInput[]
    chatroom_id?: IntFilter<"chat_message"> | number
    sender_id?: IntFilter<"chat_message"> | number
    message?: StringNullableFilter<"chat_message"> | string | null
    file_url?: StringNullableFilter<"chat_message"> | string | null
    is_deleted?: BoolFilter<"chat_message"> | boolean
    created_at?: DateTimeFilter<"chat_message"> | Date | string
    chat_room?: XOR<Chat_roomScalarRelationFilter, chat_roomWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    notification?: NotificationListRelationFilter
  }, "id">

  export type chat_messageOrderByWithAggregationInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    sender_id?: SortOrder
    message?: SortOrderInput | SortOrder
    file_url?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    _count?: chat_messageCountOrderByAggregateInput
    _avg?: chat_messageAvgOrderByAggregateInput
    _max?: chat_messageMaxOrderByAggregateInput
    _min?: chat_messageMinOrderByAggregateInput
    _sum?: chat_messageSumOrderByAggregateInput
  }

  export type chat_messageScalarWhereWithAggregatesInput = {
    AND?: chat_messageScalarWhereWithAggregatesInput | chat_messageScalarWhereWithAggregatesInput[]
    OR?: chat_messageScalarWhereWithAggregatesInput[]
    NOT?: chat_messageScalarWhereWithAggregatesInput | chat_messageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"chat_message"> | number
    chatroom_id?: IntWithAggregatesFilter<"chat_message"> | number
    sender_id?: IntWithAggregatesFilter<"chat_message"> | number
    message?: StringNullableWithAggregatesFilter<"chat_message"> | string | null
    file_url?: StringNullableWithAggregatesFilter<"chat_message"> | string | null
    is_deleted?: BoolWithAggregatesFilter<"chat_message"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"chat_message"> | Date | string
  }

  export type chat_roomWhereInput = {
    AND?: chat_roomWhereInput | chat_roomWhereInput[]
    OR?: chat_roomWhereInput[]
    NOT?: chat_roomWhereInput | chat_roomWhereInput[]
    id?: IntFilter<"chat_room"> | number
    name?: StringNullableFilter<"chat_room"> | string | null
    is_group?: BoolNullableFilter<"chat_room"> | boolean | null
    created_at?: DateTimeFilter<"chat_room"> | Date | string
    chat_message?: Chat_messageListRelationFilter
    chat_room_user?: Chat_room_userListRelationFilter
    notification?: NotificationListRelationFilter
  }

  export type chat_roomOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    is_group?: SortOrderInput | SortOrder
    created_at?: SortOrder
    chat_message?: chat_messageOrderByRelationAggregateInput
    chat_room_user?: chat_room_userOrderByRelationAggregateInput
    notification?: notificationOrderByRelationAggregateInput
    _relevance?: chat_roomOrderByRelevanceInput
  }

  export type chat_roomWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: chat_roomWhereInput | chat_roomWhereInput[]
    OR?: chat_roomWhereInput[]
    NOT?: chat_roomWhereInput | chat_roomWhereInput[]
    name?: StringNullableFilter<"chat_room"> | string | null
    is_group?: BoolNullableFilter<"chat_room"> | boolean | null
    created_at?: DateTimeFilter<"chat_room"> | Date | string
    chat_message?: Chat_messageListRelationFilter
    chat_room_user?: Chat_room_userListRelationFilter
    notification?: NotificationListRelationFilter
  }, "id">

  export type chat_roomOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    is_group?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: chat_roomCountOrderByAggregateInput
    _avg?: chat_roomAvgOrderByAggregateInput
    _max?: chat_roomMaxOrderByAggregateInput
    _min?: chat_roomMinOrderByAggregateInput
    _sum?: chat_roomSumOrderByAggregateInput
  }

  export type chat_roomScalarWhereWithAggregatesInput = {
    AND?: chat_roomScalarWhereWithAggregatesInput | chat_roomScalarWhereWithAggregatesInput[]
    OR?: chat_roomScalarWhereWithAggregatesInput[]
    NOT?: chat_roomScalarWhereWithAggregatesInput | chat_roomScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"chat_room"> | number
    name?: StringNullableWithAggregatesFilter<"chat_room"> | string | null
    is_group?: BoolNullableWithAggregatesFilter<"chat_room"> | boolean | null
    created_at?: DateTimeWithAggregatesFilter<"chat_room"> | Date | string
  }

  export type chat_room_userWhereInput = {
    AND?: chat_room_userWhereInput | chat_room_userWhereInput[]
    OR?: chat_room_userWhereInput[]
    NOT?: chat_room_userWhereInput | chat_room_userWhereInput[]
    id?: IntFilter<"chat_room_user"> | number
    chatroom_id?: IntFilter<"chat_room_user"> | number
    user_id?: IntFilter<"chat_room_user"> | number
    left_at?: DateTimeNullableFilter<"chat_room_user"> | Date | string | null
    chat_room?: XOR<Chat_roomScalarRelationFilter, chat_roomWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type chat_room_userOrderByWithRelationInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    user_id?: SortOrder
    left_at?: SortOrderInput | SortOrder
    chat_room?: chat_roomOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type chat_room_userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    chatroom_id_user_id?: chat_room_userChatroom_idUser_idCompoundUniqueInput
    AND?: chat_room_userWhereInput | chat_room_userWhereInput[]
    OR?: chat_room_userWhereInput[]
    NOT?: chat_room_userWhereInput | chat_room_userWhereInput[]
    chatroom_id?: IntFilter<"chat_room_user"> | number
    user_id?: IntFilter<"chat_room_user"> | number
    left_at?: DateTimeNullableFilter<"chat_room_user"> | Date | string | null
    chat_room?: XOR<Chat_roomScalarRelationFilter, chat_roomWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "chatroom_id_user_id">

  export type chat_room_userOrderByWithAggregationInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    user_id?: SortOrder
    left_at?: SortOrderInput | SortOrder
    _count?: chat_room_userCountOrderByAggregateInput
    _avg?: chat_room_userAvgOrderByAggregateInput
    _max?: chat_room_userMaxOrderByAggregateInput
    _min?: chat_room_userMinOrderByAggregateInput
    _sum?: chat_room_userSumOrderByAggregateInput
  }

  export type chat_room_userScalarWhereWithAggregatesInput = {
    AND?: chat_room_userScalarWhereWithAggregatesInput | chat_room_userScalarWhereWithAggregatesInput[]
    OR?: chat_room_userScalarWhereWithAggregatesInput[]
    NOT?: chat_room_userScalarWhereWithAggregatesInput | chat_room_userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"chat_room_user"> | number
    chatroom_id?: IntWithAggregatesFilter<"chat_room_user"> | number
    user_id?: IntWithAggregatesFilter<"chat_room_user"> | number
    left_at?: DateTimeNullableWithAggregatesFilter<"chat_room_user"> | Date | string | null
  }

  export type commentWhereInput = {
    AND?: commentWhereInput | commentWhereInput[]
    OR?: commentWhereInput[]
    NOT?: commentWhereInput | commentWhereInput[]
    id?: IntFilter<"comment"> | number
    post_id?: IntFilter<"comment"> | number
    user_id?: IntFilter<"comment"> | number
    content?: StringNullableFilter<"comment"> | string | null
    parent_id?: IntNullableFilter<"comment"> | number | null
    is_anonymous?: BoolFilter<"comment"> | boolean
    is_blinded?: BoolFilter<"comment"> | boolean
    is_deleted?: BoolFilter<"comment"> | boolean
    created_at?: DateTimeFilter<"comment"> | Date | string
    updated_at?: DateTimeNullableFilter<"comment"> | Date | string | null
    comment?: XOR<CommentNullableScalarRelationFilter, commentWhereInput> | null
    other_comment?: CommentListRelationFilter
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    comment_like?: Comment_likeListRelationFilter
    notification?: NotificationListRelationFilter
  }

  export type commentOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    content?: SortOrderInput | SortOrder
    parent_id?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    comment?: commentOrderByWithRelationInput
    other_comment?: commentOrderByRelationAggregateInput
    post?: postOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    comment_like?: comment_likeOrderByRelationAggregateInput
    notification?: notificationOrderByRelationAggregateInput
    _relevance?: commentOrderByRelevanceInput
  }

  export type commentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: commentWhereInput | commentWhereInput[]
    OR?: commentWhereInput[]
    NOT?: commentWhereInput | commentWhereInput[]
    post_id?: IntFilter<"comment"> | number
    user_id?: IntFilter<"comment"> | number
    content?: StringNullableFilter<"comment"> | string | null
    parent_id?: IntNullableFilter<"comment"> | number | null
    is_anonymous?: BoolFilter<"comment"> | boolean
    is_blinded?: BoolFilter<"comment"> | boolean
    is_deleted?: BoolFilter<"comment"> | boolean
    created_at?: DateTimeFilter<"comment"> | Date | string
    updated_at?: DateTimeNullableFilter<"comment"> | Date | string | null
    comment?: XOR<CommentNullableScalarRelationFilter, commentWhereInput> | null
    other_comment?: CommentListRelationFilter
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    comment_like?: Comment_likeListRelationFilter
    notification?: NotificationListRelationFilter
  }, "id">

  export type commentOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    content?: SortOrderInput | SortOrder
    parent_id?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: commentCountOrderByAggregateInput
    _avg?: commentAvgOrderByAggregateInput
    _max?: commentMaxOrderByAggregateInput
    _min?: commentMinOrderByAggregateInput
    _sum?: commentSumOrderByAggregateInput
  }

  export type commentScalarWhereWithAggregatesInput = {
    AND?: commentScalarWhereWithAggregatesInput | commentScalarWhereWithAggregatesInput[]
    OR?: commentScalarWhereWithAggregatesInput[]
    NOT?: commentScalarWhereWithAggregatesInput | commentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"comment"> | number
    post_id?: IntWithAggregatesFilter<"comment"> | number
    user_id?: IntWithAggregatesFilter<"comment"> | number
    content?: StringNullableWithAggregatesFilter<"comment"> | string | null
    parent_id?: IntNullableWithAggregatesFilter<"comment"> | number | null
    is_anonymous?: BoolWithAggregatesFilter<"comment"> | boolean
    is_blinded?: BoolWithAggregatesFilter<"comment"> | boolean
    is_deleted?: BoolWithAggregatesFilter<"comment"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"comment"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"comment"> | Date | string | null
  }

  export type comment_likeWhereInput = {
    AND?: comment_likeWhereInput | comment_likeWhereInput[]
    OR?: comment_likeWhereInput[]
    NOT?: comment_likeWhereInput | comment_likeWhereInput[]
    id?: IntFilter<"comment_like"> | number
    comment_id?: IntFilter<"comment_like"> | number
    user_id?: IntFilter<"comment_like"> | number
    created_at?: DateTimeFilter<"comment_like"> | Date | string
    comment?: XOR<CommentScalarRelationFilter, commentWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type comment_likeOrderByWithRelationInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    comment?: commentOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type comment_likeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    comment_id_user_id?: comment_likeComment_idUser_idCompoundUniqueInput
    AND?: comment_likeWhereInput | comment_likeWhereInput[]
    OR?: comment_likeWhereInput[]
    NOT?: comment_likeWhereInput | comment_likeWhereInput[]
    comment_id?: IntFilter<"comment_like"> | number
    user_id?: IntFilter<"comment_like"> | number
    created_at?: DateTimeFilter<"comment_like"> | Date | string
    comment?: XOR<CommentScalarRelationFilter, commentWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "comment_id_user_id">

  export type comment_likeOrderByWithAggregationInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    _count?: comment_likeCountOrderByAggregateInput
    _avg?: comment_likeAvgOrderByAggregateInput
    _max?: comment_likeMaxOrderByAggregateInput
    _min?: comment_likeMinOrderByAggregateInput
    _sum?: comment_likeSumOrderByAggregateInput
  }

  export type comment_likeScalarWhereWithAggregatesInput = {
    AND?: comment_likeScalarWhereWithAggregatesInput | comment_likeScalarWhereWithAggregatesInput[]
    OR?: comment_likeScalarWhereWithAggregatesInput[]
    NOT?: comment_likeScalarWhereWithAggregatesInput | comment_likeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"comment_like"> | number
    comment_id?: IntWithAggregatesFilter<"comment_like"> | number
    user_id?: IntWithAggregatesFilter<"comment_like"> | number
    created_at?: DateTimeWithAggregatesFilter<"comment_like"> | Date | string
  }

  export type communityWhereInput = {
    AND?: communityWhereInput | communityWhereInput[]
    OR?: communityWhereInput[]
    NOT?: communityWhereInput | communityWhereInput[]
    id?: IntFilter<"community"> | number
    name?: StringFilter<"community"> | string
    description?: StringNullableFilter<"community"> | string | null
    admin_id?: IntNullableFilter<"community"> | number | null
    is_private?: BoolFilter<"community"> | boolean
    created_at?: DateTimeFilter<"community"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    post?: PostListRelationFilter
  }

  export type communityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    admin_id?: SortOrderInput | SortOrder
    is_private?: SortOrder
    created_at?: SortOrder
    user?: userOrderByWithRelationInput
    post?: postOrderByRelationAggregateInput
    _relevance?: communityOrderByRelevanceInput
  }

  export type communityWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: communityWhereInput | communityWhereInput[]
    OR?: communityWhereInput[]
    NOT?: communityWhereInput | communityWhereInput[]
    description?: StringNullableFilter<"community"> | string | null
    admin_id?: IntNullableFilter<"community"> | number | null
    is_private?: BoolFilter<"community"> | boolean
    created_at?: DateTimeFilter<"community"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    post?: PostListRelationFilter
  }, "id" | "name">

  export type communityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    admin_id?: SortOrderInput | SortOrder
    is_private?: SortOrder
    created_at?: SortOrder
    _count?: communityCountOrderByAggregateInput
    _avg?: communityAvgOrderByAggregateInput
    _max?: communityMaxOrderByAggregateInput
    _min?: communityMinOrderByAggregateInput
    _sum?: communitySumOrderByAggregateInput
  }

  export type communityScalarWhereWithAggregatesInput = {
    AND?: communityScalarWhereWithAggregatesInput | communityScalarWhereWithAggregatesInput[]
    OR?: communityScalarWhereWithAggregatesInput[]
    NOT?: communityScalarWhereWithAggregatesInput | communityScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"community"> | number
    name?: StringWithAggregatesFilter<"community"> | string
    description?: StringNullableWithAggregatesFilter<"community"> | string | null
    admin_id?: IntNullableWithAggregatesFilter<"community"> | number | null
    is_private?: BoolWithAggregatesFilter<"community"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"community"> | Date | string
  }

  export type emojiWhereInput = {
    AND?: emojiWhereInput | emojiWhereInput[]
    OR?: emojiWhereInput[]
    NOT?: emojiWhereInput | emojiWhereInput[]
    id?: IntFilter<"emoji"> | number
    name?: StringFilter<"emoji"> | string
    post_reaction?: Post_reactionListRelationFilter
  }

  export type emojiOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    post_reaction?: post_reactionOrderByRelationAggregateInput
    _relevance?: emojiOrderByRelevanceInput
  }

  export type emojiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: emojiWhereInput | emojiWhereInput[]
    OR?: emojiWhereInput[]
    NOT?: emojiWhereInput | emojiWhereInput[]
    post_reaction?: Post_reactionListRelationFilter
  }, "id" | "name">

  export type emojiOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: emojiCountOrderByAggregateInput
    _avg?: emojiAvgOrderByAggregateInput
    _max?: emojiMaxOrderByAggregateInput
    _min?: emojiMinOrderByAggregateInput
    _sum?: emojiSumOrderByAggregateInput
  }

  export type emojiScalarWhereWithAggregatesInput = {
    AND?: emojiScalarWhereWithAggregatesInput | emojiScalarWhereWithAggregatesInput[]
    OR?: emojiScalarWhereWithAggregatesInput[]
    NOT?: emojiScalarWhereWithAggregatesInput | emojiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"emoji"> | number
    name?: StringWithAggregatesFilter<"emoji"> | string
  }

  export type feed_cacheWhereInput = {
    AND?: feed_cacheWhereInput | feed_cacheWhereInput[]
    OR?: feed_cacheWhereInput[]
    NOT?: feed_cacheWhereInput | feed_cacheWhereInput[]
    id?: IntFilter<"feed_cache"> | number
    user_id?: IntFilter<"feed_cache"> | number
    post_id?: IntFilter<"feed_cache"> | number
    score?: FloatFilter<"feed_cache"> | number
    created_at?: DateTimeFilter<"feed_cache"> | Date | string
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type feed_cacheOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    score?: SortOrder
    created_at?: SortOrder
    post?: postOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type feed_cacheWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: feed_cacheWhereInput | feed_cacheWhereInput[]
    OR?: feed_cacheWhereInput[]
    NOT?: feed_cacheWhereInput | feed_cacheWhereInput[]
    user_id?: IntFilter<"feed_cache"> | number
    post_id?: IntFilter<"feed_cache"> | number
    score?: FloatFilter<"feed_cache"> | number
    created_at?: DateTimeFilter<"feed_cache"> | Date | string
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type feed_cacheOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    score?: SortOrder
    created_at?: SortOrder
    _count?: feed_cacheCountOrderByAggregateInput
    _avg?: feed_cacheAvgOrderByAggregateInput
    _max?: feed_cacheMaxOrderByAggregateInput
    _min?: feed_cacheMinOrderByAggregateInput
    _sum?: feed_cacheSumOrderByAggregateInput
  }

  export type feed_cacheScalarWhereWithAggregatesInput = {
    AND?: feed_cacheScalarWhereWithAggregatesInput | feed_cacheScalarWhereWithAggregatesInput[]
    OR?: feed_cacheScalarWhereWithAggregatesInput[]
    NOT?: feed_cacheScalarWhereWithAggregatesInput | feed_cacheScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"feed_cache"> | number
    user_id?: IntWithAggregatesFilter<"feed_cache"> | number
    post_id?: IntWithAggregatesFilter<"feed_cache"> | number
    score?: FloatWithAggregatesFilter<"feed_cache"> | number
    created_at?: DateTimeWithAggregatesFilter<"feed_cache"> | Date | string
  }

  export type file_reportWhereInput = {
    AND?: file_reportWhereInput | file_reportWhereInput[]
    OR?: file_reportWhereInput[]
    NOT?: file_reportWhereInput | file_reportWhereInput[]
    id?: IntFilter<"file_report"> | number
    file_id?: IntFilter<"file_report"> | number
    reporter_id?: IntFilter<"file_report"> | number
    reason?: StringNullableFilter<"file_report"> | string | null
    created_at?: DateTimeFilter<"file_report"> | Date | string
    post_file?: XOR<Post_fileScalarRelationFilter, post_fileWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type file_reportOrderByWithRelationInput = {
    id?: SortOrder
    file_id?: SortOrder
    reporter_id?: SortOrder
    reason?: SortOrderInput | SortOrder
    created_at?: SortOrder
    post_file?: post_fileOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    _relevance?: file_reportOrderByRelevanceInput
  }

  export type file_reportWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: file_reportWhereInput | file_reportWhereInput[]
    OR?: file_reportWhereInput[]
    NOT?: file_reportWhereInput | file_reportWhereInput[]
    file_id?: IntFilter<"file_report"> | number
    reporter_id?: IntFilter<"file_report"> | number
    reason?: StringNullableFilter<"file_report"> | string | null
    created_at?: DateTimeFilter<"file_report"> | Date | string
    post_file?: XOR<Post_fileScalarRelationFilter, post_fileWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type file_reportOrderByWithAggregationInput = {
    id?: SortOrder
    file_id?: SortOrder
    reporter_id?: SortOrder
    reason?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: file_reportCountOrderByAggregateInput
    _avg?: file_reportAvgOrderByAggregateInput
    _max?: file_reportMaxOrderByAggregateInput
    _min?: file_reportMinOrderByAggregateInput
    _sum?: file_reportSumOrderByAggregateInput
  }

  export type file_reportScalarWhereWithAggregatesInput = {
    AND?: file_reportScalarWhereWithAggregatesInput | file_reportScalarWhereWithAggregatesInput[]
    OR?: file_reportScalarWhereWithAggregatesInput[]
    NOT?: file_reportScalarWhereWithAggregatesInput | file_reportScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"file_report"> | number
    file_id?: IntWithAggregatesFilter<"file_report"> | number
    reporter_id?: IntWithAggregatesFilter<"file_report"> | number
    reason?: StringNullableWithAggregatesFilter<"file_report"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"file_report"> | Date | string
  }

  export type followWhereInput = {
    AND?: followWhereInput | followWhereInput[]
    OR?: followWhereInput[]
    NOT?: followWhereInput | followWhereInput[]
    follower_id?: IntFilter<"follow"> | number
    following_id?: IntFilter<"follow"> | number
    created_at?: DateTimeFilter<"follow"> | Date | string
    user_follow_follower_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
    user_follow_following_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type followOrderByWithRelationInput = {
    follower_id?: SortOrder
    following_id?: SortOrder
    created_at?: SortOrder
    user_follow_follower_idTouser?: userOrderByWithRelationInput
    user_follow_following_idTouser?: userOrderByWithRelationInput
  }

  export type followWhereUniqueInput = Prisma.AtLeast<{
    follower_id_following_id?: followFollower_idFollowing_idCompoundUniqueInput
    AND?: followWhereInput | followWhereInput[]
    OR?: followWhereInput[]
    NOT?: followWhereInput | followWhereInput[]
    follower_id?: IntFilter<"follow"> | number
    following_id?: IntFilter<"follow"> | number
    created_at?: DateTimeFilter<"follow"> | Date | string
    user_follow_follower_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
    user_follow_following_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "follower_id_following_id">

  export type followOrderByWithAggregationInput = {
    follower_id?: SortOrder
    following_id?: SortOrder
    created_at?: SortOrder
    _count?: followCountOrderByAggregateInput
    _avg?: followAvgOrderByAggregateInput
    _max?: followMaxOrderByAggregateInput
    _min?: followMinOrderByAggregateInput
    _sum?: followSumOrderByAggregateInput
  }

  export type followScalarWhereWithAggregatesInput = {
    AND?: followScalarWhereWithAggregatesInput | followScalarWhereWithAggregatesInput[]
    OR?: followScalarWhereWithAggregatesInput[]
    NOT?: followScalarWhereWithAggregatesInput | followScalarWhereWithAggregatesInput[]
    follower_id?: IntWithAggregatesFilter<"follow"> | number
    following_id?: IntWithAggregatesFilter<"follow"> | number
    created_at?: DateTimeWithAggregatesFilter<"follow"> | Date | string
  }

  export type notificationWhereInput = {
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    id?: IntFilter<"notification"> | number
    user_id?: IntFilter<"notification"> | number
    type?: StringFilter<"notification"> | string
    message?: StringNullableFilter<"notification"> | string | null
    is_read?: BoolFilter<"notification"> | boolean
    source_user_id?: IntNullableFilter<"notification"> | number | null
    related_post_id?: IntNullableFilter<"notification"> | number | null
    related_comment_id?: IntNullableFilter<"notification"> | number | null
    chat_message_id?: IntNullableFilter<"notification"> | number | null
    chat_room_id?: IntNullableFilter<"notification"> | number | null
    created_at?: DateTimeFilter<"notification"> | Date | string
    chat_message?: XOR<Chat_messageNullableScalarRelationFilter, chat_messageWhereInput> | null
    chat_room?: XOR<Chat_roomNullableScalarRelationFilter, chat_roomWhereInput> | null
    comment?: XOR<CommentNullableScalarRelationFilter, commentWhereInput> | null
    post?: XOR<PostNullableScalarRelationFilter, postWhereInput> | null
    user_notification_source_user_idTouser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    user_notification_user_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type notificationOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    message?: SortOrderInput | SortOrder
    is_read?: SortOrder
    source_user_id?: SortOrderInput | SortOrder
    related_post_id?: SortOrderInput | SortOrder
    related_comment_id?: SortOrderInput | SortOrder
    chat_message_id?: SortOrderInput | SortOrder
    chat_room_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    chat_message?: chat_messageOrderByWithRelationInput
    chat_room?: chat_roomOrderByWithRelationInput
    comment?: commentOrderByWithRelationInput
    post?: postOrderByWithRelationInput
    user_notification_source_user_idTouser?: userOrderByWithRelationInput
    user_notification_user_idTouser?: userOrderByWithRelationInput
    _relevance?: notificationOrderByRelevanceInput
  }

  export type notificationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    user_id?: IntFilter<"notification"> | number
    type?: StringFilter<"notification"> | string
    message?: StringNullableFilter<"notification"> | string | null
    is_read?: BoolFilter<"notification"> | boolean
    source_user_id?: IntNullableFilter<"notification"> | number | null
    related_post_id?: IntNullableFilter<"notification"> | number | null
    related_comment_id?: IntNullableFilter<"notification"> | number | null
    chat_message_id?: IntNullableFilter<"notification"> | number | null
    chat_room_id?: IntNullableFilter<"notification"> | number | null
    created_at?: DateTimeFilter<"notification"> | Date | string
    chat_message?: XOR<Chat_messageNullableScalarRelationFilter, chat_messageWhereInput> | null
    chat_room?: XOR<Chat_roomNullableScalarRelationFilter, chat_roomWhereInput> | null
    comment?: XOR<CommentNullableScalarRelationFilter, commentWhereInput> | null
    post?: XOR<PostNullableScalarRelationFilter, postWhereInput> | null
    user_notification_source_user_idTouser?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    user_notification_user_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type notificationOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    message?: SortOrderInput | SortOrder
    is_read?: SortOrder
    source_user_id?: SortOrderInput | SortOrder
    related_post_id?: SortOrderInput | SortOrder
    related_comment_id?: SortOrderInput | SortOrder
    chat_message_id?: SortOrderInput | SortOrder
    chat_room_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: notificationCountOrderByAggregateInput
    _avg?: notificationAvgOrderByAggregateInput
    _max?: notificationMaxOrderByAggregateInput
    _min?: notificationMinOrderByAggregateInput
    _sum?: notificationSumOrderByAggregateInput
  }

  export type notificationScalarWhereWithAggregatesInput = {
    AND?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    OR?: notificationScalarWhereWithAggregatesInput[]
    NOT?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"notification"> | number
    user_id?: IntWithAggregatesFilter<"notification"> | number
    type?: StringWithAggregatesFilter<"notification"> | string
    message?: StringNullableWithAggregatesFilter<"notification"> | string | null
    is_read?: BoolWithAggregatesFilter<"notification"> | boolean
    source_user_id?: IntNullableWithAggregatesFilter<"notification"> | number | null
    related_post_id?: IntNullableWithAggregatesFilter<"notification"> | number | null
    related_comment_id?: IntNullableWithAggregatesFilter<"notification"> | number | null
    chat_message_id?: IntNullableWithAggregatesFilter<"notification"> | number | null
    chat_room_id?: IntNullableWithAggregatesFilter<"notification"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"notification"> | Date | string
  }

  export type postWhereInput = {
    AND?: postWhereInput | postWhereInput[]
    OR?: postWhereInput[]
    NOT?: postWhereInput | postWhereInput[]
    id?: IntFilter<"post"> | number
    user_id?: IntFilter<"post"> | number
    community_id?: IntFilter<"post"> | number
    title?: StringNullableFilter<"post"> | string | null
    content?: StringNullableFilter<"post"> | string | null
    is_anonymous?: BoolFilter<"post"> | boolean
    visibility?: Enumpost_visibilityFilter<"post"> | $Enums.post_visibility
    view_count?: IntFilter<"post"> | number
    comment_count?: IntFilter<"post"> | number
    is_blinded?: BoolFilter<"post"> | boolean
    is_deleted?: BoolFilter<"post"> | boolean
    created_at?: DateTimeFilter<"post"> | Date | string
    updated_at?: DateTimeNullableFilter<"post"> | Date | string | null
    comment?: CommentListRelationFilter
    feed_cache?: Feed_cacheListRelationFilter
    notification?: NotificationListRelationFilter
    community?: XOR<CommunityScalarRelationFilter, communityWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    post_file?: Post_fileListRelationFilter
    post_like?: Post_likeListRelationFilter
    post_reaction?: Post_reactionListRelationFilter
    post_tag?: Post_tagListRelationFilter
  }

  export type postOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    title?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    visibility?: SortOrder
    view_count?: SortOrder
    comment_count?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    comment?: commentOrderByRelationAggregateInput
    feed_cache?: feed_cacheOrderByRelationAggregateInput
    notification?: notificationOrderByRelationAggregateInput
    community?: communityOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    post_file?: post_fileOrderByRelationAggregateInput
    post_like?: post_likeOrderByRelationAggregateInput
    post_reaction?: post_reactionOrderByRelationAggregateInput
    post_tag?: post_tagOrderByRelationAggregateInput
    _relevance?: postOrderByRelevanceInput
  }

  export type postWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: postWhereInput | postWhereInput[]
    OR?: postWhereInput[]
    NOT?: postWhereInput | postWhereInput[]
    user_id?: IntFilter<"post"> | number
    community_id?: IntFilter<"post"> | number
    title?: StringNullableFilter<"post"> | string | null
    content?: StringNullableFilter<"post"> | string | null
    is_anonymous?: BoolFilter<"post"> | boolean
    visibility?: Enumpost_visibilityFilter<"post"> | $Enums.post_visibility
    view_count?: IntFilter<"post"> | number
    comment_count?: IntFilter<"post"> | number
    is_blinded?: BoolFilter<"post"> | boolean
    is_deleted?: BoolFilter<"post"> | boolean
    created_at?: DateTimeFilter<"post"> | Date | string
    updated_at?: DateTimeNullableFilter<"post"> | Date | string | null
    comment?: CommentListRelationFilter
    feed_cache?: Feed_cacheListRelationFilter
    notification?: NotificationListRelationFilter
    community?: XOR<CommunityScalarRelationFilter, communityWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    post_file?: Post_fileListRelationFilter
    post_like?: Post_likeListRelationFilter
    post_reaction?: Post_reactionListRelationFilter
    post_tag?: Post_tagListRelationFilter
  }, "id">

  export type postOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    title?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    visibility?: SortOrder
    view_count?: SortOrder
    comment_count?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: postCountOrderByAggregateInput
    _avg?: postAvgOrderByAggregateInput
    _max?: postMaxOrderByAggregateInput
    _min?: postMinOrderByAggregateInput
    _sum?: postSumOrderByAggregateInput
  }

  export type postScalarWhereWithAggregatesInput = {
    AND?: postScalarWhereWithAggregatesInput | postScalarWhereWithAggregatesInput[]
    OR?: postScalarWhereWithAggregatesInput[]
    NOT?: postScalarWhereWithAggregatesInput | postScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"post"> | number
    user_id?: IntWithAggregatesFilter<"post"> | number
    community_id?: IntWithAggregatesFilter<"post"> | number
    title?: StringNullableWithAggregatesFilter<"post"> | string | null
    content?: StringNullableWithAggregatesFilter<"post"> | string | null
    is_anonymous?: BoolWithAggregatesFilter<"post"> | boolean
    visibility?: Enumpost_visibilityWithAggregatesFilter<"post"> | $Enums.post_visibility
    view_count?: IntWithAggregatesFilter<"post"> | number
    comment_count?: IntWithAggregatesFilter<"post"> | number
    is_blinded?: BoolWithAggregatesFilter<"post"> | boolean
    is_deleted?: BoolWithAggregatesFilter<"post"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"post"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"post"> | Date | string | null
  }

  export type post_fileWhereInput = {
    AND?: post_fileWhereInput | post_fileWhereInput[]
    OR?: post_fileWhereInput[]
    NOT?: post_fileWhereInput | post_fileWhereInput[]
    id?: IntFilter<"post_file"> | number
    post_id?: IntFilter<"post_file"> | number
    file_url?: StringNullableFilter<"post_file"> | string | null
    file_type?: StringNullableFilter<"post_file"> | string | null
    is_thumbnail?: BoolFilter<"post_file"> | boolean
    uploaded_at?: DateTimeFilter<"post_file"> | Date | string
    file_report?: File_reportListRelationFilter
    post?: XOR<PostScalarRelationFilter, postWhereInput>
  }

  export type post_fileOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrder
    file_url?: SortOrderInput | SortOrder
    file_type?: SortOrderInput | SortOrder
    is_thumbnail?: SortOrder
    uploaded_at?: SortOrder
    file_report?: file_reportOrderByRelationAggregateInput
    post?: postOrderByWithRelationInput
    _relevance?: post_fileOrderByRelevanceInput
  }

  export type post_fileWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: post_fileWhereInput | post_fileWhereInput[]
    OR?: post_fileWhereInput[]
    NOT?: post_fileWhereInput | post_fileWhereInput[]
    post_id?: IntFilter<"post_file"> | number
    file_url?: StringNullableFilter<"post_file"> | string | null
    file_type?: StringNullableFilter<"post_file"> | string | null
    is_thumbnail?: BoolFilter<"post_file"> | boolean
    uploaded_at?: DateTimeFilter<"post_file"> | Date | string
    file_report?: File_reportListRelationFilter
    post?: XOR<PostScalarRelationFilter, postWhereInput>
  }, "id">

  export type post_fileOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrder
    file_url?: SortOrderInput | SortOrder
    file_type?: SortOrderInput | SortOrder
    is_thumbnail?: SortOrder
    uploaded_at?: SortOrder
    _count?: post_fileCountOrderByAggregateInput
    _avg?: post_fileAvgOrderByAggregateInput
    _max?: post_fileMaxOrderByAggregateInput
    _min?: post_fileMinOrderByAggregateInput
    _sum?: post_fileSumOrderByAggregateInput
  }

  export type post_fileScalarWhereWithAggregatesInput = {
    AND?: post_fileScalarWhereWithAggregatesInput | post_fileScalarWhereWithAggregatesInput[]
    OR?: post_fileScalarWhereWithAggregatesInput[]
    NOT?: post_fileScalarWhereWithAggregatesInput | post_fileScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"post_file"> | number
    post_id?: IntWithAggregatesFilter<"post_file"> | number
    file_url?: StringNullableWithAggregatesFilter<"post_file"> | string | null
    file_type?: StringNullableWithAggregatesFilter<"post_file"> | string | null
    is_thumbnail?: BoolWithAggregatesFilter<"post_file"> | boolean
    uploaded_at?: DateTimeWithAggregatesFilter<"post_file"> | Date | string
  }

  export type post_likeWhereInput = {
    AND?: post_likeWhereInput | post_likeWhereInput[]
    OR?: post_likeWhereInput[]
    NOT?: post_likeWhereInput | post_likeWhereInput[]
    id?: IntFilter<"post_like"> | number
    post_id?: IntFilter<"post_like"> | number
    user_id?: IntFilter<"post_like"> | number
    created_at?: DateTimeFilter<"post_like"> | Date | string
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type post_likeOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    post?: postOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type post_likeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    post_id_user_id?: post_likePost_idUser_idCompoundUniqueInput
    AND?: post_likeWhereInput | post_likeWhereInput[]
    OR?: post_likeWhereInput[]
    NOT?: post_likeWhereInput | post_likeWhereInput[]
    post_id?: IntFilter<"post_like"> | number
    user_id?: IntFilter<"post_like"> | number
    created_at?: DateTimeFilter<"post_like"> | Date | string
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "post_id_user_id">

  export type post_likeOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    _count?: post_likeCountOrderByAggregateInput
    _avg?: post_likeAvgOrderByAggregateInput
    _max?: post_likeMaxOrderByAggregateInput
    _min?: post_likeMinOrderByAggregateInput
    _sum?: post_likeSumOrderByAggregateInput
  }

  export type post_likeScalarWhereWithAggregatesInput = {
    AND?: post_likeScalarWhereWithAggregatesInput | post_likeScalarWhereWithAggregatesInput[]
    OR?: post_likeScalarWhereWithAggregatesInput[]
    NOT?: post_likeScalarWhereWithAggregatesInput | post_likeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"post_like"> | number
    post_id?: IntWithAggregatesFilter<"post_like"> | number
    user_id?: IntWithAggregatesFilter<"post_like"> | number
    created_at?: DateTimeWithAggregatesFilter<"post_like"> | Date | string
  }

  export type post_reactionWhereInput = {
    AND?: post_reactionWhereInput | post_reactionWhereInput[]
    OR?: post_reactionWhereInput[]
    NOT?: post_reactionWhereInput | post_reactionWhereInput[]
    post_id?: IntFilter<"post_reaction"> | number
    user_id?: IntFilter<"post_reaction"> | number
    emoji_id?: IntFilter<"post_reaction"> | number
    created_at?: DateTimeFilter<"post_reaction"> | Date | string
    emoji?: XOR<EmojiScalarRelationFilter, emojiWhereInput>
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type post_reactionOrderByWithRelationInput = {
    post_id?: SortOrder
    user_id?: SortOrder
    emoji_id?: SortOrder
    created_at?: SortOrder
    emoji?: emojiOrderByWithRelationInput
    post?: postOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type post_reactionWhereUniqueInput = Prisma.AtLeast<{
    post_id_user_id_emoji_id?: post_reactionPost_idUser_idEmoji_idCompoundUniqueInput
    AND?: post_reactionWhereInput | post_reactionWhereInput[]
    OR?: post_reactionWhereInput[]
    NOT?: post_reactionWhereInput | post_reactionWhereInput[]
    post_id?: IntFilter<"post_reaction"> | number
    user_id?: IntFilter<"post_reaction"> | number
    emoji_id?: IntFilter<"post_reaction"> | number
    created_at?: DateTimeFilter<"post_reaction"> | Date | string
    emoji?: XOR<EmojiScalarRelationFilter, emojiWhereInput>
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "post_id_user_id_emoji_id">

  export type post_reactionOrderByWithAggregationInput = {
    post_id?: SortOrder
    user_id?: SortOrder
    emoji_id?: SortOrder
    created_at?: SortOrder
    _count?: post_reactionCountOrderByAggregateInput
    _avg?: post_reactionAvgOrderByAggregateInput
    _max?: post_reactionMaxOrderByAggregateInput
    _min?: post_reactionMinOrderByAggregateInput
    _sum?: post_reactionSumOrderByAggregateInput
  }

  export type post_reactionScalarWhereWithAggregatesInput = {
    AND?: post_reactionScalarWhereWithAggregatesInput | post_reactionScalarWhereWithAggregatesInput[]
    OR?: post_reactionScalarWhereWithAggregatesInput[]
    NOT?: post_reactionScalarWhereWithAggregatesInput | post_reactionScalarWhereWithAggregatesInput[]
    post_id?: IntWithAggregatesFilter<"post_reaction"> | number
    user_id?: IntWithAggregatesFilter<"post_reaction"> | number
    emoji_id?: IntWithAggregatesFilter<"post_reaction"> | number
    created_at?: DateTimeWithAggregatesFilter<"post_reaction"> | Date | string
  }

  export type post_tagWhereInput = {
    AND?: post_tagWhereInput | post_tagWhereInput[]
    OR?: post_tagWhereInput[]
    NOT?: post_tagWhereInput | post_tagWhereInput[]
    post_id?: IntFilter<"post_tag"> | number
    tag_id?: IntFilter<"post_tag"> | number
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    tag?: XOR<TagScalarRelationFilter, tagWhereInput>
  }

  export type post_tagOrderByWithRelationInput = {
    post_id?: SortOrder
    tag_id?: SortOrder
    post?: postOrderByWithRelationInput
    tag?: tagOrderByWithRelationInput
  }

  export type post_tagWhereUniqueInput = Prisma.AtLeast<{
    post_id_tag_id?: post_tagPost_idTag_idCompoundUniqueInput
    AND?: post_tagWhereInput | post_tagWhereInput[]
    OR?: post_tagWhereInput[]
    NOT?: post_tagWhereInput | post_tagWhereInput[]
    post_id?: IntFilter<"post_tag"> | number
    tag_id?: IntFilter<"post_tag"> | number
    post?: XOR<PostScalarRelationFilter, postWhereInput>
    tag?: XOR<TagScalarRelationFilter, tagWhereInput>
  }, "post_id_tag_id">

  export type post_tagOrderByWithAggregationInput = {
    post_id?: SortOrder
    tag_id?: SortOrder
    _count?: post_tagCountOrderByAggregateInput
    _avg?: post_tagAvgOrderByAggregateInput
    _max?: post_tagMaxOrderByAggregateInput
    _min?: post_tagMinOrderByAggregateInput
    _sum?: post_tagSumOrderByAggregateInput
  }

  export type post_tagScalarWhereWithAggregatesInput = {
    AND?: post_tagScalarWhereWithAggregatesInput | post_tagScalarWhereWithAggregatesInput[]
    OR?: post_tagScalarWhereWithAggregatesInput[]
    NOT?: post_tagScalarWhereWithAggregatesInput | post_tagScalarWhereWithAggregatesInput[]
    post_id?: IntWithAggregatesFilter<"post_tag"> | number
    tag_id?: IntWithAggregatesFilter<"post_tag"> | number
  }

  export type profile_visitWhereInput = {
    AND?: profile_visitWhereInput | profile_visitWhereInput[]
    OR?: profile_visitWhereInput[]
    NOT?: profile_visitWhereInput | profile_visitWhereInput[]
    id?: IntFilter<"profile_visit"> | number
    visitor_id?: IntFilter<"profile_visit"> | number
    profile_user_id?: IntFilter<"profile_visit"> | number
    visited_at?: DateTimeFilter<"profile_visit"> | Date | string
    user_profile_visit_profile_user_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
    user_profile_visit_visitor_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type profile_visitOrderByWithRelationInput = {
    id?: SortOrder
    visitor_id?: SortOrder
    profile_user_id?: SortOrder
    visited_at?: SortOrder
    user_profile_visit_profile_user_idTouser?: userOrderByWithRelationInput
    user_profile_visit_visitor_idTouser?: userOrderByWithRelationInput
  }

  export type profile_visitWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: profile_visitWhereInput | profile_visitWhereInput[]
    OR?: profile_visitWhereInput[]
    NOT?: profile_visitWhereInput | profile_visitWhereInput[]
    visitor_id?: IntFilter<"profile_visit"> | number
    profile_user_id?: IntFilter<"profile_visit"> | number
    visited_at?: DateTimeFilter<"profile_visit"> | Date | string
    user_profile_visit_profile_user_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
    user_profile_visit_visitor_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type profile_visitOrderByWithAggregationInput = {
    id?: SortOrder
    visitor_id?: SortOrder
    profile_user_id?: SortOrder
    visited_at?: SortOrder
    _count?: profile_visitCountOrderByAggregateInput
    _avg?: profile_visitAvgOrderByAggregateInput
    _max?: profile_visitMaxOrderByAggregateInput
    _min?: profile_visitMinOrderByAggregateInput
    _sum?: profile_visitSumOrderByAggregateInput
  }

  export type profile_visitScalarWhereWithAggregatesInput = {
    AND?: profile_visitScalarWhereWithAggregatesInput | profile_visitScalarWhereWithAggregatesInput[]
    OR?: profile_visitScalarWhereWithAggregatesInput[]
    NOT?: profile_visitScalarWhereWithAggregatesInput | profile_visitScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"profile_visit"> | number
    visitor_id?: IntWithAggregatesFilter<"profile_visit"> | number
    profile_user_id?: IntWithAggregatesFilter<"profile_visit"> | number
    visited_at?: DateTimeWithAggregatesFilter<"profile_visit"> | Date | string
  }

  export type reportWhereInput = {
    AND?: reportWhereInput | reportWhereInput[]
    OR?: reportWhereInput[]
    NOT?: reportWhereInput | reportWhereInput[]
    id?: IntFilter<"report"> | number
    reporter_id?: IntFilter<"report"> | number
    target_type?: Enumreport_target_typeFilter<"report"> | $Enums.report_target_type
    target_id?: IntFilter<"report"> | number
    reason?: StringNullableFilter<"report"> | string | null
    created_at?: DateTimeFilter<"report"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type reportOrderByWithRelationInput = {
    id?: SortOrder
    reporter_id?: SortOrder
    target_type?: SortOrder
    target_id?: SortOrder
    reason?: SortOrderInput | SortOrder
    created_at?: SortOrder
    user?: userOrderByWithRelationInput
    _relevance?: reportOrderByRelevanceInput
  }

  export type reportWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: reportWhereInput | reportWhereInput[]
    OR?: reportWhereInput[]
    NOT?: reportWhereInput | reportWhereInput[]
    reporter_id?: IntFilter<"report"> | number
    target_type?: Enumreport_target_typeFilter<"report"> | $Enums.report_target_type
    target_id?: IntFilter<"report"> | number
    reason?: StringNullableFilter<"report"> | string | null
    created_at?: DateTimeFilter<"report"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type reportOrderByWithAggregationInput = {
    id?: SortOrder
    reporter_id?: SortOrder
    target_type?: SortOrder
    target_id?: SortOrder
    reason?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: reportCountOrderByAggregateInput
    _avg?: reportAvgOrderByAggregateInput
    _max?: reportMaxOrderByAggregateInput
    _min?: reportMinOrderByAggregateInput
    _sum?: reportSumOrderByAggregateInput
  }

  export type reportScalarWhereWithAggregatesInput = {
    AND?: reportScalarWhereWithAggregatesInput | reportScalarWhereWithAggregatesInput[]
    OR?: reportScalarWhereWithAggregatesInput[]
    NOT?: reportScalarWhereWithAggregatesInput | reportScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"report"> | number
    reporter_id?: IntWithAggregatesFilter<"report"> | number
    target_type?: Enumreport_target_typeWithAggregatesFilter<"report"> | $Enums.report_target_type
    target_id?: IntWithAggregatesFilter<"report"> | number
    reason?: StringNullableWithAggregatesFilter<"report"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"report"> | Date | string
  }

  export type search_historyWhereInput = {
    AND?: search_historyWhereInput | search_historyWhereInput[]
    OR?: search_historyWhereInput[]
    NOT?: search_historyWhereInput | search_historyWhereInput[]
    id?: IntFilter<"search_history"> | number
    user_id?: IntFilter<"search_history"> | number
    keyword?: StringFilter<"search_history"> | string
    searched_at?: DateTimeFilter<"search_history"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type search_historyOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    keyword?: SortOrder
    searched_at?: SortOrder
    user?: userOrderByWithRelationInput
    _relevance?: search_historyOrderByRelevanceInput
  }

  export type search_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: search_historyWhereInput | search_historyWhereInput[]
    OR?: search_historyWhereInput[]
    NOT?: search_historyWhereInput | search_historyWhereInput[]
    user_id?: IntFilter<"search_history"> | number
    keyword?: StringFilter<"search_history"> | string
    searched_at?: DateTimeFilter<"search_history"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type search_historyOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    keyword?: SortOrder
    searched_at?: SortOrder
    _count?: search_historyCountOrderByAggregateInput
    _avg?: search_historyAvgOrderByAggregateInput
    _max?: search_historyMaxOrderByAggregateInput
    _min?: search_historyMinOrderByAggregateInput
    _sum?: search_historySumOrderByAggregateInput
  }

  export type search_historyScalarWhereWithAggregatesInput = {
    AND?: search_historyScalarWhereWithAggregatesInput | search_historyScalarWhereWithAggregatesInput[]
    OR?: search_historyScalarWhereWithAggregatesInput[]
    NOT?: search_historyScalarWhereWithAggregatesInput | search_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"search_history"> | number
    user_id?: IntWithAggregatesFilter<"search_history"> | number
    keyword?: StringWithAggregatesFilter<"search_history"> | string
    searched_at?: DateTimeWithAggregatesFilter<"search_history"> | Date | string
  }

  export type tagWhereInput = {
    AND?: tagWhereInput | tagWhereInput[]
    OR?: tagWhereInput[]
    NOT?: tagWhereInput | tagWhereInput[]
    id?: IntFilter<"tag"> | number
    name?: StringFilter<"tag"> | string
    post_tag?: Post_tagListRelationFilter
  }

  export type tagOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    post_tag?: post_tagOrderByRelationAggregateInput
    _relevance?: tagOrderByRelevanceInput
  }

  export type tagWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: tagWhereInput | tagWhereInput[]
    OR?: tagWhereInput[]
    NOT?: tagWhereInput | tagWhereInput[]
    post_tag?: Post_tagListRelationFilter
  }, "id" | "name">

  export type tagOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: tagCountOrderByAggregateInput
    _avg?: tagAvgOrderByAggregateInput
    _max?: tagMaxOrderByAggregateInput
    _min?: tagMinOrderByAggregateInput
    _sum?: tagSumOrderByAggregateInput
  }

  export type tagScalarWhereWithAggregatesInput = {
    AND?: tagScalarWhereWithAggregatesInput | tagScalarWhereWithAggregatesInput[]
    OR?: tagScalarWhereWithAggregatesInput[]
    NOT?: tagScalarWhereWithAggregatesInput | tagScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tag"> | number
    name?: StringWithAggregatesFilter<"tag"> | string
  }

  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    id?: IntFilter<"user"> | number
    username?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    email?: StringFilter<"user"> | string
    name?: StringNullableFilter<"user"> | string | null
    nickname?: StringNullableFilter<"user"> | string | null
    profile_img?: StringNullableFilter<"user"> | string | null
    bio?: StringNullableFilter<"user"> | string | null
    gender?: StringNullableFilter<"user"> | string | null
    email_verified?: BoolFilter<"user"> | boolean
    status?: Enumuser_statusFilter<"user"> | $Enums.user_status
    website?: StringNullableFilter<"user"> | string | null
    location?: StringNullableFilter<"user"> | string | null
    birthday?: DateTimeNullableFilter<"user"> | Date | string | null
    oauth_provider?: StringNullableFilter<"user"> | string | null
    oauth_id?: StringNullableFilter<"user"> | string | null
    created_at?: DateTimeFilter<"user"> | Date | string
    chat_message?: Chat_messageListRelationFilter
    chat_room_user?: Chat_room_userListRelationFilter
    comment?: CommentListRelationFilter
    comment_like?: Comment_likeListRelationFilter
    community?: CommunityListRelationFilter
    feed_cache?: Feed_cacheListRelationFilter
    file_report?: File_reportListRelationFilter
    follow_follow_follower_idTouser?: FollowListRelationFilter
    follow_follow_following_idTouser?: FollowListRelationFilter
    notification_notification_source_user_idTouser?: NotificationListRelationFilter
    notification_notification_user_idTouser?: NotificationListRelationFilter
    post?: PostListRelationFilter
    post_like?: Post_likeListRelationFilter
    post_reaction?: Post_reactionListRelationFilter
    profile_visit_profile_visit_profile_user_idTouser?: Profile_visitListRelationFilter
    profile_visit_profile_visit_visitor_idTouser?: Profile_visitListRelationFilter
    report?: ReportListRelationFilter
    search_history?: Search_historyListRelationFilter
    user_block_user_block_blocked_user_idTouser?: User_blockListRelationFilter
    user_block_user_block_user_idTouser?: User_blockListRelationFilter
    user_oauth?: XOR<User_oauthNullableScalarRelationFilter, user_oauthWhereInput> | null
    user_profile?: XOR<User_profileNullableScalarRelationFilter, user_profileWhereInput> | null
    user_security?: XOR<User_securityNullableScalarRelationFilter, user_securityWhereInput> | null
  }

  export type userOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    nickname?: SortOrderInput | SortOrder
    profile_img?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    email_verified?: SortOrder
    status?: SortOrder
    website?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    birthday?: SortOrderInput | SortOrder
    oauth_provider?: SortOrderInput | SortOrder
    oauth_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    chat_message?: chat_messageOrderByRelationAggregateInput
    chat_room_user?: chat_room_userOrderByRelationAggregateInput
    comment?: commentOrderByRelationAggregateInput
    comment_like?: comment_likeOrderByRelationAggregateInput
    community?: communityOrderByRelationAggregateInput
    feed_cache?: feed_cacheOrderByRelationAggregateInput
    file_report?: file_reportOrderByRelationAggregateInput
    follow_follow_follower_idTouser?: followOrderByRelationAggregateInput
    follow_follow_following_idTouser?: followOrderByRelationAggregateInput
    notification_notification_source_user_idTouser?: notificationOrderByRelationAggregateInput
    notification_notification_user_idTouser?: notificationOrderByRelationAggregateInput
    post?: postOrderByRelationAggregateInput
    post_like?: post_likeOrderByRelationAggregateInput
    post_reaction?: post_reactionOrderByRelationAggregateInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitOrderByRelationAggregateInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitOrderByRelationAggregateInput
    report?: reportOrderByRelationAggregateInput
    search_history?: search_historyOrderByRelationAggregateInput
    user_block_user_block_blocked_user_idTouser?: user_blockOrderByRelationAggregateInput
    user_block_user_block_user_idTouser?: user_blockOrderByRelationAggregateInput
    user_oauth?: user_oauthOrderByWithRelationInput
    user_profile?: user_profileOrderByWithRelationInput
    user_security?: user_securityOrderByWithRelationInput
    _relevance?: userOrderByRelevanceInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    email?: string
    nickname?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    password?: StringFilter<"user"> | string
    name?: StringNullableFilter<"user"> | string | null
    profile_img?: StringNullableFilter<"user"> | string | null
    bio?: StringNullableFilter<"user"> | string | null
    gender?: StringNullableFilter<"user"> | string | null
    email_verified?: BoolFilter<"user"> | boolean
    status?: Enumuser_statusFilter<"user"> | $Enums.user_status
    website?: StringNullableFilter<"user"> | string | null
    location?: StringNullableFilter<"user"> | string | null
    birthday?: DateTimeNullableFilter<"user"> | Date | string | null
    oauth_provider?: StringNullableFilter<"user"> | string | null
    oauth_id?: StringNullableFilter<"user"> | string | null
    created_at?: DateTimeFilter<"user"> | Date | string
    chat_message?: Chat_messageListRelationFilter
    chat_room_user?: Chat_room_userListRelationFilter
    comment?: CommentListRelationFilter
    comment_like?: Comment_likeListRelationFilter
    community?: CommunityListRelationFilter
    feed_cache?: Feed_cacheListRelationFilter
    file_report?: File_reportListRelationFilter
    follow_follow_follower_idTouser?: FollowListRelationFilter
    follow_follow_following_idTouser?: FollowListRelationFilter
    notification_notification_source_user_idTouser?: NotificationListRelationFilter
    notification_notification_user_idTouser?: NotificationListRelationFilter
    post?: PostListRelationFilter
    post_like?: Post_likeListRelationFilter
    post_reaction?: Post_reactionListRelationFilter
    profile_visit_profile_visit_profile_user_idTouser?: Profile_visitListRelationFilter
    profile_visit_profile_visit_visitor_idTouser?: Profile_visitListRelationFilter
    report?: ReportListRelationFilter
    search_history?: Search_historyListRelationFilter
    user_block_user_block_blocked_user_idTouser?: User_blockListRelationFilter
    user_block_user_block_user_idTouser?: User_blockListRelationFilter
    user_oauth?: XOR<User_oauthNullableScalarRelationFilter, user_oauthWhereInput> | null
    user_profile?: XOR<User_profileNullableScalarRelationFilter, user_profileWhereInput> | null
    user_security?: XOR<User_securityNullableScalarRelationFilter, user_securityWhereInput> | null
  }, "id" | "username" | "email" | "nickname">

  export type userOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    nickname?: SortOrderInput | SortOrder
    profile_img?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    email_verified?: SortOrder
    status?: SortOrder
    website?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    birthday?: SortOrderInput | SortOrder
    oauth_provider?: SortOrderInput | SortOrder
    oauth_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: userCountOrderByAggregateInput
    _avg?: userAvgOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
    _sum?: userSumOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user"> | number
    username?: StringWithAggregatesFilter<"user"> | string
    password?: StringWithAggregatesFilter<"user"> | string
    email?: StringWithAggregatesFilter<"user"> | string
    name?: StringNullableWithAggregatesFilter<"user"> | string | null
    nickname?: StringNullableWithAggregatesFilter<"user"> | string | null
    profile_img?: StringNullableWithAggregatesFilter<"user"> | string | null
    bio?: StringNullableWithAggregatesFilter<"user"> | string | null
    gender?: StringNullableWithAggregatesFilter<"user"> | string | null
    email_verified?: BoolWithAggregatesFilter<"user"> | boolean
    status?: Enumuser_statusWithAggregatesFilter<"user"> | $Enums.user_status
    website?: StringNullableWithAggregatesFilter<"user"> | string | null
    location?: StringNullableWithAggregatesFilter<"user"> | string | null
    birthday?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    oauth_provider?: StringNullableWithAggregatesFilter<"user"> | string | null
    oauth_id?: StringNullableWithAggregatesFilter<"user"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"user"> | Date | string
  }

  export type user_blockWhereInput = {
    AND?: user_blockWhereInput | user_blockWhereInput[]
    OR?: user_blockWhereInput[]
    NOT?: user_blockWhereInput | user_blockWhereInput[]
    id?: IntFilter<"user_block"> | number
    user_id?: IntFilter<"user_block"> | number
    blocked_user_id?: IntFilter<"user_block"> | number
    created_at?: DateTimeFilter<"user_block"> | Date | string
    user_user_block_blocked_user_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
    user_user_block_user_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_blockOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    blocked_user_id?: SortOrder
    created_at?: SortOrder
    user_user_block_blocked_user_idTouser?: userOrderByWithRelationInput
    user_user_block_user_idTouser?: userOrderByWithRelationInput
  }

  export type user_blockWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id_blocked_user_id?: user_blockUser_idBlocked_user_idCompoundUniqueInput
    AND?: user_blockWhereInput | user_blockWhereInput[]
    OR?: user_blockWhereInput[]
    NOT?: user_blockWhereInput | user_blockWhereInput[]
    user_id?: IntFilter<"user_block"> | number
    blocked_user_id?: IntFilter<"user_block"> | number
    created_at?: DateTimeFilter<"user_block"> | Date | string
    user_user_block_blocked_user_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
    user_user_block_user_idTouser?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "user_id_blocked_user_id">

  export type user_blockOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    blocked_user_id?: SortOrder
    created_at?: SortOrder
    _count?: user_blockCountOrderByAggregateInput
    _avg?: user_blockAvgOrderByAggregateInput
    _max?: user_blockMaxOrderByAggregateInput
    _min?: user_blockMinOrderByAggregateInput
    _sum?: user_blockSumOrderByAggregateInput
  }

  export type user_blockScalarWhereWithAggregatesInput = {
    AND?: user_blockScalarWhereWithAggregatesInput | user_blockScalarWhereWithAggregatesInput[]
    OR?: user_blockScalarWhereWithAggregatesInput[]
    NOT?: user_blockScalarWhereWithAggregatesInput | user_blockScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_block"> | number
    user_id?: IntWithAggregatesFilter<"user_block"> | number
    blocked_user_id?: IntWithAggregatesFilter<"user_block"> | number
    created_at?: DateTimeWithAggregatesFilter<"user_block"> | Date | string
  }

  export type user_oauthWhereInput = {
    AND?: user_oauthWhereInput | user_oauthWhereInput[]
    OR?: user_oauthWhereInput[]
    NOT?: user_oauthWhereInput | user_oauthWhereInput[]
    user_id?: IntFilter<"user_oauth"> | number
    oauth_provider?: StringNullableFilter<"user_oauth"> | string | null
    oauth_id?: StringNullableFilter<"user_oauth"> | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_oauthOrderByWithRelationInput = {
    user_id?: SortOrder
    oauth_provider?: SortOrderInput | SortOrder
    oauth_id?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
    _relevance?: user_oauthOrderByRelevanceInput
  }

  export type user_oauthWhereUniqueInput = Prisma.AtLeast<{
    user_id?: number
    AND?: user_oauthWhereInput | user_oauthWhereInput[]
    OR?: user_oauthWhereInput[]
    NOT?: user_oauthWhereInput | user_oauthWhereInput[]
    oauth_provider?: StringNullableFilter<"user_oauth"> | string | null
    oauth_id?: StringNullableFilter<"user_oauth"> | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "user_id">

  export type user_oauthOrderByWithAggregationInput = {
    user_id?: SortOrder
    oauth_provider?: SortOrderInput | SortOrder
    oauth_id?: SortOrderInput | SortOrder
    _count?: user_oauthCountOrderByAggregateInput
    _avg?: user_oauthAvgOrderByAggregateInput
    _max?: user_oauthMaxOrderByAggregateInput
    _min?: user_oauthMinOrderByAggregateInput
    _sum?: user_oauthSumOrderByAggregateInput
  }

  export type user_oauthScalarWhereWithAggregatesInput = {
    AND?: user_oauthScalarWhereWithAggregatesInput | user_oauthScalarWhereWithAggregatesInput[]
    OR?: user_oauthScalarWhereWithAggregatesInput[]
    NOT?: user_oauthScalarWhereWithAggregatesInput | user_oauthScalarWhereWithAggregatesInput[]
    user_id?: IntWithAggregatesFilter<"user_oauth"> | number
    oauth_provider?: StringNullableWithAggregatesFilter<"user_oauth"> | string | null
    oauth_id?: StringNullableWithAggregatesFilter<"user_oauth"> | string | null
  }

  export type user_profileWhereInput = {
    AND?: user_profileWhereInput | user_profileWhereInput[]
    OR?: user_profileWhereInput[]
    NOT?: user_profileWhereInput | user_profileWhereInput[]
    user_id?: IntFilter<"user_profile"> | number
    name?: StringFilter<"user_profile"> | string
    profile_img?: StringNullableFilter<"user_profile"> | string | null
    bio?: StringNullableFilter<"user_profile"> | string | null
    gender?: StringNullableFilter<"user_profile"> | string | null
    website?: StringNullableFilter<"user_profile"> | string | null
    location?: StringNullableFilter<"user_profile"> | string | null
    birthday?: DateTimeNullableFilter<"user_profile"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_profileOrderByWithRelationInput = {
    user_id?: SortOrder
    name?: SortOrder
    profile_img?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    birthday?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
    _relevance?: user_profileOrderByRelevanceInput
  }

  export type user_profileWhereUniqueInput = Prisma.AtLeast<{
    user_id?: number
    AND?: user_profileWhereInput | user_profileWhereInput[]
    OR?: user_profileWhereInput[]
    NOT?: user_profileWhereInput | user_profileWhereInput[]
    name?: StringFilter<"user_profile"> | string
    profile_img?: StringNullableFilter<"user_profile"> | string | null
    bio?: StringNullableFilter<"user_profile"> | string | null
    gender?: StringNullableFilter<"user_profile"> | string | null
    website?: StringNullableFilter<"user_profile"> | string | null
    location?: StringNullableFilter<"user_profile"> | string | null
    birthday?: DateTimeNullableFilter<"user_profile"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "user_id">

  export type user_profileOrderByWithAggregationInput = {
    user_id?: SortOrder
    name?: SortOrder
    profile_img?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    birthday?: SortOrderInput | SortOrder
    _count?: user_profileCountOrderByAggregateInput
    _avg?: user_profileAvgOrderByAggregateInput
    _max?: user_profileMaxOrderByAggregateInput
    _min?: user_profileMinOrderByAggregateInput
    _sum?: user_profileSumOrderByAggregateInput
  }

  export type user_profileScalarWhereWithAggregatesInput = {
    AND?: user_profileScalarWhereWithAggregatesInput | user_profileScalarWhereWithAggregatesInput[]
    OR?: user_profileScalarWhereWithAggregatesInput[]
    NOT?: user_profileScalarWhereWithAggregatesInput | user_profileScalarWhereWithAggregatesInput[]
    user_id?: IntWithAggregatesFilter<"user_profile"> | number
    name?: StringWithAggregatesFilter<"user_profile"> | string
    profile_img?: StringNullableWithAggregatesFilter<"user_profile"> | string | null
    bio?: StringNullableWithAggregatesFilter<"user_profile"> | string | null
    gender?: StringNullableWithAggregatesFilter<"user_profile"> | string | null
    website?: StringNullableWithAggregatesFilter<"user_profile"> | string | null
    location?: StringNullableWithAggregatesFilter<"user_profile"> | string | null
    birthday?: DateTimeNullableWithAggregatesFilter<"user_profile"> | Date | string | null
  }

  export type user_securityWhereInput = {
    AND?: user_securityWhereInput | user_securityWhereInput[]
    OR?: user_securityWhereInput[]
    NOT?: user_securityWhereInput | user_securityWhereInput[]
    user_id?: IntFilter<"user_security"> | number
    email_verified?: BoolFilter<"user_security"> | boolean
    last_login_at?: DateTimeNullableFilter<"user_security"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_securityOrderByWithRelationInput = {
    user_id?: SortOrder
    email_verified?: SortOrder
    last_login_at?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
  }

  export type user_securityWhereUniqueInput = Prisma.AtLeast<{
    user_id?: number
    AND?: user_securityWhereInput | user_securityWhereInput[]
    OR?: user_securityWhereInput[]
    NOT?: user_securityWhereInput | user_securityWhereInput[]
    email_verified?: BoolFilter<"user_security"> | boolean
    last_login_at?: DateTimeNullableFilter<"user_security"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "user_id">

  export type user_securityOrderByWithAggregationInput = {
    user_id?: SortOrder
    email_verified?: SortOrder
    last_login_at?: SortOrderInput | SortOrder
    _count?: user_securityCountOrderByAggregateInput
    _avg?: user_securityAvgOrderByAggregateInput
    _max?: user_securityMaxOrderByAggregateInput
    _min?: user_securityMinOrderByAggregateInput
    _sum?: user_securitySumOrderByAggregateInput
  }

  export type user_securityScalarWhereWithAggregatesInput = {
    AND?: user_securityScalarWhereWithAggregatesInput | user_securityScalarWhereWithAggregatesInput[]
    OR?: user_securityScalarWhereWithAggregatesInput[]
    NOT?: user_securityScalarWhereWithAggregatesInput | user_securityScalarWhereWithAggregatesInput[]
    user_id?: IntWithAggregatesFilter<"user_security"> | number
    email_verified?: BoolWithAggregatesFilter<"user_security"> | boolean
    last_login_at?: DateTimeNullableWithAggregatesFilter<"user_security"> | Date | string | null
  }

  export type chat_messageCreateInput = {
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    chat_room: chat_roomCreateNestedOneWithoutChat_messageInput
    user: userCreateNestedOneWithoutChat_messageInput
    notification?: notificationCreateNestedManyWithoutChat_messageInput
  }

  export type chat_messageUncheckedCreateInput = {
    id?: number
    chatroom_id: number
    sender_id: number
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    notification?: notificationUncheckedCreateNestedManyWithoutChat_messageInput
  }

  export type chat_messageUpdateInput = {
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_room?: chat_roomUpdateOneRequiredWithoutChat_messageNestedInput
    user?: userUpdateOneRequiredWithoutChat_messageNestedInput
    notification?: notificationUpdateManyWithoutChat_messageNestedInput
  }

  export type chat_messageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    chatroom_id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    notification?: notificationUncheckedUpdateManyWithoutChat_messageNestedInput
  }

  export type chat_messageCreateManyInput = {
    id?: number
    chatroom_id: number
    sender_id: number
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
  }

  export type chat_messageUpdateManyMutationInput = {
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_messageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    chatroom_id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_roomCreateInput = {
    name?: string | null
    is_group?: boolean | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutChat_roomInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutChat_roomInput
    notification?: notificationCreateNestedManyWithoutChat_roomInput
  }

  export type chat_roomUncheckedCreateInput = {
    id?: number
    name?: string | null
    is_group?: boolean | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutChat_roomInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutChat_roomInput
    notification?: notificationUncheckedCreateNestedManyWithoutChat_roomInput
  }

  export type chat_roomUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutChat_roomNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutChat_roomNestedInput
    notification?: notificationUpdateManyWithoutChat_roomNestedInput
  }

  export type chat_roomUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutChat_roomNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutChat_roomNestedInput
    notification?: notificationUncheckedUpdateManyWithoutChat_roomNestedInput
  }

  export type chat_roomCreateManyInput = {
    id?: number
    name?: string | null
    is_group?: boolean | null
    created_at?: Date | string
  }

  export type chat_roomUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_roomUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_room_userCreateInput = {
    left_at?: Date | string | null
    chat_room: chat_roomCreateNestedOneWithoutChat_room_userInput
    user: userCreateNestedOneWithoutChat_room_userInput
  }

  export type chat_room_userUncheckedCreateInput = {
    id?: number
    chatroom_id: number
    user_id: number
    left_at?: Date | string | null
  }

  export type chat_room_userUpdateInput = {
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat_room?: chat_roomUpdateOneRequiredWithoutChat_room_userNestedInput
    user?: userUpdateOneRequiredWithoutChat_room_userNestedInput
  }

  export type chat_room_userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    chatroom_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_room_userCreateManyInput = {
    id?: number
    chatroom_id: number
    user_id: number
    left_at?: Date | string | null
  }

  export type chat_room_userUpdateManyMutationInput = {
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_room_userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    chatroom_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type commentCreateInput = {
    content?: string | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedOneWithoutOther_commentInput
    other_comment?: commentCreateNestedManyWithoutCommentInput
    post: postCreateNestedOneWithoutCommentInput
    user: userCreateNestedOneWithoutCommentInput
    comment_like?: comment_likeCreateNestedManyWithoutCommentInput
    notification?: notificationCreateNestedManyWithoutCommentInput
  }

  export type commentUncheckedCreateInput = {
    id?: number
    post_id: number
    user_id: number
    content?: string | null
    parent_id?: number | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    other_comment?: commentUncheckedCreateNestedManyWithoutCommentInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutCommentInput
    notification?: notificationUncheckedCreateNestedManyWithoutCommentInput
  }

  export type commentUpdateInput = {
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateOneWithoutOther_commentNestedInput
    other_comment?: commentUpdateManyWithoutCommentNestedInput
    post?: postUpdateOneRequiredWithoutCommentNestedInput
    user?: userUpdateOneRequiredWithoutCommentNestedInput
    comment_like?: comment_likeUpdateManyWithoutCommentNestedInput
    notification?: notificationUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    other_comment?: commentUncheckedUpdateManyWithoutCommentNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutCommentNestedInput
    notification?: notificationUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type commentCreateManyInput = {
    id?: number
    post_id: number
    user_id: number
    content?: string | null
    parent_id?: number | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type commentUpdateManyMutationInput = {
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type commentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comment_likeCreateInput = {
    created_at?: Date | string
    comment: commentCreateNestedOneWithoutComment_likeInput
    user: userCreateNestedOneWithoutComment_likeInput
  }

  export type comment_likeUncheckedCreateInput = {
    id?: number
    comment_id: number
    user_id: number
    created_at?: Date | string
  }

  export type comment_likeUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    comment?: commentUpdateOneRequiredWithoutComment_likeNestedInput
    user?: userUpdateOneRequiredWithoutComment_likeNestedInput
  }

  export type comment_likeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type comment_likeCreateManyInput = {
    id?: number
    comment_id: number
    user_id: number
    created_at?: Date | string
  }

  export type comment_likeUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type comment_likeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communityCreateInput = {
    name: string
    description?: string | null
    is_private?: boolean
    created_at?: Date | string
    user?: userCreateNestedOneWithoutCommunityInput
    post?: postCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    admin_id?: number | null
    is_private?: boolean
    created_at?: Date | string
    post?: postUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneWithoutCommunityNestedInput
    post?: postUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    admin_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type communityCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    admin_id?: number | null
    is_private?: boolean
    created_at?: Date | string
  }

  export type communityUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communityUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    admin_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type emojiCreateInput = {
    name: string
    post_reaction?: post_reactionCreateNestedManyWithoutEmojiInput
  }

  export type emojiUncheckedCreateInput = {
    id?: number
    name: string
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutEmojiInput
  }

  export type emojiUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    post_reaction?: post_reactionUpdateManyWithoutEmojiNestedInput
  }

  export type emojiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    post_reaction?: post_reactionUncheckedUpdateManyWithoutEmojiNestedInput
  }

  export type emojiCreateManyInput = {
    id?: number
    name: string
  }

  export type emojiUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type emojiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type feed_cacheCreateInput = {
    score: number
    created_at?: Date | string
    post: postCreateNestedOneWithoutFeed_cacheInput
    user: userCreateNestedOneWithoutFeed_cacheInput
  }

  export type feed_cacheUncheckedCreateInput = {
    id?: number
    user_id: number
    post_id: number
    score: number
    created_at?: Date | string
  }

  export type feed_cacheUpdateInput = {
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postUpdateOneRequiredWithoutFeed_cacheNestedInput
    user?: userUpdateOneRequiredWithoutFeed_cacheNestedInput
  }

  export type feed_cacheUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feed_cacheCreateManyInput = {
    id?: number
    user_id: number
    post_id: number
    score: number
    created_at?: Date | string
  }

  export type feed_cacheUpdateManyMutationInput = {
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feed_cacheUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type file_reportCreateInput = {
    reason?: string | null
    created_at?: Date | string
    post_file: post_fileCreateNestedOneWithoutFile_reportInput
    user: userCreateNestedOneWithoutFile_reportInput
  }

  export type file_reportUncheckedCreateInput = {
    id?: number
    file_id: number
    reporter_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type file_reportUpdateInput = {
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_file?: post_fileUpdateOneRequiredWithoutFile_reportNestedInput
    user?: userUpdateOneRequiredWithoutFile_reportNestedInput
  }

  export type file_reportUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    file_id?: IntFieldUpdateOperationsInput | number
    reporter_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type file_reportCreateManyInput = {
    id?: number
    file_id: number
    reporter_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type file_reportUpdateManyMutationInput = {
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type file_reportUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    file_id?: IntFieldUpdateOperationsInput | number
    reporter_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type followCreateInput = {
    created_at?: Date | string
    user_follow_follower_idTouser: userCreateNestedOneWithoutFollow_follow_follower_idTouserInput
    user_follow_following_idTouser: userCreateNestedOneWithoutFollow_follow_following_idTouserInput
  }

  export type followUncheckedCreateInput = {
    follower_id: number
    following_id: number
    created_at?: Date | string
  }

  export type followUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_follow_follower_idTouser?: userUpdateOneRequiredWithoutFollow_follow_follower_idTouserNestedInput
    user_follow_following_idTouser?: userUpdateOneRequiredWithoutFollow_follow_following_idTouserNestedInput
  }

  export type followUncheckedUpdateInput = {
    follower_id?: IntFieldUpdateOperationsInput | number
    following_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type followCreateManyInput = {
    follower_id: number
    following_id: number
    created_at?: Date | string
  }

  export type followUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type followUncheckedUpdateManyInput = {
    follower_id?: IntFieldUpdateOperationsInput | number
    following_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationCreateInput = {
    type: string
    message?: string | null
    is_read?: boolean
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedOneWithoutNotificationInput
    chat_room?: chat_roomCreateNestedOneWithoutNotificationInput
    comment?: commentCreateNestedOneWithoutNotificationInput
    post?: postCreateNestedOneWithoutNotificationInput
    user_notification_source_user_idTouser?: userCreateNestedOneWithoutNotification_notification_source_user_idTouserInput
    user_notification_user_idTouser: userCreateNestedOneWithoutNotification_notification_user_idTouserInput
  }

  export type notificationUncheckedCreateInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type notificationUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateOneWithoutNotificationNestedInput
    chat_room?: chat_roomUpdateOneWithoutNotificationNestedInput
    comment?: commentUpdateOneWithoutNotificationNestedInput
    post?: postUpdateOneWithoutNotificationNestedInput
    user_notification_source_user_idTouser?: userUpdateOneWithoutNotification_notification_source_user_idTouserNestedInput
    user_notification_user_idTouser?: userUpdateOneRequiredWithoutNotification_notification_user_idTouserNestedInput
  }

  export type notificationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationCreateManyInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type notificationUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type postCreateInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheCreateNestedManyWithoutPostInput
    notification?: notificationCreateNestedManyWithoutPostInput
    community: communityCreateNestedOneWithoutPostInput
    user: userCreateNestedOneWithoutPostInput
    post_file?: post_fileCreateNestedManyWithoutPostInput
    post_like?: post_likeCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionCreateNestedManyWithoutPostInput
    post_tag?: post_tagCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateInput = {
    id?: number
    user_id: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentUncheckedCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutPostInput
    notification?: notificationUncheckedCreateNestedManyWithoutPostInput
    post_file?: post_fileUncheckedCreateNestedManyWithoutPostInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutPostInput
    post_tag?: post_tagUncheckedCreateNestedManyWithoutPostInput
  }

  export type postUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutPostNestedInput
    notification?: notificationUpdateManyWithoutPostNestedInput
    community?: communityUpdateOneRequiredWithoutPostNestedInput
    user?: userUpdateOneRequiredWithoutPostNestedInput
    post_file?: post_fileUpdateManyWithoutPostNestedInput
    post_like?: post_likeUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUncheckedUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutPostNestedInput
    notification?: notificationUncheckedUpdateManyWithoutPostNestedInput
    post_file?: post_fileUncheckedUpdateManyWithoutPostNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUncheckedUpdateManyWithoutPostNestedInput
  }

  export type postCreateManyInput = {
    id?: number
    user_id: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type postUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type postUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type post_fileCreateInput = {
    file_url?: string | null
    file_type?: string | null
    is_thumbnail?: boolean
    uploaded_at?: Date | string
    file_report?: file_reportCreateNestedManyWithoutPost_fileInput
    post: postCreateNestedOneWithoutPost_fileInput
  }

  export type post_fileUncheckedCreateInput = {
    id?: number
    post_id: number
    file_url?: string | null
    file_type?: string | null
    is_thumbnail?: boolean
    uploaded_at?: Date | string
    file_report?: file_reportUncheckedCreateNestedManyWithoutPost_fileInput
  }

  export type post_fileUpdateInput = {
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_thumbnail?: BoolFieldUpdateOperationsInput | boolean
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    file_report?: file_reportUpdateManyWithoutPost_fileNestedInput
    post?: postUpdateOneRequiredWithoutPost_fileNestedInput
  }

  export type post_fileUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_thumbnail?: BoolFieldUpdateOperationsInput | boolean
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    file_report?: file_reportUncheckedUpdateManyWithoutPost_fileNestedInput
  }

  export type post_fileCreateManyInput = {
    id?: number
    post_id: number
    file_url?: string | null
    file_type?: string | null
    is_thumbnail?: boolean
    uploaded_at?: Date | string
  }

  export type post_fileUpdateManyMutationInput = {
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_thumbnail?: BoolFieldUpdateOperationsInput | boolean
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_fileUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_thumbnail?: BoolFieldUpdateOperationsInput | boolean
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_likeCreateInput = {
    created_at?: Date | string
    post: postCreateNestedOneWithoutPost_likeInput
    user: userCreateNestedOneWithoutPost_likeInput
  }

  export type post_likeUncheckedCreateInput = {
    id?: number
    post_id: number
    user_id: number
    created_at?: Date | string
  }

  export type post_likeUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postUpdateOneRequiredWithoutPost_likeNestedInput
    user?: userUpdateOneRequiredWithoutPost_likeNestedInput
  }

  export type post_likeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_likeCreateManyInput = {
    id?: number
    post_id: number
    user_id: number
    created_at?: Date | string
  }

  export type post_likeUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_likeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_reactionCreateInput = {
    created_at?: Date | string
    emoji: emojiCreateNestedOneWithoutPost_reactionInput
    post: postCreateNestedOneWithoutPost_reactionInput
    user: userCreateNestedOneWithoutPost_reactionInput
  }

  export type post_reactionUncheckedCreateInput = {
    post_id: number
    user_id: number
    emoji_id: number
    created_at?: Date | string
  }

  export type post_reactionUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    emoji?: emojiUpdateOneRequiredWithoutPost_reactionNestedInput
    post?: postUpdateOneRequiredWithoutPost_reactionNestedInput
    user?: userUpdateOneRequiredWithoutPost_reactionNestedInput
  }

  export type post_reactionUncheckedUpdateInput = {
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    emoji_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_reactionCreateManyInput = {
    post_id: number
    user_id: number
    emoji_id: number
    created_at?: Date | string
  }

  export type post_reactionUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_reactionUncheckedUpdateManyInput = {
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    emoji_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_tagCreateInput = {
    post: postCreateNestedOneWithoutPost_tagInput
    tag: tagCreateNestedOneWithoutPost_tagInput
  }

  export type post_tagUncheckedCreateInput = {
    post_id: number
    tag_id: number
  }

  export type post_tagUpdateInput = {
    post?: postUpdateOneRequiredWithoutPost_tagNestedInput
    tag?: tagUpdateOneRequiredWithoutPost_tagNestedInput
  }

  export type post_tagUncheckedUpdateInput = {
    post_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
  }

  export type post_tagCreateManyInput = {
    post_id: number
    tag_id: number
  }

  export type post_tagUpdateManyMutationInput = {

  }

  export type post_tagUncheckedUpdateManyInput = {
    post_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
  }

  export type profile_visitCreateInput = {
    visited_at?: Date | string
    user_profile_visit_profile_user_idTouser: userCreateNestedOneWithoutProfile_visit_profile_visit_profile_user_idTouserInput
    user_profile_visit_visitor_idTouser: userCreateNestedOneWithoutProfile_visit_profile_visit_visitor_idTouserInput
  }

  export type profile_visitUncheckedCreateInput = {
    id?: number
    visitor_id: number
    profile_user_id: number
    visited_at?: Date | string
  }

  export type profile_visitUpdateInput = {
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_profile_visit_profile_user_idTouser?: userUpdateOneRequiredWithoutProfile_visit_profile_visit_profile_user_idTouserNestedInput
    user_profile_visit_visitor_idTouser?: userUpdateOneRequiredWithoutProfile_visit_profile_visit_visitor_idTouserNestedInput
  }

  export type profile_visitUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    visitor_id?: IntFieldUpdateOperationsInput | number
    profile_user_id?: IntFieldUpdateOperationsInput | number
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type profile_visitCreateManyInput = {
    id?: number
    visitor_id: number
    profile_user_id: number
    visited_at?: Date | string
  }

  export type profile_visitUpdateManyMutationInput = {
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type profile_visitUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    visitor_id?: IntFieldUpdateOperationsInput | number
    profile_user_id?: IntFieldUpdateOperationsInput | number
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reportCreateInput = {
    target_type: $Enums.report_target_type
    target_id: number
    reason?: string | null
    created_at?: Date | string
    user: userCreateNestedOneWithoutReportInput
  }

  export type reportUncheckedCreateInput = {
    id?: number
    reporter_id: number
    target_type: $Enums.report_target_type
    target_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type reportUpdateInput = {
    target_type?: Enumreport_target_typeFieldUpdateOperationsInput | $Enums.report_target_type
    target_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutReportNestedInput
  }

  export type reportUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    reporter_id?: IntFieldUpdateOperationsInput | number
    target_type?: Enumreport_target_typeFieldUpdateOperationsInput | $Enums.report_target_type
    target_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reportCreateManyInput = {
    id?: number
    reporter_id: number
    target_type: $Enums.report_target_type
    target_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type reportUpdateManyMutationInput = {
    target_type?: Enumreport_target_typeFieldUpdateOperationsInput | $Enums.report_target_type
    target_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reportUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    reporter_id?: IntFieldUpdateOperationsInput | number
    target_type?: Enumreport_target_typeFieldUpdateOperationsInput | $Enums.report_target_type
    target_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type search_historyCreateInput = {
    keyword: string
    searched_at?: Date | string
    user: userCreateNestedOneWithoutSearch_historyInput
  }

  export type search_historyUncheckedCreateInput = {
    id?: number
    user_id: number
    keyword: string
    searched_at?: Date | string
  }

  export type search_historyUpdateInput = {
    keyword?: StringFieldUpdateOperationsInput | string
    searched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutSearch_historyNestedInput
  }

  export type search_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    searched_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type search_historyCreateManyInput = {
    id?: number
    user_id: number
    keyword: string
    searched_at?: Date | string
  }

  export type search_historyUpdateManyMutationInput = {
    keyword?: StringFieldUpdateOperationsInput | string
    searched_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type search_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    searched_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tagCreateInput = {
    name: string
    post_tag?: post_tagCreateNestedManyWithoutTagInput
  }

  export type tagUncheckedCreateInput = {
    id?: number
    name: string
    post_tag?: post_tagUncheckedCreateNestedManyWithoutTagInput
  }

  export type tagUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    post_tag?: post_tagUpdateManyWithoutTagNestedInput
  }

  export type tagUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    post_tag?: post_tagUncheckedUpdateManyWithoutTagNestedInput
  }

  export type tagCreateManyInput = {
    id?: number
    name: string
  }

  export type tagUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type tagUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type userCreateInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userCreateManyInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
  }

  export type userUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blockCreateInput = {
    created_at?: Date | string
    user_user_block_blocked_user_idTouser: userCreateNestedOneWithoutUser_block_user_block_blocked_user_idTouserInput
    user_user_block_user_idTouser: userCreateNestedOneWithoutUser_block_user_block_user_idTouserInput
  }

  export type user_blockUncheckedCreateInput = {
    id?: number
    user_id: number
    blocked_user_id: number
    created_at?: Date | string
  }

  export type user_blockUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_user_block_blocked_user_idTouser?: userUpdateOneRequiredWithoutUser_block_user_block_blocked_user_idTouserNestedInput
    user_user_block_user_idTouser?: userUpdateOneRequiredWithoutUser_block_user_block_user_idTouserNestedInput
  }

  export type user_blockUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    blocked_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blockCreateManyInput = {
    id?: number
    user_id: number
    blocked_user_id: number
    created_at?: Date | string
  }

  export type user_blockUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blockUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    blocked_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_oauthCreateInput = {
    oauth_provider?: string | null
    oauth_id?: string | null
    user: userCreateNestedOneWithoutUser_oauthInput
  }

  export type user_oauthUncheckedCreateInput = {
    user_id: number
    oauth_provider?: string | null
    oauth_id?: string | null
  }

  export type user_oauthUpdateInput = {
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    user?: userUpdateOneRequiredWithoutUser_oauthNestedInput
  }

  export type user_oauthUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_oauthCreateManyInput = {
    user_id: number
    oauth_provider?: string | null
    oauth_id?: string | null
  }

  export type user_oauthUpdateManyMutationInput = {
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_oauthUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_profileCreateInput = {
    name: string
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    user: userCreateNestedOneWithoutUser_profileInput
  }

  export type user_profileUncheckedCreateInput = {
    user_id: number
    name: string
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
  }

  export type user_profileUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutUser_profileNestedInput
  }

  export type user_profileUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_profileCreateManyInput = {
    user_id: number
    name: string
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
  }

  export type user_profileUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_profileUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_securityCreateInput = {
    email_verified?: boolean
    last_login_at?: Date | string | null
    user: userCreateNestedOneWithoutUser_securityInput
  }

  export type user_securityUncheckedCreateInput = {
    user_id: number
    email_verified?: boolean
    last_login_at?: Date | string | null
  }

  export type user_securityUpdateInput = {
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutUser_securityNestedInput
  }

  export type user_securityUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_securityCreateManyInput = {
    user_id: number
    email_verified?: boolean
    last_login_at?: Date | string | null
  }

  export type user_securityUpdateManyMutationInput = {
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_securityUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Chat_roomScalarRelationFilter = {
    is?: chat_roomWhereInput
    isNot?: chat_roomWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: notificationWhereInput
    some?: notificationWhereInput
    none?: notificationWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type notificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type chat_messageOrderByRelevanceInput = {
    fields: chat_messageOrderByRelevanceFieldEnum | chat_messageOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type chat_messageCountOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    sender_id?: SortOrder
    message?: SortOrder
    file_url?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
  }

  export type chat_messageAvgOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    sender_id?: SortOrder
  }

  export type chat_messageMaxOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    sender_id?: SortOrder
    message?: SortOrder
    file_url?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
  }

  export type chat_messageMinOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    sender_id?: SortOrder
    message?: SortOrder
    file_url?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
  }

  export type chat_messageSumOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    sender_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type Chat_messageListRelationFilter = {
    every?: chat_messageWhereInput
    some?: chat_messageWhereInput
    none?: chat_messageWhereInput
  }

  export type Chat_room_userListRelationFilter = {
    every?: chat_room_userWhereInput
    some?: chat_room_userWhereInput
    none?: chat_room_userWhereInput
  }

  export type chat_messageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type chat_room_userOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type chat_roomOrderByRelevanceInput = {
    fields: chat_roomOrderByRelevanceFieldEnum | chat_roomOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type chat_roomCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    is_group?: SortOrder
    created_at?: SortOrder
  }

  export type chat_roomAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type chat_roomMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    is_group?: SortOrder
    created_at?: SortOrder
  }

  export type chat_roomMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    is_group?: SortOrder
    created_at?: SortOrder
  }

  export type chat_roomSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type chat_room_userChatroom_idUser_idCompoundUniqueInput = {
    chatroom_id: number
    user_id: number
  }

  export type chat_room_userCountOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    user_id?: SortOrder
    left_at?: SortOrder
  }

  export type chat_room_userAvgOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    user_id?: SortOrder
  }

  export type chat_room_userMaxOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    user_id?: SortOrder
    left_at?: SortOrder
  }

  export type chat_room_userMinOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    user_id?: SortOrder
    left_at?: SortOrder
  }

  export type chat_room_userSumOrderByAggregateInput = {
    id?: SortOrder
    chatroom_id?: SortOrder
    user_id?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type CommentNullableScalarRelationFilter = {
    is?: commentWhereInput | null
    isNot?: commentWhereInput | null
  }

  export type CommentListRelationFilter = {
    every?: commentWhereInput
    some?: commentWhereInput
    none?: commentWhereInput
  }

  export type PostScalarRelationFilter = {
    is?: postWhereInput
    isNot?: postWhereInput
  }

  export type Comment_likeListRelationFilter = {
    every?: comment_likeWhereInput
    some?: comment_likeWhereInput
    none?: comment_likeWhereInput
  }

  export type commentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type comment_likeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type commentOrderByRelevanceInput = {
    fields: commentOrderByRelevanceFieldEnum | commentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type commentCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    parent_id?: SortOrder
    is_anonymous?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type commentAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    parent_id?: SortOrder
  }

  export type commentMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    parent_id?: SortOrder
    is_anonymous?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type commentMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    content?: SortOrder
    parent_id?: SortOrder
    is_anonymous?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type commentSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    parent_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type CommentScalarRelationFilter = {
    is?: commentWhereInput
    isNot?: commentWhereInput
  }

  export type comment_likeComment_idUser_idCompoundUniqueInput = {
    comment_id: number
    user_id: number
  }

  export type comment_likeCountOrderByAggregateInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type comment_likeAvgOrderByAggregateInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
  }

  export type comment_likeMaxOrderByAggregateInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type comment_likeMinOrderByAggregateInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type comment_likeSumOrderByAggregateInput = {
    id?: SortOrder
    comment_id?: SortOrder
    user_id?: SortOrder
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type UserNullableScalarRelationFilter = {
    is?: userWhereInput | null
    isNot?: userWhereInput | null
  }

  export type PostListRelationFilter = {
    every?: postWhereInput
    some?: postWhereInput
    none?: postWhereInput
  }

  export type postOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type communityOrderByRelevanceInput = {
    fields: communityOrderByRelevanceFieldEnum | communityOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type communityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    admin_id?: SortOrder
    is_private?: SortOrder
    created_at?: SortOrder
  }

  export type communityAvgOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
  }

  export type communityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    admin_id?: SortOrder
    is_private?: SortOrder
    created_at?: SortOrder
  }

  export type communityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    admin_id?: SortOrder
    is_private?: SortOrder
    created_at?: SortOrder
  }

  export type communitySumOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type Post_reactionListRelationFilter = {
    every?: post_reactionWhereInput
    some?: post_reactionWhereInput
    none?: post_reactionWhereInput
  }

  export type post_reactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type emojiOrderByRelevanceInput = {
    fields: emojiOrderByRelevanceFieldEnum | emojiOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type emojiCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type emojiAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type emojiMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type emojiMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type emojiSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type feed_cacheCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    score?: SortOrder
    created_at?: SortOrder
  }

  export type feed_cacheAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    score?: SortOrder
  }

  export type feed_cacheMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    score?: SortOrder
    created_at?: SortOrder
  }

  export type feed_cacheMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    score?: SortOrder
    created_at?: SortOrder
  }

  export type feed_cacheSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    score?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type Post_fileScalarRelationFilter = {
    is?: post_fileWhereInput
    isNot?: post_fileWhereInput
  }

  export type file_reportOrderByRelevanceInput = {
    fields: file_reportOrderByRelevanceFieldEnum | file_reportOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type file_reportCountOrderByAggregateInput = {
    id?: SortOrder
    file_id?: SortOrder
    reporter_id?: SortOrder
    reason?: SortOrder
    created_at?: SortOrder
  }

  export type file_reportAvgOrderByAggregateInput = {
    id?: SortOrder
    file_id?: SortOrder
    reporter_id?: SortOrder
  }

  export type file_reportMaxOrderByAggregateInput = {
    id?: SortOrder
    file_id?: SortOrder
    reporter_id?: SortOrder
    reason?: SortOrder
    created_at?: SortOrder
  }

  export type file_reportMinOrderByAggregateInput = {
    id?: SortOrder
    file_id?: SortOrder
    reporter_id?: SortOrder
    reason?: SortOrder
    created_at?: SortOrder
  }

  export type file_reportSumOrderByAggregateInput = {
    id?: SortOrder
    file_id?: SortOrder
    reporter_id?: SortOrder
  }

  export type followFollower_idFollowing_idCompoundUniqueInput = {
    follower_id: number
    following_id: number
  }

  export type followCountOrderByAggregateInput = {
    follower_id?: SortOrder
    following_id?: SortOrder
    created_at?: SortOrder
  }

  export type followAvgOrderByAggregateInput = {
    follower_id?: SortOrder
    following_id?: SortOrder
  }

  export type followMaxOrderByAggregateInput = {
    follower_id?: SortOrder
    following_id?: SortOrder
    created_at?: SortOrder
  }

  export type followMinOrderByAggregateInput = {
    follower_id?: SortOrder
    following_id?: SortOrder
    created_at?: SortOrder
  }

  export type followSumOrderByAggregateInput = {
    follower_id?: SortOrder
    following_id?: SortOrder
  }

  export type Chat_messageNullableScalarRelationFilter = {
    is?: chat_messageWhereInput | null
    isNot?: chat_messageWhereInput | null
  }

  export type Chat_roomNullableScalarRelationFilter = {
    is?: chat_roomWhereInput | null
    isNot?: chat_roomWhereInput | null
  }

  export type PostNullableScalarRelationFilter = {
    is?: postWhereInput | null
    isNot?: postWhereInput | null
  }

  export type notificationOrderByRelevanceInput = {
    fields: notificationOrderByRelevanceFieldEnum | notificationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type notificationCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    is_read?: SortOrder
    source_user_id?: SortOrder
    related_post_id?: SortOrder
    related_comment_id?: SortOrder
    chat_message_id?: SortOrder
    chat_room_id?: SortOrder
    created_at?: SortOrder
  }

  export type notificationAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    source_user_id?: SortOrder
    related_post_id?: SortOrder
    related_comment_id?: SortOrder
    chat_message_id?: SortOrder
    chat_room_id?: SortOrder
  }

  export type notificationMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    is_read?: SortOrder
    source_user_id?: SortOrder
    related_post_id?: SortOrder
    related_comment_id?: SortOrder
    chat_message_id?: SortOrder
    chat_room_id?: SortOrder
    created_at?: SortOrder
  }

  export type notificationMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    is_read?: SortOrder
    source_user_id?: SortOrder
    related_post_id?: SortOrder
    related_comment_id?: SortOrder
    chat_message_id?: SortOrder
    chat_room_id?: SortOrder
    created_at?: SortOrder
  }

  export type notificationSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    source_user_id?: SortOrder
    related_post_id?: SortOrder
    related_comment_id?: SortOrder
    chat_message_id?: SortOrder
    chat_room_id?: SortOrder
  }

  export type Enumpost_visibilityFilter<$PrismaModel = never> = {
    equals?: $Enums.post_visibility | Enumpost_visibilityFieldRefInput<$PrismaModel>
    in?: $Enums.post_visibility[]
    notIn?: $Enums.post_visibility[]
    not?: NestedEnumpost_visibilityFilter<$PrismaModel> | $Enums.post_visibility
  }

  export type Feed_cacheListRelationFilter = {
    every?: feed_cacheWhereInput
    some?: feed_cacheWhereInput
    none?: feed_cacheWhereInput
  }

  export type CommunityScalarRelationFilter = {
    is?: communityWhereInput
    isNot?: communityWhereInput
  }

  export type Post_fileListRelationFilter = {
    every?: post_fileWhereInput
    some?: post_fileWhereInput
    none?: post_fileWhereInput
  }

  export type Post_likeListRelationFilter = {
    every?: post_likeWhereInput
    some?: post_likeWhereInput
    none?: post_likeWhereInput
  }

  export type Post_tagListRelationFilter = {
    every?: post_tagWhereInput
    some?: post_tagWhereInput
    none?: post_tagWhereInput
  }

  export type feed_cacheOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type post_fileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type post_likeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type post_tagOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type postOrderByRelevanceInput = {
    fields: postOrderByRelevanceFieldEnum | postOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type postCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    is_anonymous?: SortOrder
    visibility?: SortOrder
    view_count?: SortOrder
    comment_count?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type postAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    view_count?: SortOrder
    comment_count?: SortOrder
  }

  export type postMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    is_anonymous?: SortOrder
    visibility?: SortOrder
    view_count?: SortOrder
    comment_count?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type postMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    is_anonymous?: SortOrder
    visibility?: SortOrder
    view_count?: SortOrder
    comment_count?: SortOrder
    is_blinded?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type postSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    view_count?: SortOrder
    comment_count?: SortOrder
  }

  export type Enumpost_visibilityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.post_visibility | Enumpost_visibilityFieldRefInput<$PrismaModel>
    in?: $Enums.post_visibility[]
    notIn?: $Enums.post_visibility[]
    not?: NestedEnumpost_visibilityWithAggregatesFilter<$PrismaModel> | $Enums.post_visibility
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpost_visibilityFilter<$PrismaModel>
    _max?: NestedEnumpost_visibilityFilter<$PrismaModel>
  }

  export type File_reportListRelationFilter = {
    every?: file_reportWhereInput
    some?: file_reportWhereInput
    none?: file_reportWhereInput
  }

  export type file_reportOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type post_fileOrderByRelevanceInput = {
    fields: post_fileOrderByRelevanceFieldEnum | post_fileOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type post_fileCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    file_url?: SortOrder
    file_type?: SortOrder
    is_thumbnail?: SortOrder
    uploaded_at?: SortOrder
  }

  export type post_fileAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
  }

  export type post_fileMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    file_url?: SortOrder
    file_type?: SortOrder
    is_thumbnail?: SortOrder
    uploaded_at?: SortOrder
  }

  export type post_fileMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    file_url?: SortOrder
    file_type?: SortOrder
    is_thumbnail?: SortOrder
    uploaded_at?: SortOrder
  }

  export type post_fileSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
  }

  export type post_likePost_idUser_idCompoundUniqueInput = {
    post_id: number
    user_id: number
  }

  export type post_likeCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type post_likeAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
  }

  export type post_likeMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type post_likeMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type post_likeSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
  }

  export type EmojiScalarRelationFilter = {
    is?: emojiWhereInput
    isNot?: emojiWhereInput
  }

  export type post_reactionPost_idUser_idEmoji_idCompoundUniqueInput = {
    post_id: number
    user_id: number
    emoji_id: number
  }

  export type post_reactionCountOrderByAggregateInput = {
    post_id?: SortOrder
    user_id?: SortOrder
    emoji_id?: SortOrder
    created_at?: SortOrder
  }

  export type post_reactionAvgOrderByAggregateInput = {
    post_id?: SortOrder
    user_id?: SortOrder
    emoji_id?: SortOrder
  }

  export type post_reactionMaxOrderByAggregateInput = {
    post_id?: SortOrder
    user_id?: SortOrder
    emoji_id?: SortOrder
    created_at?: SortOrder
  }

  export type post_reactionMinOrderByAggregateInput = {
    post_id?: SortOrder
    user_id?: SortOrder
    emoji_id?: SortOrder
    created_at?: SortOrder
  }

  export type post_reactionSumOrderByAggregateInput = {
    post_id?: SortOrder
    user_id?: SortOrder
    emoji_id?: SortOrder
  }

  export type TagScalarRelationFilter = {
    is?: tagWhereInput
    isNot?: tagWhereInput
  }

  export type post_tagPost_idTag_idCompoundUniqueInput = {
    post_id: number
    tag_id: number
  }

  export type post_tagCountOrderByAggregateInput = {
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type post_tagAvgOrderByAggregateInput = {
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type post_tagMaxOrderByAggregateInput = {
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type post_tagMinOrderByAggregateInput = {
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type post_tagSumOrderByAggregateInput = {
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type profile_visitCountOrderByAggregateInput = {
    id?: SortOrder
    visitor_id?: SortOrder
    profile_user_id?: SortOrder
    visited_at?: SortOrder
  }

  export type profile_visitAvgOrderByAggregateInput = {
    id?: SortOrder
    visitor_id?: SortOrder
    profile_user_id?: SortOrder
  }

  export type profile_visitMaxOrderByAggregateInput = {
    id?: SortOrder
    visitor_id?: SortOrder
    profile_user_id?: SortOrder
    visited_at?: SortOrder
  }

  export type profile_visitMinOrderByAggregateInput = {
    id?: SortOrder
    visitor_id?: SortOrder
    profile_user_id?: SortOrder
    visited_at?: SortOrder
  }

  export type profile_visitSumOrderByAggregateInput = {
    id?: SortOrder
    visitor_id?: SortOrder
    profile_user_id?: SortOrder
  }

  export type Enumreport_target_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.report_target_type | Enumreport_target_typeFieldRefInput<$PrismaModel>
    in?: $Enums.report_target_type[]
    notIn?: $Enums.report_target_type[]
    not?: NestedEnumreport_target_typeFilter<$PrismaModel> | $Enums.report_target_type
  }

  export type reportOrderByRelevanceInput = {
    fields: reportOrderByRelevanceFieldEnum | reportOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type reportCountOrderByAggregateInput = {
    id?: SortOrder
    reporter_id?: SortOrder
    target_type?: SortOrder
    target_id?: SortOrder
    reason?: SortOrder
    created_at?: SortOrder
  }

  export type reportAvgOrderByAggregateInput = {
    id?: SortOrder
    reporter_id?: SortOrder
    target_id?: SortOrder
  }

  export type reportMaxOrderByAggregateInput = {
    id?: SortOrder
    reporter_id?: SortOrder
    target_type?: SortOrder
    target_id?: SortOrder
    reason?: SortOrder
    created_at?: SortOrder
  }

  export type reportMinOrderByAggregateInput = {
    id?: SortOrder
    reporter_id?: SortOrder
    target_type?: SortOrder
    target_id?: SortOrder
    reason?: SortOrder
    created_at?: SortOrder
  }

  export type reportSumOrderByAggregateInput = {
    id?: SortOrder
    reporter_id?: SortOrder
    target_id?: SortOrder
  }

  export type Enumreport_target_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.report_target_type | Enumreport_target_typeFieldRefInput<$PrismaModel>
    in?: $Enums.report_target_type[]
    notIn?: $Enums.report_target_type[]
    not?: NestedEnumreport_target_typeWithAggregatesFilter<$PrismaModel> | $Enums.report_target_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumreport_target_typeFilter<$PrismaModel>
    _max?: NestedEnumreport_target_typeFilter<$PrismaModel>
  }

  export type search_historyOrderByRelevanceInput = {
    fields: search_historyOrderByRelevanceFieldEnum | search_historyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type search_historyCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    keyword?: SortOrder
    searched_at?: SortOrder
  }

  export type search_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type search_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    keyword?: SortOrder
    searched_at?: SortOrder
  }

  export type search_historyMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    keyword?: SortOrder
    searched_at?: SortOrder
  }

  export type search_historySumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type tagOrderByRelevanceInput = {
    fields: tagOrderByRelevanceFieldEnum | tagOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type tagCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type tagAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tagMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type tagMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type tagSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumuser_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.user_status | Enumuser_statusFieldRefInput<$PrismaModel>
    in?: $Enums.user_status[]
    notIn?: $Enums.user_status[]
    not?: NestedEnumuser_statusFilter<$PrismaModel> | $Enums.user_status
  }

  export type CommunityListRelationFilter = {
    every?: communityWhereInput
    some?: communityWhereInput
    none?: communityWhereInput
  }

  export type FollowListRelationFilter = {
    every?: followWhereInput
    some?: followWhereInput
    none?: followWhereInput
  }

  export type Profile_visitListRelationFilter = {
    every?: profile_visitWhereInput
    some?: profile_visitWhereInput
    none?: profile_visitWhereInput
  }

  export type ReportListRelationFilter = {
    every?: reportWhereInput
    some?: reportWhereInput
    none?: reportWhereInput
  }

  export type Search_historyListRelationFilter = {
    every?: search_historyWhereInput
    some?: search_historyWhereInput
    none?: search_historyWhereInput
  }

  export type User_blockListRelationFilter = {
    every?: user_blockWhereInput
    some?: user_blockWhereInput
    none?: user_blockWhereInput
  }

  export type User_oauthNullableScalarRelationFilter = {
    is?: user_oauthWhereInput | null
    isNot?: user_oauthWhereInput | null
  }

  export type User_profileNullableScalarRelationFilter = {
    is?: user_profileWhereInput | null
    isNot?: user_profileWhereInput | null
  }

  export type User_securityNullableScalarRelationFilter = {
    is?: user_securityWhereInput | null
    isNot?: user_securityWhereInput | null
  }

  export type communityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type followOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type profile_visitOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reportOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type search_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_blockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userOrderByRelevanceInput = {
    fields: userOrderByRelevanceFieldEnum | userOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type userCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrder
    nickname?: SortOrder
    profile_img?: SortOrder
    bio?: SortOrder
    gender?: SortOrder
    email_verified?: SortOrder
    status?: SortOrder
    website?: SortOrder
    location?: SortOrder
    birthday?: SortOrder
    oauth_provider?: SortOrder
    oauth_id?: SortOrder
    created_at?: SortOrder
  }

  export type userAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrder
    nickname?: SortOrder
    profile_img?: SortOrder
    bio?: SortOrder
    gender?: SortOrder
    email_verified?: SortOrder
    status?: SortOrder
    website?: SortOrder
    location?: SortOrder
    birthday?: SortOrder
    oauth_provider?: SortOrder
    oauth_id?: SortOrder
    created_at?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrder
    nickname?: SortOrder
    profile_img?: SortOrder
    bio?: SortOrder
    gender?: SortOrder
    email_verified?: SortOrder
    status?: SortOrder
    website?: SortOrder
    location?: SortOrder
    birthday?: SortOrder
    oauth_provider?: SortOrder
    oauth_id?: SortOrder
    created_at?: SortOrder
  }

  export type userSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumuser_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_status | Enumuser_statusFieldRefInput<$PrismaModel>
    in?: $Enums.user_status[]
    notIn?: $Enums.user_status[]
    not?: NestedEnumuser_statusWithAggregatesFilter<$PrismaModel> | $Enums.user_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_statusFilter<$PrismaModel>
    _max?: NestedEnumuser_statusFilter<$PrismaModel>
  }

  export type user_blockUser_idBlocked_user_idCompoundUniqueInput = {
    user_id: number
    blocked_user_id: number
  }

  export type user_blockCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    blocked_user_id?: SortOrder
    created_at?: SortOrder
  }

  export type user_blockAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    blocked_user_id?: SortOrder
  }

  export type user_blockMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    blocked_user_id?: SortOrder
    created_at?: SortOrder
  }

  export type user_blockMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    blocked_user_id?: SortOrder
    created_at?: SortOrder
  }

  export type user_blockSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    blocked_user_id?: SortOrder
  }

  export type user_oauthOrderByRelevanceInput = {
    fields: user_oauthOrderByRelevanceFieldEnum | user_oauthOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type user_oauthCountOrderByAggregateInput = {
    user_id?: SortOrder
    oauth_provider?: SortOrder
    oauth_id?: SortOrder
  }

  export type user_oauthAvgOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type user_oauthMaxOrderByAggregateInput = {
    user_id?: SortOrder
    oauth_provider?: SortOrder
    oauth_id?: SortOrder
  }

  export type user_oauthMinOrderByAggregateInput = {
    user_id?: SortOrder
    oauth_provider?: SortOrder
    oauth_id?: SortOrder
  }

  export type user_oauthSumOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type user_profileOrderByRelevanceInput = {
    fields: user_profileOrderByRelevanceFieldEnum | user_profileOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type user_profileCountOrderByAggregateInput = {
    user_id?: SortOrder
    name?: SortOrder
    profile_img?: SortOrder
    bio?: SortOrder
    gender?: SortOrder
    website?: SortOrder
    location?: SortOrder
    birthday?: SortOrder
  }

  export type user_profileAvgOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type user_profileMaxOrderByAggregateInput = {
    user_id?: SortOrder
    name?: SortOrder
    profile_img?: SortOrder
    bio?: SortOrder
    gender?: SortOrder
    website?: SortOrder
    location?: SortOrder
    birthday?: SortOrder
  }

  export type user_profileMinOrderByAggregateInput = {
    user_id?: SortOrder
    name?: SortOrder
    profile_img?: SortOrder
    bio?: SortOrder
    gender?: SortOrder
    website?: SortOrder
    location?: SortOrder
    birthday?: SortOrder
  }

  export type user_profileSumOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type user_securityCountOrderByAggregateInput = {
    user_id?: SortOrder
    email_verified?: SortOrder
    last_login_at?: SortOrder
  }

  export type user_securityAvgOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type user_securityMaxOrderByAggregateInput = {
    user_id?: SortOrder
    email_verified?: SortOrder
    last_login_at?: SortOrder
  }

  export type user_securityMinOrderByAggregateInput = {
    user_id?: SortOrder
    email_verified?: SortOrder
    last_login_at?: SortOrder
  }

  export type user_securitySumOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type chat_roomCreateNestedOneWithoutChat_messageInput = {
    create?: XOR<chat_roomCreateWithoutChat_messageInput, chat_roomUncheckedCreateWithoutChat_messageInput>
    connectOrCreate?: chat_roomCreateOrConnectWithoutChat_messageInput
    connect?: chat_roomWhereUniqueInput
  }

  export type userCreateNestedOneWithoutChat_messageInput = {
    create?: XOR<userCreateWithoutChat_messageInput, userUncheckedCreateWithoutChat_messageInput>
    connectOrCreate?: userCreateOrConnectWithoutChat_messageInput
    connect?: userWhereUniqueInput
  }

  export type notificationCreateNestedManyWithoutChat_messageInput = {
    create?: XOR<notificationCreateWithoutChat_messageInput, notificationUncheckedCreateWithoutChat_messageInput> | notificationCreateWithoutChat_messageInput[] | notificationUncheckedCreateWithoutChat_messageInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutChat_messageInput | notificationCreateOrConnectWithoutChat_messageInput[]
    createMany?: notificationCreateManyChat_messageInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutChat_messageInput = {
    create?: XOR<notificationCreateWithoutChat_messageInput, notificationUncheckedCreateWithoutChat_messageInput> | notificationCreateWithoutChat_messageInput[] | notificationUncheckedCreateWithoutChat_messageInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutChat_messageInput | notificationCreateOrConnectWithoutChat_messageInput[]
    createMany?: notificationCreateManyChat_messageInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type chat_roomUpdateOneRequiredWithoutChat_messageNestedInput = {
    create?: XOR<chat_roomCreateWithoutChat_messageInput, chat_roomUncheckedCreateWithoutChat_messageInput>
    connectOrCreate?: chat_roomCreateOrConnectWithoutChat_messageInput
    upsert?: chat_roomUpsertWithoutChat_messageInput
    connect?: chat_roomWhereUniqueInput
    update?: XOR<XOR<chat_roomUpdateToOneWithWhereWithoutChat_messageInput, chat_roomUpdateWithoutChat_messageInput>, chat_roomUncheckedUpdateWithoutChat_messageInput>
  }

  export type userUpdateOneRequiredWithoutChat_messageNestedInput = {
    create?: XOR<userCreateWithoutChat_messageInput, userUncheckedCreateWithoutChat_messageInput>
    connectOrCreate?: userCreateOrConnectWithoutChat_messageInput
    upsert?: userUpsertWithoutChat_messageInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutChat_messageInput, userUpdateWithoutChat_messageInput>, userUncheckedUpdateWithoutChat_messageInput>
  }

  export type notificationUpdateManyWithoutChat_messageNestedInput = {
    create?: XOR<notificationCreateWithoutChat_messageInput, notificationUncheckedCreateWithoutChat_messageInput> | notificationCreateWithoutChat_messageInput[] | notificationUncheckedCreateWithoutChat_messageInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutChat_messageInput | notificationCreateOrConnectWithoutChat_messageInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutChat_messageInput | notificationUpsertWithWhereUniqueWithoutChat_messageInput[]
    createMany?: notificationCreateManyChat_messageInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutChat_messageInput | notificationUpdateWithWhereUniqueWithoutChat_messageInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutChat_messageInput | notificationUpdateManyWithWhereWithoutChat_messageInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type notificationUncheckedUpdateManyWithoutChat_messageNestedInput = {
    create?: XOR<notificationCreateWithoutChat_messageInput, notificationUncheckedCreateWithoutChat_messageInput> | notificationCreateWithoutChat_messageInput[] | notificationUncheckedCreateWithoutChat_messageInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutChat_messageInput | notificationCreateOrConnectWithoutChat_messageInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutChat_messageInput | notificationUpsertWithWhereUniqueWithoutChat_messageInput[]
    createMany?: notificationCreateManyChat_messageInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutChat_messageInput | notificationUpdateWithWhereUniqueWithoutChat_messageInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutChat_messageInput | notificationUpdateManyWithWhereWithoutChat_messageInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type chat_messageCreateNestedManyWithoutChat_roomInput = {
    create?: XOR<chat_messageCreateWithoutChat_roomInput, chat_messageUncheckedCreateWithoutChat_roomInput> | chat_messageCreateWithoutChat_roomInput[] | chat_messageUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: chat_messageCreateOrConnectWithoutChat_roomInput | chat_messageCreateOrConnectWithoutChat_roomInput[]
    createMany?: chat_messageCreateManyChat_roomInputEnvelope
    connect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
  }

  export type chat_room_userCreateNestedManyWithoutChat_roomInput = {
    create?: XOR<chat_room_userCreateWithoutChat_roomInput, chat_room_userUncheckedCreateWithoutChat_roomInput> | chat_room_userCreateWithoutChat_roomInput[] | chat_room_userUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: chat_room_userCreateOrConnectWithoutChat_roomInput | chat_room_userCreateOrConnectWithoutChat_roomInput[]
    createMany?: chat_room_userCreateManyChat_roomInputEnvelope
    connect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
  }

  export type notificationCreateNestedManyWithoutChat_roomInput = {
    create?: XOR<notificationCreateWithoutChat_roomInput, notificationUncheckedCreateWithoutChat_roomInput> | notificationCreateWithoutChat_roomInput[] | notificationUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutChat_roomInput | notificationCreateOrConnectWithoutChat_roomInput[]
    createMany?: notificationCreateManyChat_roomInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type chat_messageUncheckedCreateNestedManyWithoutChat_roomInput = {
    create?: XOR<chat_messageCreateWithoutChat_roomInput, chat_messageUncheckedCreateWithoutChat_roomInput> | chat_messageCreateWithoutChat_roomInput[] | chat_messageUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: chat_messageCreateOrConnectWithoutChat_roomInput | chat_messageCreateOrConnectWithoutChat_roomInput[]
    createMany?: chat_messageCreateManyChat_roomInputEnvelope
    connect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
  }

  export type chat_room_userUncheckedCreateNestedManyWithoutChat_roomInput = {
    create?: XOR<chat_room_userCreateWithoutChat_roomInput, chat_room_userUncheckedCreateWithoutChat_roomInput> | chat_room_userCreateWithoutChat_roomInput[] | chat_room_userUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: chat_room_userCreateOrConnectWithoutChat_roomInput | chat_room_userCreateOrConnectWithoutChat_roomInput[]
    createMany?: chat_room_userCreateManyChat_roomInputEnvelope
    connect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutChat_roomInput = {
    create?: XOR<notificationCreateWithoutChat_roomInput, notificationUncheckedCreateWithoutChat_roomInput> | notificationCreateWithoutChat_roomInput[] | notificationUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutChat_roomInput | notificationCreateOrConnectWithoutChat_roomInput[]
    createMany?: notificationCreateManyChat_roomInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type chat_messageUpdateManyWithoutChat_roomNestedInput = {
    create?: XOR<chat_messageCreateWithoutChat_roomInput, chat_messageUncheckedCreateWithoutChat_roomInput> | chat_messageCreateWithoutChat_roomInput[] | chat_messageUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: chat_messageCreateOrConnectWithoutChat_roomInput | chat_messageCreateOrConnectWithoutChat_roomInput[]
    upsert?: chat_messageUpsertWithWhereUniqueWithoutChat_roomInput | chat_messageUpsertWithWhereUniqueWithoutChat_roomInput[]
    createMany?: chat_messageCreateManyChat_roomInputEnvelope
    set?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    disconnect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    delete?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    connect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    update?: chat_messageUpdateWithWhereUniqueWithoutChat_roomInput | chat_messageUpdateWithWhereUniqueWithoutChat_roomInput[]
    updateMany?: chat_messageUpdateManyWithWhereWithoutChat_roomInput | chat_messageUpdateManyWithWhereWithoutChat_roomInput[]
    deleteMany?: chat_messageScalarWhereInput | chat_messageScalarWhereInput[]
  }

  export type chat_room_userUpdateManyWithoutChat_roomNestedInput = {
    create?: XOR<chat_room_userCreateWithoutChat_roomInput, chat_room_userUncheckedCreateWithoutChat_roomInput> | chat_room_userCreateWithoutChat_roomInput[] | chat_room_userUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: chat_room_userCreateOrConnectWithoutChat_roomInput | chat_room_userCreateOrConnectWithoutChat_roomInput[]
    upsert?: chat_room_userUpsertWithWhereUniqueWithoutChat_roomInput | chat_room_userUpsertWithWhereUniqueWithoutChat_roomInput[]
    createMany?: chat_room_userCreateManyChat_roomInputEnvelope
    set?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    disconnect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    delete?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    connect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    update?: chat_room_userUpdateWithWhereUniqueWithoutChat_roomInput | chat_room_userUpdateWithWhereUniqueWithoutChat_roomInput[]
    updateMany?: chat_room_userUpdateManyWithWhereWithoutChat_roomInput | chat_room_userUpdateManyWithWhereWithoutChat_roomInput[]
    deleteMany?: chat_room_userScalarWhereInput | chat_room_userScalarWhereInput[]
  }

  export type notificationUpdateManyWithoutChat_roomNestedInput = {
    create?: XOR<notificationCreateWithoutChat_roomInput, notificationUncheckedCreateWithoutChat_roomInput> | notificationCreateWithoutChat_roomInput[] | notificationUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutChat_roomInput | notificationCreateOrConnectWithoutChat_roomInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutChat_roomInput | notificationUpsertWithWhereUniqueWithoutChat_roomInput[]
    createMany?: notificationCreateManyChat_roomInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutChat_roomInput | notificationUpdateWithWhereUniqueWithoutChat_roomInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutChat_roomInput | notificationUpdateManyWithWhereWithoutChat_roomInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type chat_messageUncheckedUpdateManyWithoutChat_roomNestedInput = {
    create?: XOR<chat_messageCreateWithoutChat_roomInput, chat_messageUncheckedCreateWithoutChat_roomInput> | chat_messageCreateWithoutChat_roomInput[] | chat_messageUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: chat_messageCreateOrConnectWithoutChat_roomInput | chat_messageCreateOrConnectWithoutChat_roomInput[]
    upsert?: chat_messageUpsertWithWhereUniqueWithoutChat_roomInput | chat_messageUpsertWithWhereUniqueWithoutChat_roomInput[]
    createMany?: chat_messageCreateManyChat_roomInputEnvelope
    set?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    disconnect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    delete?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    connect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    update?: chat_messageUpdateWithWhereUniqueWithoutChat_roomInput | chat_messageUpdateWithWhereUniqueWithoutChat_roomInput[]
    updateMany?: chat_messageUpdateManyWithWhereWithoutChat_roomInput | chat_messageUpdateManyWithWhereWithoutChat_roomInput[]
    deleteMany?: chat_messageScalarWhereInput | chat_messageScalarWhereInput[]
  }

  export type chat_room_userUncheckedUpdateManyWithoutChat_roomNestedInput = {
    create?: XOR<chat_room_userCreateWithoutChat_roomInput, chat_room_userUncheckedCreateWithoutChat_roomInput> | chat_room_userCreateWithoutChat_roomInput[] | chat_room_userUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: chat_room_userCreateOrConnectWithoutChat_roomInput | chat_room_userCreateOrConnectWithoutChat_roomInput[]
    upsert?: chat_room_userUpsertWithWhereUniqueWithoutChat_roomInput | chat_room_userUpsertWithWhereUniqueWithoutChat_roomInput[]
    createMany?: chat_room_userCreateManyChat_roomInputEnvelope
    set?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    disconnect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    delete?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    connect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    update?: chat_room_userUpdateWithWhereUniqueWithoutChat_roomInput | chat_room_userUpdateWithWhereUniqueWithoutChat_roomInput[]
    updateMany?: chat_room_userUpdateManyWithWhereWithoutChat_roomInput | chat_room_userUpdateManyWithWhereWithoutChat_roomInput[]
    deleteMany?: chat_room_userScalarWhereInput | chat_room_userScalarWhereInput[]
  }

  export type notificationUncheckedUpdateManyWithoutChat_roomNestedInput = {
    create?: XOR<notificationCreateWithoutChat_roomInput, notificationUncheckedCreateWithoutChat_roomInput> | notificationCreateWithoutChat_roomInput[] | notificationUncheckedCreateWithoutChat_roomInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutChat_roomInput | notificationCreateOrConnectWithoutChat_roomInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutChat_roomInput | notificationUpsertWithWhereUniqueWithoutChat_roomInput[]
    createMany?: notificationCreateManyChat_roomInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutChat_roomInput | notificationUpdateWithWhereUniqueWithoutChat_roomInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutChat_roomInput | notificationUpdateManyWithWhereWithoutChat_roomInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type chat_roomCreateNestedOneWithoutChat_room_userInput = {
    create?: XOR<chat_roomCreateWithoutChat_room_userInput, chat_roomUncheckedCreateWithoutChat_room_userInput>
    connectOrCreate?: chat_roomCreateOrConnectWithoutChat_room_userInput
    connect?: chat_roomWhereUniqueInput
  }

  export type userCreateNestedOneWithoutChat_room_userInput = {
    create?: XOR<userCreateWithoutChat_room_userInput, userUncheckedCreateWithoutChat_room_userInput>
    connectOrCreate?: userCreateOrConnectWithoutChat_room_userInput
    connect?: userWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type chat_roomUpdateOneRequiredWithoutChat_room_userNestedInput = {
    create?: XOR<chat_roomCreateWithoutChat_room_userInput, chat_roomUncheckedCreateWithoutChat_room_userInput>
    connectOrCreate?: chat_roomCreateOrConnectWithoutChat_room_userInput
    upsert?: chat_roomUpsertWithoutChat_room_userInput
    connect?: chat_roomWhereUniqueInput
    update?: XOR<XOR<chat_roomUpdateToOneWithWhereWithoutChat_room_userInput, chat_roomUpdateWithoutChat_room_userInput>, chat_roomUncheckedUpdateWithoutChat_room_userInput>
  }

  export type userUpdateOneRequiredWithoutChat_room_userNestedInput = {
    create?: XOR<userCreateWithoutChat_room_userInput, userUncheckedCreateWithoutChat_room_userInput>
    connectOrCreate?: userCreateOrConnectWithoutChat_room_userInput
    upsert?: userUpsertWithoutChat_room_userInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutChat_room_userInput, userUpdateWithoutChat_room_userInput>, userUncheckedUpdateWithoutChat_room_userInput>
  }

  export type commentCreateNestedOneWithoutOther_commentInput = {
    create?: XOR<commentCreateWithoutOther_commentInput, commentUncheckedCreateWithoutOther_commentInput>
    connectOrCreate?: commentCreateOrConnectWithoutOther_commentInput
    connect?: commentWhereUniqueInput
  }

  export type commentCreateNestedManyWithoutCommentInput = {
    create?: XOR<commentCreateWithoutCommentInput, commentUncheckedCreateWithoutCommentInput> | commentCreateWithoutCommentInput[] | commentUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: commentCreateOrConnectWithoutCommentInput | commentCreateOrConnectWithoutCommentInput[]
    createMany?: commentCreateManyCommentInputEnvelope
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
  }

  export type postCreateNestedOneWithoutCommentInput = {
    create?: XOR<postCreateWithoutCommentInput, postUncheckedCreateWithoutCommentInput>
    connectOrCreate?: postCreateOrConnectWithoutCommentInput
    connect?: postWhereUniqueInput
  }

  export type userCreateNestedOneWithoutCommentInput = {
    create?: XOR<userCreateWithoutCommentInput, userUncheckedCreateWithoutCommentInput>
    connectOrCreate?: userCreateOrConnectWithoutCommentInput
    connect?: userWhereUniqueInput
  }

  export type comment_likeCreateNestedManyWithoutCommentInput = {
    create?: XOR<comment_likeCreateWithoutCommentInput, comment_likeUncheckedCreateWithoutCommentInput> | comment_likeCreateWithoutCommentInput[] | comment_likeUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: comment_likeCreateOrConnectWithoutCommentInput | comment_likeCreateOrConnectWithoutCommentInput[]
    createMany?: comment_likeCreateManyCommentInputEnvelope
    connect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
  }

  export type notificationCreateNestedManyWithoutCommentInput = {
    create?: XOR<notificationCreateWithoutCommentInput, notificationUncheckedCreateWithoutCommentInput> | notificationCreateWithoutCommentInput[] | notificationUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutCommentInput | notificationCreateOrConnectWithoutCommentInput[]
    createMany?: notificationCreateManyCommentInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type commentUncheckedCreateNestedManyWithoutCommentInput = {
    create?: XOR<commentCreateWithoutCommentInput, commentUncheckedCreateWithoutCommentInput> | commentCreateWithoutCommentInput[] | commentUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: commentCreateOrConnectWithoutCommentInput | commentCreateOrConnectWithoutCommentInput[]
    createMany?: commentCreateManyCommentInputEnvelope
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
  }

  export type comment_likeUncheckedCreateNestedManyWithoutCommentInput = {
    create?: XOR<comment_likeCreateWithoutCommentInput, comment_likeUncheckedCreateWithoutCommentInput> | comment_likeCreateWithoutCommentInput[] | comment_likeUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: comment_likeCreateOrConnectWithoutCommentInput | comment_likeCreateOrConnectWithoutCommentInput[]
    createMany?: comment_likeCreateManyCommentInputEnvelope
    connect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutCommentInput = {
    create?: XOR<notificationCreateWithoutCommentInput, notificationUncheckedCreateWithoutCommentInput> | notificationCreateWithoutCommentInput[] | notificationUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutCommentInput | notificationCreateOrConnectWithoutCommentInput[]
    createMany?: notificationCreateManyCommentInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type commentUpdateOneWithoutOther_commentNestedInput = {
    create?: XOR<commentCreateWithoutOther_commentInput, commentUncheckedCreateWithoutOther_commentInput>
    connectOrCreate?: commentCreateOrConnectWithoutOther_commentInput
    upsert?: commentUpsertWithoutOther_commentInput
    disconnect?: commentWhereInput | boolean
    delete?: commentWhereInput | boolean
    connect?: commentWhereUniqueInput
    update?: XOR<XOR<commentUpdateToOneWithWhereWithoutOther_commentInput, commentUpdateWithoutOther_commentInput>, commentUncheckedUpdateWithoutOther_commentInput>
  }

  export type commentUpdateManyWithoutCommentNestedInput = {
    create?: XOR<commentCreateWithoutCommentInput, commentUncheckedCreateWithoutCommentInput> | commentCreateWithoutCommentInput[] | commentUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: commentCreateOrConnectWithoutCommentInput | commentCreateOrConnectWithoutCommentInput[]
    upsert?: commentUpsertWithWhereUniqueWithoutCommentInput | commentUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: commentCreateManyCommentInputEnvelope
    set?: commentWhereUniqueInput | commentWhereUniqueInput[]
    disconnect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    delete?: commentWhereUniqueInput | commentWhereUniqueInput[]
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    update?: commentUpdateWithWhereUniqueWithoutCommentInput | commentUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: commentUpdateManyWithWhereWithoutCommentInput | commentUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: commentScalarWhereInput | commentScalarWhereInput[]
  }

  export type postUpdateOneRequiredWithoutCommentNestedInput = {
    create?: XOR<postCreateWithoutCommentInput, postUncheckedCreateWithoutCommentInput>
    connectOrCreate?: postCreateOrConnectWithoutCommentInput
    upsert?: postUpsertWithoutCommentInput
    connect?: postWhereUniqueInput
    update?: XOR<XOR<postUpdateToOneWithWhereWithoutCommentInput, postUpdateWithoutCommentInput>, postUncheckedUpdateWithoutCommentInput>
  }

  export type userUpdateOneRequiredWithoutCommentNestedInput = {
    create?: XOR<userCreateWithoutCommentInput, userUncheckedCreateWithoutCommentInput>
    connectOrCreate?: userCreateOrConnectWithoutCommentInput
    upsert?: userUpsertWithoutCommentInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCommentInput, userUpdateWithoutCommentInput>, userUncheckedUpdateWithoutCommentInput>
  }

  export type comment_likeUpdateManyWithoutCommentNestedInput = {
    create?: XOR<comment_likeCreateWithoutCommentInput, comment_likeUncheckedCreateWithoutCommentInput> | comment_likeCreateWithoutCommentInput[] | comment_likeUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: comment_likeCreateOrConnectWithoutCommentInput | comment_likeCreateOrConnectWithoutCommentInput[]
    upsert?: comment_likeUpsertWithWhereUniqueWithoutCommentInput | comment_likeUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: comment_likeCreateManyCommentInputEnvelope
    set?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    disconnect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    delete?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    connect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    update?: comment_likeUpdateWithWhereUniqueWithoutCommentInput | comment_likeUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: comment_likeUpdateManyWithWhereWithoutCommentInput | comment_likeUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: comment_likeScalarWhereInput | comment_likeScalarWhereInput[]
  }

  export type notificationUpdateManyWithoutCommentNestedInput = {
    create?: XOR<notificationCreateWithoutCommentInput, notificationUncheckedCreateWithoutCommentInput> | notificationCreateWithoutCommentInput[] | notificationUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutCommentInput | notificationCreateOrConnectWithoutCommentInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutCommentInput | notificationUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: notificationCreateManyCommentInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutCommentInput | notificationUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutCommentInput | notificationUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type commentUncheckedUpdateManyWithoutCommentNestedInput = {
    create?: XOR<commentCreateWithoutCommentInput, commentUncheckedCreateWithoutCommentInput> | commentCreateWithoutCommentInput[] | commentUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: commentCreateOrConnectWithoutCommentInput | commentCreateOrConnectWithoutCommentInput[]
    upsert?: commentUpsertWithWhereUniqueWithoutCommentInput | commentUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: commentCreateManyCommentInputEnvelope
    set?: commentWhereUniqueInput | commentWhereUniqueInput[]
    disconnect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    delete?: commentWhereUniqueInput | commentWhereUniqueInput[]
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    update?: commentUpdateWithWhereUniqueWithoutCommentInput | commentUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: commentUpdateManyWithWhereWithoutCommentInput | commentUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: commentScalarWhereInput | commentScalarWhereInput[]
  }

  export type comment_likeUncheckedUpdateManyWithoutCommentNestedInput = {
    create?: XOR<comment_likeCreateWithoutCommentInput, comment_likeUncheckedCreateWithoutCommentInput> | comment_likeCreateWithoutCommentInput[] | comment_likeUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: comment_likeCreateOrConnectWithoutCommentInput | comment_likeCreateOrConnectWithoutCommentInput[]
    upsert?: comment_likeUpsertWithWhereUniqueWithoutCommentInput | comment_likeUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: comment_likeCreateManyCommentInputEnvelope
    set?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    disconnect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    delete?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    connect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    update?: comment_likeUpdateWithWhereUniqueWithoutCommentInput | comment_likeUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: comment_likeUpdateManyWithWhereWithoutCommentInput | comment_likeUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: comment_likeScalarWhereInput | comment_likeScalarWhereInput[]
  }

  export type notificationUncheckedUpdateManyWithoutCommentNestedInput = {
    create?: XOR<notificationCreateWithoutCommentInput, notificationUncheckedCreateWithoutCommentInput> | notificationCreateWithoutCommentInput[] | notificationUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutCommentInput | notificationCreateOrConnectWithoutCommentInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutCommentInput | notificationUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: notificationCreateManyCommentInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutCommentInput | notificationUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutCommentInput | notificationUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type commentCreateNestedOneWithoutComment_likeInput = {
    create?: XOR<commentCreateWithoutComment_likeInput, commentUncheckedCreateWithoutComment_likeInput>
    connectOrCreate?: commentCreateOrConnectWithoutComment_likeInput
    connect?: commentWhereUniqueInput
  }

  export type userCreateNestedOneWithoutComment_likeInput = {
    create?: XOR<userCreateWithoutComment_likeInput, userUncheckedCreateWithoutComment_likeInput>
    connectOrCreate?: userCreateOrConnectWithoutComment_likeInput
    connect?: userWhereUniqueInput
  }

  export type commentUpdateOneRequiredWithoutComment_likeNestedInput = {
    create?: XOR<commentCreateWithoutComment_likeInput, commentUncheckedCreateWithoutComment_likeInput>
    connectOrCreate?: commentCreateOrConnectWithoutComment_likeInput
    upsert?: commentUpsertWithoutComment_likeInput
    connect?: commentWhereUniqueInput
    update?: XOR<XOR<commentUpdateToOneWithWhereWithoutComment_likeInput, commentUpdateWithoutComment_likeInput>, commentUncheckedUpdateWithoutComment_likeInput>
  }

  export type userUpdateOneRequiredWithoutComment_likeNestedInput = {
    create?: XOR<userCreateWithoutComment_likeInput, userUncheckedCreateWithoutComment_likeInput>
    connectOrCreate?: userCreateOrConnectWithoutComment_likeInput
    upsert?: userUpsertWithoutComment_likeInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutComment_likeInput, userUpdateWithoutComment_likeInput>, userUncheckedUpdateWithoutComment_likeInput>
  }

  export type userCreateNestedOneWithoutCommunityInput = {
    create?: XOR<userCreateWithoutCommunityInput, userUncheckedCreateWithoutCommunityInput>
    connectOrCreate?: userCreateOrConnectWithoutCommunityInput
    connect?: userWhereUniqueInput
  }

  export type postCreateNestedManyWithoutCommunityInput = {
    create?: XOR<postCreateWithoutCommunityInput, postUncheckedCreateWithoutCommunityInput> | postCreateWithoutCommunityInput[] | postUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: postCreateOrConnectWithoutCommunityInput | postCreateOrConnectWithoutCommunityInput[]
    createMany?: postCreateManyCommunityInputEnvelope
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
  }

  export type postUncheckedCreateNestedManyWithoutCommunityInput = {
    create?: XOR<postCreateWithoutCommunityInput, postUncheckedCreateWithoutCommunityInput> | postCreateWithoutCommunityInput[] | postUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: postCreateOrConnectWithoutCommunityInput | postCreateOrConnectWithoutCommunityInput[]
    createMany?: postCreateManyCommunityInputEnvelope
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type userUpdateOneWithoutCommunityNestedInput = {
    create?: XOR<userCreateWithoutCommunityInput, userUncheckedCreateWithoutCommunityInput>
    connectOrCreate?: userCreateOrConnectWithoutCommunityInput
    upsert?: userUpsertWithoutCommunityInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutCommunityInput, userUpdateWithoutCommunityInput>, userUncheckedUpdateWithoutCommunityInput>
  }

  export type postUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<postCreateWithoutCommunityInput, postUncheckedCreateWithoutCommunityInput> | postCreateWithoutCommunityInput[] | postUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: postCreateOrConnectWithoutCommunityInput | postCreateOrConnectWithoutCommunityInput[]
    upsert?: postUpsertWithWhereUniqueWithoutCommunityInput | postUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: postCreateManyCommunityInputEnvelope
    set?: postWhereUniqueInput | postWhereUniqueInput[]
    disconnect?: postWhereUniqueInput | postWhereUniqueInput[]
    delete?: postWhereUniqueInput | postWhereUniqueInput[]
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
    update?: postUpdateWithWhereUniqueWithoutCommunityInput | postUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: postUpdateManyWithWhereWithoutCommunityInput | postUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: postScalarWhereInput | postScalarWhereInput[]
  }

  export type postUncheckedUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<postCreateWithoutCommunityInput, postUncheckedCreateWithoutCommunityInput> | postCreateWithoutCommunityInput[] | postUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: postCreateOrConnectWithoutCommunityInput | postCreateOrConnectWithoutCommunityInput[]
    upsert?: postUpsertWithWhereUniqueWithoutCommunityInput | postUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: postCreateManyCommunityInputEnvelope
    set?: postWhereUniqueInput | postWhereUniqueInput[]
    disconnect?: postWhereUniqueInput | postWhereUniqueInput[]
    delete?: postWhereUniqueInput | postWhereUniqueInput[]
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
    update?: postUpdateWithWhereUniqueWithoutCommunityInput | postUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: postUpdateManyWithWhereWithoutCommunityInput | postUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: postScalarWhereInput | postScalarWhereInput[]
  }

  export type post_reactionCreateNestedManyWithoutEmojiInput = {
    create?: XOR<post_reactionCreateWithoutEmojiInput, post_reactionUncheckedCreateWithoutEmojiInput> | post_reactionCreateWithoutEmojiInput[] | post_reactionUncheckedCreateWithoutEmojiInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutEmojiInput | post_reactionCreateOrConnectWithoutEmojiInput[]
    createMany?: post_reactionCreateManyEmojiInputEnvelope
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
  }

  export type post_reactionUncheckedCreateNestedManyWithoutEmojiInput = {
    create?: XOR<post_reactionCreateWithoutEmojiInput, post_reactionUncheckedCreateWithoutEmojiInput> | post_reactionCreateWithoutEmojiInput[] | post_reactionUncheckedCreateWithoutEmojiInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutEmojiInput | post_reactionCreateOrConnectWithoutEmojiInput[]
    createMany?: post_reactionCreateManyEmojiInputEnvelope
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
  }

  export type post_reactionUpdateManyWithoutEmojiNestedInput = {
    create?: XOR<post_reactionCreateWithoutEmojiInput, post_reactionUncheckedCreateWithoutEmojiInput> | post_reactionCreateWithoutEmojiInput[] | post_reactionUncheckedCreateWithoutEmojiInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutEmojiInput | post_reactionCreateOrConnectWithoutEmojiInput[]
    upsert?: post_reactionUpsertWithWhereUniqueWithoutEmojiInput | post_reactionUpsertWithWhereUniqueWithoutEmojiInput[]
    createMany?: post_reactionCreateManyEmojiInputEnvelope
    set?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    disconnect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    delete?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    update?: post_reactionUpdateWithWhereUniqueWithoutEmojiInput | post_reactionUpdateWithWhereUniqueWithoutEmojiInput[]
    updateMany?: post_reactionUpdateManyWithWhereWithoutEmojiInput | post_reactionUpdateManyWithWhereWithoutEmojiInput[]
    deleteMany?: post_reactionScalarWhereInput | post_reactionScalarWhereInput[]
  }

  export type post_reactionUncheckedUpdateManyWithoutEmojiNestedInput = {
    create?: XOR<post_reactionCreateWithoutEmojiInput, post_reactionUncheckedCreateWithoutEmojiInput> | post_reactionCreateWithoutEmojiInput[] | post_reactionUncheckedCreateWithoutEmojiInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutEmojiInput | post_reactionCreateOrConnectWithoutEmojiInput[]
    upsert?: post_reactionUpsertWithWhereUniqueWithoutEmojiInput | post_reactionUpsertWithWhereUniqueWithoutEmojiInput[]
    createMany?: post_reactionCreateManyEmojiInputEnvelope
    set?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    disconnect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    delete?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    update?: post_reactionUpdateWithWhereUniqueWithoutEmojiInput | post_reactionUpdateWithWhereUniqueWithoutEmojiInput[]
    updateMany?: post_reactionUpdateManyWithWhereWithoutEmojiInput | post_reactionUpdateManyWithWhereWithoutEmojiInput[]
    deleteMany?: post_reactionScalarWhereInput | post_reactionScalarWhereInput[]
  }

  export type postCreateNestedOneWithoutFeed_cacheInput = {
    create?: XOR<postCreateWithoutFeed_cacheInput, postUncheckedCreateWithoutFeed_cacheInput>
    connectOrCreate?: postCreateOrConnectWithoutFeed_cacheInput
    connect?: postWhereUniqueInput
  }

  export type userCreateNestedOneWithoutFeed_cacheInput = {
    create?: XOR<userCreateWithoutFeed_cacheInput, userUncheckedCreateWithoutFeed_cacheInput>
    connectOrCreate?: userCreateOrConnectWithoutFeed_cacheInput
    connect?: userWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type postUpdateOneRequiredWithoutFeed_cacheNestedInput = {
    create?: XOR<postCreateWithoutFeed_cacheInput, postUncheckedCreateWithoutFeed_cacheInput>
    connectOrCreate?: postCreateOrConnectWithoutFeed_cacheInput
    upsert?: postUpsertWithoutFeed_cacheInput
    connect?: postWhereUniqueInput
    update?: XOR<XOR<postUpdateToOneWithWhereWithoutFeed_cacheInput, postUpdateWithoutFeed_cacheInput>, postUncheckedUpdateWithoutFeed_cacheInput>
  }

  export type userUpdateOneRequiredWithoutFeed_cacheNestedInput = {
    create?: XOR<userCreateWithoutFeed_cacheInput, userUncheckedCreateWithoutFeed_cacheInput>
    connectOrCreate?: userCreateOrConnectWithoutFeed_cacheInput
    upsert?: userUpsertWithoutFeed_cacheInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutFeed_cacheInput, userUpdateWithoutFeed_cacheInput>, userUncheckedUpdateWithoutFeed_cacheInput>
  }

  export type post_fileCreateNestedOneWithoutFile_reportInput = {
    create?: XOR<post_fileCreateWithoutFile_reportInput, post_fileUncheckedCreateWithoutFile_reportInput>
    connectOrCreate?: post_fileCreateOrConnectWithoutFile_reportInput
    connect?: post_fileWhereUniqueInput
  }

  export type userCreateNestedOneWithoutFile_reportInput = {
    create?: XOR<userCreateWithoutFile_reportInput, userUncheckedCreateWithoutFile_reportInput>
    connectOrCreate?: userCreateOrConnectWithoutFile_reportInput
    connect?: userWhereUniqueInput
  }

  export type post_fileUpdateOneRequiredWithoutFile_reportNestedInput = {
    create?: XOR<post_fileCreateWithoutFile_reportInput, post_fileUncheckedCreateWithoutFile_reportInput>
    connectOrCreate?: post_fileCreateOrConnectWithoutFile_reportInput
    upsert?: post_fileUpsertWithoutFile_reportInput
    connect?: post_fileWhereUniqueInput
    update?: XOR<XOR<post_fileUpdateToOneWithWhereWithoutFile_reportInput, post_fileUpdateWithoutFile_reportInput>, post_fileUncheckedUpdateWithoutFile_reportInput>
  }

  export type userUpdateOneRequiredWithoutFile_reportNestedInput = {
    create?: XOR<userCreateWithoutFile_reportInput, userUncheckedCreateWithoutFile_reportInput>
    connectOrCreate?: userCreateOrConnectWithoutFile_reportInput
    upsert?: userUpsertWithoutFile_reportInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutFile_reportInput, userUpdateWithoutFile_reportInput>, userUncheckedUpdateWithoutFile_reportInput>
  }

  export type userCreateNestedOneWithoutFollow_follow_follower_idTouserInput = {
    create?: XOR<userCreateWithoutFollow_follow_follower_idTouserInput, userUncheckedCreateWithoutFollow_follow_follower_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutFollow_follow_follower_idTouserInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutFollow_follow_following_idTouserInput = {
    create?: XOR<userCreateWithoutFollow_follow_following_idTouserInput, userUncheckedCreateWithoutFollow_follow_following_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutFollow_follow_following_idTouserInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutFollow_follow_follower_idTouserNestedInput = {
    create?: XOR<userCreateWithoutFollow_follow_follower_idTouserInput, userUncheckedCreateWithoutFollow_follow_follower_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutFollow_follow_follower_idTouserInput
    upsert?: userUpsertWithoutFollow_follow_follower_idTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutFollow_follow_follower_idTouserInput, userUpdateWithoutFollow_follow_follower_idTouserInput>, userUncheckedUpdateWithoutFollow_follow_follower_idTouserInput>
  }

  export type userUpdateOneRequiredWithoutFollow_follow_following_idTouserNestedInput = {
    create?: XOR<userCreateWithoutFollow_follow_following_idTouserInput, userUncheckedCreateWithoutFollow_follow_following_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutFollow_follow_following_idTouserInput
    upsert?: userUpsertWithoutFollow_follow_following_idTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutFollow_follow_following_idTouserInput, userUpdateWithoutFollow_follow_following_idTouserInput>, userUncheckedUpdateWithoutFollow_follow_following_idTouserInput>
  }

  export type chat_messageCreateNestedOneWithoutNotificationInput = {
    create?: XOR<chat_messageCreateWithoutNotificationInput, chat_messageUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: chat_messageCreateOrConnectWithoutNotificationInput
    connect?: chat_messageWhereUniqueInput
  }

  export type chat_roomCreateNestedOneWithoutNotificationInput = {
    create?: XOR<chat_roomCreateWithoutNotificationInput, chat_roomUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: chat_roomCreateOrConnectWithoutNotificationInput
    connect?: chat_roomWhereUniqueInput
  }

  export type commentCreateNestedOneWithoutNotificationInput = {
    create?: XOR<commentCreateWithoutNotificationInput, commentUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: commentCreateOrConnectWithoutNotificationInput
    connect?: commentWhereUniqueInput
  }

  export type postCreateNestedOneWithoutNotificationInput = {
    create?: XOR<postCreateWithoutNotificationInput, postUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: postCreateOrConnectWithoutNotificationInput
    connect?: postWhereUniqueInput
  }

  export type userCreateNestedOneWithoutNotification_notification_source_user_idTouserInput = {
    create?: XOR<userCreateWithoutNotification_notification_source_user_idTouserInput, userUncheckedCreateWithoutNotification_notification_source_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutNotification_notification_source_user_idTouserInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutNotification_notification_user_idTouserInput = {
    create?: XOR<userCreateWithoutNotification_notification_user_idTouserInput, userUncheckedCreateWithoutNotification_notification_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutNotification_notification_user_idTouserInput
    connect?: userWhereUniqueInput
  }

  export type chat_messageUpdateOneWithoutNotificationNestedInput = {
    create?: XOR<chat_messageCreateWithoutNotificationInput, chat_messageUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: chat_messageCreateOrConnectWithoutNotificationInput
    upsert?: chat_messageUpsertWithoutNotificationInput
    disconnect?: chat_messageWhereInput | boolean
    delete?: chat_messageWhereInput | boolean
    connect?: chat_messageWhereUniqueInput
    update?: XOR<XOR<chat_messageUpdateToOneWithWhereWithoutNotificationInput, chat_messageUpdateWithoutNotificationInput>, chat_messageUncheckedUpdateWithoutNotificationInput>
  }

  export type chat_roomUpdateOneWithoutNotificationNestedInput = {
    create?: XOR<chat_roomCreateWithoutNotificationInput, chat_roomUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: chat_roomCreateOrConnectWithoutNotificationInput
    upsert?: chat_roomUpsertWithoutNotificationInput
    disconnect?: chat_roomWhereInput | boolean
    delete?: chat_roomWhereInput | boolean
    connect?: chat_roomWhereUniqueInput
    update?: XOR<XOR<chat_roomUpdateToOneWithWhereWithoutNotificationInput, chat_roomUpdateWithoutNotificationInput>, chat_roomUncheckedUpdateWithoutNotificationInput>
  }

  export type commentUpdateOneWithoutNotificationNestedInput = {
    create?: XOR<commentCreateWithoutNotificationInput, commentUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: commentCreateOrConnectWithoutNotificationInput
    upsert?: commentUpsertWithoutNotificationInput
    disconnect?: commentWhereInput | boolean
    delete?: commentWhereInput | boolean
    connect?: commentWhereUniqueInput
    update?: XOR<XOR<commentUpdateToOneWithWhereWithoutNotificationInput, commentUpdateWithoutNotificationInput>, commentUncheckedUpdateWithoutNotificationInput>
  }

  export type postUpdateOneWithoutNotificationNestedInput = {
    create?: XOR<postCreateWithoutNotificationInput, postUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: postCreateOrConnectWithoutNotificationInput
    upsert?: postUpsertWithoutNotificationInput
    disconnect?: postWhereInput | boolean
    delete?: postWhereInput | boolean
    connect?: postWhereUniqueInput
    update?: XOR<XOR<postUpdateToOneWithWhereWithoutNotificationInput, postUpdateWithoutNotificationInput>, postUncheckedUpdateWithoutNotificationInput>
  }

  export type userUpdateOneWithoutNotification_notification_source_user_idTouserNestedInput = {
    create?: XOR<userCreateWithoutNotification_notification_source_user_idTouserInput, userUncheckedCreateWithoutNotification_notification_source_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutNotification_notification_source_user_idTouserInput
    upsert?: userUpsertWithoutNotification_notification_source_user_idTouserInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutNotification_notification_source_user_idTouserInput, userUpdateWithoutNotification_notification_source_user_idTouserInput>, userUncheckedUpdateWithoutNotification_notification_source_user_idTouserInput>
  }

  export type userUpdateOneRequiredWithoutNotification_notification_user_idTouserNestedInput = {
    create?: XOR<userCreateWithoutNotification_notification_user_idTouserInput, userUncheckedCreateWithoutNotification_notification_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutNotification_notification_user_idTouserInput
    upsert?: userUpsertWithoutNotification_notification_user_idTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutNotification_notification_user_idTouserInput, userUpdateWithoutNotification_notification_user_idTouserInput>, userUncheckedUpdateWithoutNotification_notification_user_idTouserInput>
  }

  export type commentCreateNestedManyWithoutPostInput = {
    create?: XOR<commentCreateWithoutPostInput, commentUncheckedCreateWithoutPostInput> | commentCreateWithoutPostInput[] | commentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: commentCreateOrConnectWithoutPostInput | commentCreateOrConnectWithoutPostInput[]
    createMany?: commentCreateManyPostInputEnvelope
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
  }

  export type feed_cacheCreateNestedManyWithoutPostInput = {
    create?: XOR<feed_cacheCreateWithoutPostInput, feed_cacheUncheckedCreateWithoutPostInput> | feed_cacheCreateWithoutPostInput[] | feed_cacheUncheckedCreateWithoutPostInput[]
    connectOrCreate?: feed_cacheCreateOrConnectWithoutPostInput | feed_cacheCreateOrConnectWithoutPostInput[]
    createMany?: feed_cacheCreateManyPostInputEnvelope
    connect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
  }

  export type notificationCreateNestedManyWithoutPostInput = {
    create?: XOR<notificationCreateWithoutPostInput, notificationUncheckedCreateWithoutPostInput> | notificationCreateWithoutPostInput[] | notificationUncheckedCreateWithoutPostInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutPostInput | notificationCreateOrConnectWithoutPostInput[]
    createMany?: notificationCreateManyPostInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type communityCreateNestedOneWithoutPostInput = {
    create?: XOR<communityCreateWithoutPostInput, communityUncheckedCreateWithoutPostInput>
    connectOrCreate?: communityCreateOrConnectWithoutPostInput
    connect?: communityWhereUniqueInput
  }

  export type userCreateNestedOneWithoutPostInput = {
    create?: XOR<userCreateWithoutPostInput, userUncheckedCreateWithoutPostInput>
    connectOrCreate?: userCreateOrConnectWithoutPostInput
    connect?: userWhereUniqueInput
  }

  export type post_fileCreateNestedManyWithoutPostInput = {
    create?: XOR<post_fileCreateWithoutPostInput, post_fileUncheckedCreateWithoutPostInput> | post_fileCreateWithoutPostInput[] | post_fileUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_fileCreateOrConnectWithoutPostInput | post_fileCreateOrConnectWithoutPostInput[]
    createMany?: post_fileCreateManyPostInputEnvelope
    connect?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
  }

  export type post_likeCreateNestedManyWithoutPostInput = {
    create?: XOR<post_likeCreateWithoutPostInput, post_likeUncheckedCreateWithoutPostInput> | post_likeCreateWithoutPostInput[] | post_likeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_likeCreateOrConnectWithoutPostInput | post_likeCreateOrConnectWithoutPostInput[]
    createMany?: post_likeCreateManyPostInputEnvelope
    connect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
  }

  export type post_reactionCreateNestedManyWithoutPostInput = {
    create?: XOR<post_reactionCreateWithoutPostInput, post_reactionUncheckedCreateWithoutPostInput> | post_reactionCreateWithoutPostInput[] | post_reactionUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutPostInput | post_reactionCreateOrConnectWithoutPostInput[]
    createMany?: post_reactionCreateManyPostInputEnvelope
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
  }

  export type post_tagCreateNestedManyWithoutPostInput = {
    create?: XOR<post_tagCreateWithoutPostInput, post_tagUncheckedCreateWithoutPostInput> | post_tagCreateWithoutPostInput[] | post_tagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_tagCreateOrConnectWithoutPostInput | post_tagCreateOrConnectWithoutPostInput[]
    createMany?: post_tagCreateManyPostInputEnvelope
    connect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
  }

  export type commentUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<commentCreateWithoutPostInput, commentUncheckedCreateWithoutPostInput> | commentCreateWithoutPostInput[] | commentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: commentCreateOrConnectWithoutPostInput | commentCreateOrConnectWithoutPostInput[]
    createMany?: commentCreateManyPostInputEnvelope
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
  }

  export type feed_cacheUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<feed_cacheCreateWithoutPostInput, feed_cacheUncheckedCreateWithoutPostInput> | feed_cacheCreateWithoutPostInput[] | feed_cacheUncheckedCreateWithoutPostInput[]
    connectOrCreate?: feed_cacheCreateOrConnectWithoutPostInput | feed_cacheCreateOrConnectWithoutPostInput[]
    createMany?: feed_cacheCreateManyPostInputEnvelope
    connect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<notificationCreateWithoutPostInput, notificationUncheckedCreateWithoutPostInput> | notificationCreateWithoutPostInput[] | notificationUncheckedCreateWithoutPostInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutPostInput | notificationCreateOrConnectWithoutPostInput[]
    createMany?: notificationCreateManyPostInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type post_fileUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<post_fileCreateWithoutPostInput, post_fileUncheckedCreateWithoutPostInput> | post_fileCreateWithoutPostInput[] | post_fileUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_fileCreateOrConnectWithoutPostInput | post_fileCreateOrConnectWithoutPostInput[]
    createMany?: post_fileCreateManyPostInputEnvelope
    connect?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
  }

  export type post_likeUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<post_likeCreateWithoutPostInput, post_likeUncheckedCreateWithoutPostInput> | post_likeCreateWithoutPostInput[] | post_likeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_likeCreateOrConnectWithoutPostInput | post_likeCreateOrConnectWithoutPostInput[]
    createMany?: post_likeCreateManyPostInputEnvelope
    connect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
  }

  export type post_reactionUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<post_reactionCreateWithoutPostInput, post_reactionUncheckedCreateWithoutPostInput> | post_reactionCreateWithoutPostInput[] | post_reactionUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutPostInput | post_reactionCreateOrConnectWithoutPostInput[]
    createMany?: post_reactionCreateManyPostInputEnvelope
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
  }

  export type post_tagUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<post_tagCreateWithoutPostInput, post_tagUncheckedCreateWithoutPostInput> | post_tagCreateWithoutPostInput[] | post_tagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_tagCreateOrConnectWithoutPostInput | post_tagCreateOrConnectWithoutPostInput[]
    createMany?: post_tagCreateManyPostInputEnvelope
    connect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
  }

  export type Enumpost_visibilityFieldUpdateOperationsInput = {
    set?: $Enums.post_visibility
  }

  export type commentUpdateManyWithoutPostNestedInput = {
    create?: XOR<commentCreateWithoutPostInput, commentUncheckedCreateWithoutPostInput> | commentCreateWithoutPostInput[] | commentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: commentCreateOrConnectWithoutPostInput | commentCreateOrConnectWithoutPostInput[]
    upsert?: commentUpsertWithWhereUniqueWithoutPostInput | commentUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: commentCreateManyPostInputEnvelope
    set?: commentWhereUniqueInput | commentWhereUniqueInput[]
    disconnect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    delete?: commentWhereUniqueInput | commentWhereUniqueInput[]
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    update?: commentUpdateWithWhereUniqueWithoutPostInput | commentUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: commentUpdateManyWithWhereWithoutPostInput | commentUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: commentScalarWhereInput | commentScalarWhereInput[]
  }

  export type feed_cacheUpdateManyWithoutPostNestedInput = {
    create?: XOR<feed_cacheCreateWithoutPostInput, feed_cacheUncheckedCreateWithoutPostInput> | feed_cacheCreateWithoutPostInput[] | feed_cacheUncheckedCreateWithoutPostInput[]
    connectOrCreate?: feed_cacheCreateOrConnectWithoutPostInput | feed_cacheCreateOrConnectWithoutPostInput[]
    upsert?: feed_cacheUpsertWithWhereUniqueWithoutPostInput | feed_cacheUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: feed_cacheCreateManyPostInputEnvelope
    set?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    disconnect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    delete?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    connect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    update?: feed_cacheUpdateWithWhereUniqueWithoutPostInput | feed_cacheUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: feed_cacheUpdateManyWithWhereWithoutPostInput | feed_cacheUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: feed_cacheScalarWhereInput | feed_cacheScalarWhereInput[]
  }

  export type notificationUpdateManyWithoutPostNestedInput = {
    create?: XOR<notificationCreateWithoutPostInput, notificationUncheckedCreateWithoutPostInput> | notificationCreateWithoutPostInput[] | notificationUncheckedCreateWithoutPostInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutPostInput | notificationCreateOrConnectWithoutPostInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutPostInput | notificationUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: notificationCreateManyPostInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutPostInput | notificationUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutPostInput | notificationUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type communityUpdateOneRequiredWithoutPostNestedInput = {
    create?: XOR<communityCreateWithoutPostInput, communityUncheckedCreateWithoutPostInput>
    connectOrCreate?: communityCreateOrConnectWithoutPostInput
    upsert?: communityUpsertWithoutPostInput
    connect?: communityWhereUniqueInput
    update?: XOR<XOR<communityUpdateToOneWithWhereWithoutPostInput, communityUpdateWithoutPostInput>, communityUncheckedUpdateWithoutPostInput>
  }

  export type userUpdateOneRequiredWithoutPostNestedInput = {
    create?: XOR<userCreateWithoutPostInput, userUncheckedCreateWithoutPostInput>
    connectOrCreate?: userCreateOrConnectWithoutPostInput
    upsert?: userUpsertWithoutPostInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPostInput, userUpdateWithoutPostInput>, userUncheckedUpdateWithoutPostInput>
  }

  export type post_fileUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_fileCreateWithoutPostInput, post_fileUncheckedCreateWithoutPostInput> | post_fileCreateWithoutPostInput[] | post_fileUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_fileCreateOrConnectWithoutPostInput | post_fileCreateOrConnectWithoutPostInput[]
    upsert?: post_fileUpsertWithWhereUniqueWithoutPostInput | post_fileUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_fileCreateManyPostInputEnvelope
    set?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
    disconnect?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
    delete?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
    connect?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
    update?: post_fileUpdateWithWhereUniqueWithoutPostInput | post_fileUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_fileUpdateManyWithWhereWithoutPostInput | post_fileUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_fileScalarWhereInput | post_fileScalarWhereInput[]
  }

  export type post_likeUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_likeCreateWithoutPostInput, post_likeUncheckedCreateWithoutPostInput> | post_likeCreateWithoutPostInput[] | post_likeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_likeCreateOrConnectWithoutPostInput | post_likeCreateOrConnectWithoutPostInput[]
    upsert?: post_likeUpsertWithWhereUniqueWithoutPostInput | post_likeUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_likeCreateManyPostInputEnvelope
    set?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    disconnect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    delete?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    connect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    update?: post_likeUpdateWithWhereUniqueWithoutPostInput | post_likeUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_likeUpdateManyWithWhereWithoutPostInput | post_likeUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_likeScalarWhereInput | post_likeScalarWhereInput[]
  }

  export type post_reactionUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_reactionCreateWithoutPostInput, post_reactionUncheckedCreateWithoutPostInput> | post_reactionCreateWithoutPostInput[] | post_reactionUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutPostInput | post_reactionCreateOrConnectWithoutPostInput[]
    upsert?: post_reactionUpsertWithWhereUniqueWithoutPostInput | post_reactionUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_reactionCreateManyPostInputEnvelope
    set?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    disconnect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    delete?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    update?: post_reactionUpdateWithWhereUniqueWithoutPostInput | post_reactionUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_reactionUpdateManyWithWhereWithoutPostInput | post_reactionUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_reactionScalarWhereInput | post_reactionScalarWhereInput[]
  }

  export type post_tagUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_tagCreateWithoutPostInput, post_tagUncheckedCreateWithoutPostInput> | post_tagCreateWithoutPostInput[] | post_tagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_tagCreateOrConnectWithoutPostInput | post_tagCreateOrConnectWithoutPostInput[]
    upsert?: post_tagUpsertWithWhereUniqueWithoutPostInput | post_tagUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_tagCreateManyPostInputEnvelope
    set?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    disconnect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    delete?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    connect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    update?: post_tagUpdateWithWhereUniqueWithoutPostInput | post_tagUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_tagUpdateManyWithWhereWithoutPostInput | post_tagUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_tagScalarWhereInput | post_tagScalarWhereInput[]
  }

  export type commentUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<commentCreateWithoutPostInput, commentUncheckedCreateWithoutPostInput> | commentCreateWithoutPostInput[] | commentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: commentCreateOrConnectWithoutPostInput | commentCreateOrConnectWithoutPostInput[]
    upsert?: commentUpsertWithWhereUniqueWithoutPostInput | commentUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: commentCreateManyPostInputEnvelope
    set?: commentWhereUniqueInput | commentWhereUniqueInput[]
    disconnect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    delete?: commentWhereUniqueInput | commentWhereUniqueInput[]
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    update?: commentUpdateWithWhereUniqueWithoutPostInput | commentUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: commentUpdateManyWithWhereWithoutPostInput | commentUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: commentScalarWhereInput | commentScalarWhereInput[]
  }

  export type feed_cacheUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<feed_cacheCreateWithoutPostInput, feed_cacheUncheckedCreateWithoutPostInput> | feed_cacheCreateWithoutPostInput[] | feed_cacheUncheckedCreateWithoutPostInput[]
    connectOrCreate?: feed_cacheCreateOrConnectWithoutPostInput | feed_cacheCreateOrConnectWithoutPostInput[]
    upsert?: feed_cacheUpsertWithWhereUniqueWithoutPostInput | feed_cacheUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: feed_cacheCreateManyPostInputEnvelope
    set?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    disconnect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    delete?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    connect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    update?: feed_cacheUpdateWithWhereUniqueWithoutPostInput | feed_cacheUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: feed_cacheUpdateManyWithWhereWithoutPostInput | feed_cacheUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: feed_cacheScalarWhereInput | feed_cacheScalarWhereInput[]
  }

  export type notificationUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<notificationCreateWithoutPostInput, notificationUncheckedCreateWithoutPostInput> | notificationCreateWithoutPostInput[] | notificationUncheckedCreateWithoutPostInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutPostInput | notificationCreateOrConnectWithoutPostInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutPostInput | notificationUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: notificationCreateManyPostInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutPostInput | notificationUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutPostInput | notificationUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type post_fileUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_fileCreateWithoutPostInput, post_fileUncheckedCreateWithoutPostInput> | post_fileCreateWithoutPostInput[] | post_fileUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_fileCreateOrConnectWithoutPostInput | post_fileCreateOrConnectWithoutPostInput[]
    upsert?: post_fileUpsertWithWhereUniqueWithoutPostInput | post_fileUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_fileCreateManyPostInputEnvelope
    set?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
    disconnect?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
    delete?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
    connect?: post_fileWhereUniqueInput | post_fileWhereUniqueInput[]
    update?: post_fileUpdateWithWhereUniqueWithoutPostInput | post_fileUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_fileUpdateManyWithWhereWithoutPostInput | post_fileUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_fileScalarWhereInput | post_fileScalarWhereInput[]
  }

  export type post_likeUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_likeCreateWithoutPostInput, post_likeUncheckedCreateWithoutPostInput> | post_likeCreateWithoutPostInput[] | post_likeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_likeCreateOrConnectWithoutPostInput | post_likeCreateOrConnectWithoutPostInput[]
    upsert?: post_likeUpsertWithWhereUniqueWithoutPostInput | post_likeUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_likeCreateManyPostInputEnvelope
    set?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    disconnect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    delete?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    connect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    update?: post_likeUpdateWithWhereUniqueWithoutPostInput | post_likeUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_likeUpdateManyWithWhereWithoutPostInput | post_likeUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_likeScalarWhereInput | post_likeScalarWhereInput[]
  }

  export type post_reactionUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_reactionCreateWithoutPostInput, post_reactionUncheckedCreateWithoutPostInput> | post_reactionCreateWithoutPostInput[] | post_reactionUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutPostInput | post_reactionCreateOrConnectWithoutPostInput[]
    upsert?: post_reactionUpsertWithWhereUniqueWithoutPostInput | post_reactionUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_reactionCreateManyPostInputEnvelope
    set?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    disconnect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    delete?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    update?: post_reactionUpdateWithWhereUniqueWithoutPostInput | post_reactionUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_reactionUpdateManyWithWhereWithoutPostInput | post_reactionUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_reactionScalarWhereInput | post_reactionScalarWhereInput[]
  }

  export type post_tagUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_tagCreateWithoutPostInput, post_tagUncheckedCreateWithoutPostInput> | post_tagCreateWithoutPostInput[] | post_tagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_tagCreateOrConnectWithoutPostInput | post_tagCreateOrConnectWithoutPostInput[]
    upsert?: post_tagUpsertWithWhereUniqueWithoutPostInput | post_tagUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_tagCreateManyPostInputEnvelope
    set?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    disconnect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    delete?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    connect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    update?: post_tagUpdateWithWhereUniqueWithoutPostInput | post_tagUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_tagUpdateManyWithWhereWithoutPostInput | post_tagUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_tagScalarWhereInput | post_tagScalarWhereInput[]
  }

  export type file_reportCreateNestedManyWithoutPost_fileInput = {
    create?: XOR<file_reportCreateWithoutPost_fileInput, file_reportUncheckedCreateWithoutPost_fileInput> | file_reportCreateWithoutPost_fileInput[] | file_reportUncheckedCreateWithoutPost_fileInput[]
    connectOrCreate?: file_reportCreateOrConnectWithoutPost_fileInput | file_reportCreateOrConnectWithoutPost_fileInput[]
    createMany?: file_reportCreateManyPost_fileInputEnvelope
    connect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
  }

  export type postCreateNestedOneWithoutPost_fileInput = {
    create?: XOR<postCreateWithoutPost_fileInput, postUncheckedCreateWithoutPost_fileInput>
    connectOrCreate?: postCreateOrConnectWithoutPost_fileInput
    connect?: postWhereUniqueInput
  }

  export type file_reportUncheckedCreateNestedManyWithoutPost_fileInput = {
    create?: XOR<file_reportCreateWithoutPost_fileInput, file_reportUncheckedCreateWithoutPost_fileInput> | file_reportCreateWithoutPost_fileInput[] | file_reportUncheckedCreateWithoutPost_fileInput[]
    connectOrCreate?: file_reportCreateOrConnectWithoutPost_fileInput | file_reportCreateOrConnectWithoutPost_fileInput[]
    createMany?: file_reportCreateManyPost_fileInputEnvelope
    connect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
  }

  export type file_reportUpdateManyWithoutPost_fileNestedInput = {
    create?: XOR<file_reportCreateWithoutPost_fileInput, file_reportUncheckedCreateWithoutPost_fileInput> | file_reportCreateWithoutPost_fileInput[] | file_reportUncheckedCreateWithoutPost_fileInput[]
    connectOrCreate?: file_reportCreateOrConnectWithoutPost_fileInput | file_reportCreateOrConnectWithoutPost_fileInput[]
    upsert?: file_reportUpsertWithWhereUniqueWithoutPost_fileInput | file_reportUpsertWithWhereUniqueWithoutPost_fileInput[]
    createMany?: file_reportCreateManyPost_fileInputEnvelope
    set?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    disconnect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    delete?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    connect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    update?: file_reportUpdateWithWhereUniqueWithoutPost_fileInput | file_reportUpdateWithWhereUniqueWithoutPost_fileInput[]
    updateMany?: file_reportUpdateManyWithWhereWithoutPost_fileInput | file_reportUpdateManyWithWhereWithoutPost_fileInput[]
    deleteMany?: file_reportScalarWhereInput | file_reportScalarWhereInput[]
  }

  export type postUpdateOneRequiredWithoutPost_fileNestedInput = {
    create?: XOR<postCreateWithoutPost_fileInput, postUncheckedCreateWithoutPost_fileInput>
    connectOrCreate?: postCreateOrConnectWithoutPost_fileInput
    upsert?: postUpsertWithoutPost_fileInput
    connect?: postWhereUniqueInput
    update?: XOR<XOR<postUpdateToOneWithWhereWithoutPost_fileInput, postUpdateWithoutPost_fileInput>, postUncheckedUpdateWithoutPost_fileInput>
  }

  export type file_reportUncheckedUpdateManyWithoutPost_fileNestedInput = {
    create?: XOR<file_reportCreateWithoutPost_fileInput, file_reportUncheckedCreateWithoutPost_fileInput> | file_reportCreateWithoutPost_fileInput[] | file_reportUncheckedCreateWithoutPost_fileInput[]
    connectOrCreate?: file_reportCreateOrConnectWithoutPost_fileInput | file_reportCreateOrConnectWithoutPost_fileInput[]
    upsert?: file_reportUpsertWithWhereUniqueWithoutPost_fileInput | file_reportUpsertWithWhereUniqueWithoutPost_fileInput[]
    createMany?: file_reportCreateManyPost_fileInputEnvelope
    set?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    disconnect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    delete?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    connect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    update?: file_reportUpdateWithWhereUniqueWithoutPost_fileInput | file_reportUpdateWithWhereUniqueWithoutPost_fileInput[]
    updateMany?: file_reportUpdateManyWithWhereWithoutPost_fileInput | file_reportUpdateManyWithWhereWithoutPost_fileInput[]
    deleteMany?: file_reportScalarWhereInput | file_reportScalarWhereInput[]
  }

  export type postCreateNestedOneWithoutPost_likeInput = {
    create?: XOR<postCreateWithoutPost_likeInput, postUncheckedCreateWithoutPost_likeInput>
    connectOrCreate?: postCreateOrConnectWithoutPost_likeInput
    connect?: postWhereUniqueInput
  }

  export type userCreateNestedOneWithoutPost_likeInput = {
    create?: XOR<userCreateWithoutPost_likeInput, userUncheckedCreateWithoutPost_likeInput>
    connectOrCreate?: userCreateOrConnectWithoutPost_likeInput
    connect?: userWhereUniqueInput
  }

  export type postUpdateOneRequiredWithoutPost_likeNestedInput = {
    create?: XOR<postCreateWithoutPost_likeInput, postUncheckedCreateWithoutPost_likeInput>
    connectOrCreate?: postCreateOrConnectWithoutPost_likeInput
    upsert?: postUpsertWithoutPost_likeInput
    connect?: postWhereUniqueInput
    update?: XOR<XOR<postUpdateToOneWithWhereWithoutPost_likeInput, postUpdateWithoutPost_likeInput>, postUncheckedUpdateWithoutPost_likeInput>
  }

  export type userUpdateOneRequiredWithoutPost_likeNestedInput = {
    create?: XOR<userCreateWithoutPost_likeInput, userUncheckedCreateWithoutPost_likeInput>
    connectOrCreate?: userCreateOrConnectWithoutPost_likeInput
    upsert?: userUpsertWithoutPost_likeInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPost_likeInput, userUpdateWithoutPost_likeInput>, userUncheckedUpdateWithoutPost_likeInput>
  }

  export type emojiCreateNestedOneWithoutPost_reactionInput = {
    create?: XOR<emojiCreateWithoutPost_reactionInput, emojiUncheckedCreateWithoutPost_reactionInput>
    connectOrCreate?: emojiCreateOrConnectWithoutPost_reactionInput
    connect?: emojiWhereUniqueInput
  }

  export type postCreateNestedOneWithoutPost_reactionInput = {
    create?: XOR<postCreateWithoutPost_reactionInput, postUncheckedCreateWithoutPost_reactionInput>
    connectOrCreate?: postCreateOrConnectWithoutPost_reactionInput
    connect?: postWhereUniqueInput
  }

  export type userCreateNestedOneWithoutPost_reactionInput = {
    create?: XOR<userCreateWithoutPost_reactionInput, userUncheckedCreateWithoutPost_reactionInput>
    connectOrCreate?: userCreateOrConnectWithoutPost_reactionInput
    connect?: userWhereUniqueInput
  }

  export type emojiUpdateOneRequiredWithoutPost_reactionNestedInput = {
    create?: XOR<emojiCreateWithoutPost_reactionInput, emojiUncheckedCreateWithoutPost_reactionInput>
    connectOrCreate?: emojiCreateOrConnectWithoutPost_reactionInput
    upsert?: emojiUpsertWithoutPost_reactionInput
    connect?: emojiWhereUniqueInput
    update?: XOR<XOR<emojiUpdateToOneWithWhereWithoutPost_reactionInput, emojiUpdateWithoutPost_reactionInput>, emojiUncheckedUpdateWithoutPost_reactionInput>
  }

  export type postUpdateOneRequiredWithoutPost_reactionNestedInput = {
    create?: XOR<postCreateWithoutPost_reactionInput, postUncheckedCreateWithoutPost_reactionInput>
    connectOrCreate?: postCreateOrConnectWithoutPost_reactionInput
    upsert?: postUpsertWithoutPost_reactionInput
    connect?: postWhereUniqueInput
    update?: XOR<XOR<postUpdateToOneWithWhereWithoutPost_reactionInput, postUpdateWithoutPost_reactionInput>, postUncheckedUpdateWithoutPost_reactionInput>
  }

  export type userUpdateOneRequiredWithoutPost_reactionNestedInput = {
    create?: XOR<userCreateWithoutPost_reactionInput, userUncheckedCreateWithoutPost_reactionInput>
    connectOrCreate?: userCreateOrConnectWithoutPost_reactionInput
    upsert?: userUpsertWithoutPost_reactionInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPost_reactionInput, userUpdateWithoutPost_reactionInput>, userUncheckedUpdateWithoutPost_reactionInput>
  }

  export type postCreateNestedOneWithoutPost_tagInput = {
    create?: XOR<postCreateWithoutPost_tagInput, postUncheckedCreateWithoutPost_tagInput>
    connectOrCreate?: postCreateOrConnectWithoutPost_tagInput
    connect?: postWhereUniqueInput
  }

  export type tagCreateNestedOneWithoutPost_tagInput = {
    create?: XOR<tagCreateWithoutPost_tagInput, tagUncheckedCreateWithoutPost_tagInput>
    connectOrCreate?: tagCreateOrConnectWithoutPost_tagInput
    connect?: tagWhereUniqueInput
  }

  export type postUpdateOneRequiredWithoutPost_tagNestedInput = {
    create?: XOR<postCreateWithoutPost_tagInput, postUncheckedCreateWithoutPost_tagInput>
    connectOrCreate?: postCreateOrConnectWithoutPost_tagInput
    upsert?: postUpsertWithoutPost_tagInput
    connect?: postWhereUniqueInput
    update?: XOR<XOR<postUpdateToOneWithWhereWithoutPost_tagInput, postUpdateWithoutPost_tagInput>, postUncheckedUpdateWithoutPost_tagInput>
  }

  export type tagUpdateOneRequiredWithoutPost_tagNestedInput = {
    create?: XOR<tagCreateWithoutPost_tagInput, tagUncheckedCreateWithoutPost_tagInput>
    connectOrCreate?: tagCreateOrConnectWithoutPost_tagInput
    upsert?: tagUpsertWithoutPost_tagInput
    connect?: tagWhereUniqueInput
    update?: XOR<XOR<tagUpdateToOneWithWhereWithoutPost_tagInput, tagUpdateWithoutPost_tagInput>, tagUncheckedUpdateWithoutPost_tagInput>
  }

  export type userCreateNestedOneWithoutProfile_visit_profile_visit_profile_user_idTouserInput = {
    create?: XOR<userCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput, userUncheckedCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutProfile_visit_profile_visit_profile_user_idTouserInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutProfile_visit_profile_visit_visitor_idTouserInput = {
    create?: XOR<userCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput, userUncheckedCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutProfile_visit_profile_visit_visitor_idTouserInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutProfile_visit_profile_visit_profile_user_idTouserNestedInput = {
    create?: XOR<userCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput, userUncheckedCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutProfile_visit_profile_visit_profile_user_idTouserInput
    upsert?: userUpsertWithoutProfile_visit_profile_visit_profile_user_idTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutProfile_visit_profile_visit_profile_user_idTouserInput, userUpdateWithoutProfile_visit_profile_visit_profile_user_idTouserInput>, userUncheckedUpdateWithoutProfile_visit_profile_visit_profile_user_idTouserInput>
  }

  export type userUpdateOneRequiredWithoutProfile_visit_profile_visit_visitor_idTouserNestedInput = {
    create?: XOR<userCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput, userUncheckedCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutProfile_visit_profile_visit_visitor_idTouserInput
    upsert?: userUpsertWithoutProfile_visit_profile_visit_visitor_idTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutProfile_visit_profile_visit_visitor_idTouserInput, userUpdateWithoutProfile_visit_profile_visit_visitor_idTouserInput>, userUncheckedUpdateWithoutProfile_visit_profile_visit_visitor_idTouserInput>
  }

  export type userCreateNestedOneWithoutReportInput = {
    create?: XOR<userCreateWithoutReportInput, userUncheckedCreateWithoutReportInput>
    connectOrCreate?: userCreateOrConnectWithoutReportInput
    connect?: userWhereUniqueInput
  }

  export type Enumreport_target_typeFieldUpdateOperationsInput = {
    set?: $Enums.report_target_type
  }

  export type userUpdateOneRequiredWithoutReportNestedInput = {
    create?: XOR<userCreateWithoutReportInput, userUncheckedCreateWithoutReportInput>
    connectOrCreate?: userCreateOrConnectWithoutReportInput
    upsert?: userUpsertWithoutReportInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutReportInput, userUpdateWithoutReportInput>, userUncheckedUpdateWithoutReportInput>
  }

  export type userCreateNestedOneWithoutSearch_historyInput = {
    create?: XOR<userCreateWithoutSearch_historyInput, userUncheckedCreateWithoutSearch_historyInput>
    connectOrCreate?: userCreateOrConnectWithoutSearch_historyInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutSearch_historyNestedInput = {
    create?: XOR<userCreateWithoutSearch_historyInput, userUncheckedCreateWithoutSearch_historyInput>
    connectOrCreate?: userCreateOrConnectWithoutSearch_historyInput
    upsert?: userUpsertWithoutSearch_historyInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutSearch_historyInput, userUpdateWithoutSearch_historyInput>, userUncheckedUpdateWithoutSearch_historyInput>
  }

  export type post_tagCreateNestedManyWithoutTagInput = {
    create?: XOR<post_tagCreateWithoutTagInput, post_tagUncheckedCreateWithoutTagInput> | post_tagCreateWithoutTagInput[] | post_tagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: post_tagCreateOrConnectWithoutTagInput | post_tagCreateOrConnectWithoutTagInput[]
    createMany?: post_tagCreateManyTagInputEnvelope
    connect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
  }

  export type post_tagUncheckedCreateNestedManyWithoutTagInput = {
    create?: XOR<post_tagCreateWithoutTagInput, post_tagUncheckedCreateWithoutTagInput> | post_tagCreateWithoutTagInput[] | post_tagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: post_tagCreateOrConnectWithoutTagInput | post_tagCreateOrConnectWithoutTagInput[]
    createMany?: post_tagCreateManyTagInputEnvelope
    connect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
  }

  export type post_tagUpdateManyWithoutTagNestedInput = {
    create?: XOR<post_tagCreateWithoutTagInput, post_tagUncheckedCreateWithoutTagInput> | post_tagCreateWithoutTagInput[] | post_tagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: post_tagCreateOrConnectWithoutTagInput | post_tagCreateOrConnectWithoutTagInput[]
    upsert?: post_tagUpsertWithWhereUniqueWithoutTagInput | post_tagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: post_tagCreateManyTagInputEnvelope
    set?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    disconnect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    delete?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    connect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    update?: post_tagUpdateWithWhereUniqueWithoutTagInput | post_tagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: post_tagUpdateManyWithWhereWithoutTagInput | post_tagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: post_tagScalarWhereInput | post_tagScalarWhereInput[]
  }

  export type post_tagUncheckedUpdateManyWithoutTagNestedInput = {
    create?: XOR<post_tagCreateWithoutTagInput, post_tagUncheckedCreateWithoutTagInput> | post_tagCreateWithoutTagInput[] | post_tagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: post_tagCreateOrConnectWithoutTagInput | post_tagCreateOrConnectWithoutTagInput[]
    upsert?: post_tagUpsertWithWhereUniqueWithoutTagInput | post_tagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: post_tagCreateManyTagInputEnvelope
    set?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    disconnect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    delete?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    connect?: post_tagWhereUniqueInput | post_tagWhereUniqueInput[]
    update?: post_tagUpdateWithWhereUniqueWithoutTagInput | post_tagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: post_tagUpdateManyWithWhereWithoutTagInput | post_tagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: post_tagScalarWhereInput | post_tagScalarWhereInput[]
  }

  export type chat_messageCreateNestedManyWithoutUserInput = {
    create?: XOR<chat_messageCreateWithoutUserInput, chat_messageUncheckedCreateWithoutUserInput> | chat_messageCreateWithoutUserInput[] | chat_messageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chat_messageCreateOrConnectWithoutUserInput | chat_messageCreateOrConnectWithoutUserInput[]
    createMany?: chat_messageCreateManyUserInputEnvelope
    connect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
  }

  export type chat_room_userCreateNestedManyWithoutUserInput = {
    create?: XOR<chat_room_userCreateWithoutUserInput, chat_room_userUncheckedCreateWithoutUserInput> | chat_room_userCreateWithoutUserInput[] | chat_room_userUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chat_room_userCreateOrConnectWithoutUserInput | chat_room_userCreateOrConnectWithoutUserInput[]
    createMany?: chat_room_userCreateManyUserInputEnvelope
    connect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
  }

  export type commentCreateNestedManyWithoutUserInput = {
    create?: XOR<commentCreateWithoutUserInput, commentUncheckedCreateWithoutUserInput> | commentCreateWithoutUserInput[] | commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: commentCreateOrConnectWithoutUserInput | commentCreateOrConnectWithoutUserInput[]
    createMany?: commentCreateManyUserInputEnvelope
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
  }

  export type comment_likeCreateNestedManyWithoutUserInput = {
    create?: XOR<comment_likeCreateWithoutUserInput, comment_likeUncheckedCreateWithoutUserInput> | comment_likeCreateWithoutUserInput[] | comment_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: comment_likeCreateOrConnectWithoutUserInput | comment_likeCreateOrConnectWithoutUserInput[]
    createMany?: comment_likeCreateManyUserInputEnvelope
    connect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
  }

  export type communityCreateNestedManyWithoutUserInput = {
    create?: XOR<communityCreateWithoutUserInput, communityUncheckedCreateWithoutUserInput> | communityCreateWithoutUserInput[] | communityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: communityCreateOrConnectWithoutUserInput | communityCreateOrConnectWithoutUserInput[]
    createMany?: communityCreateManyUserInputEnvelope
    connect?: communityWhereUniqueInput | communityWhereUniqueInput[]
  }

  export type feed_cacheCreateNestedManyWithoutUserInput = {
    create?: XOR<feed_cacheCreateWithoutUserInput, feed_cacheUncheckedCreateWithoutUserInput> | feed_cacheCreateWithoutUserInput[] | feed_cacheUncheckedCreateWithoutUserInput[]
    connectOrCreate?: feed_cacheCreateOrConnectWithoutUserInput | feed_cacheCreateOrConnectWithoutUserInput[]
    createMany?: feed_cacheCreateManyUserInputEnvelope
    connect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
  }

  export type file_reportCreateNestedManyWithoutUserInput = {
    create?: XOR<file_reportCreateWithoutUserInput, file_reportUncheckedCreateWithoutUserInput> | file_reportCreateWithoutUserInput[] | file_reportUncheckedCreateWithoutUserInput[]
    connectOrCreate?: file_reportCreateOrConnectWithoutUserInput | file_reportCreateOrConnectWithoutUserInput[]
    createMany?: file_reportCreateManyUserInputEnvelope
    connect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
  }

  export type followCreateNestedManyWithoutUser_follow_follower_idTouserInput = {
    create?: XOR<followCreateWithoutUser_follow_follower_idTouserInput, followUncheckedCreateWithoutUser_follow_follower_idTouserInput> | followCreateWithoutUser_follow_follower_idTouserInput[] | followUncheckedCreateWithoutUser_follow_follower_idTouserInput[]
    connectOrCreate?: followCreateOrConnectWithoutUser_follow_follower_idTouserInput | followCreateOrConnectWithoutUser_follow_follower_idTouserInput[]
    createMany?: followCreateManyUser_follow_follower_idTouserInputEnvelope
    connect?: followWhereUniqueInput | followWhereUniqueInput[]
  }

  export type followCreateNestedManyWithoutUser_follow_following_idTouserInput = {
    create?: XOR<followCreateWithoutUser_follow_following_idTouserInput, followUncheckedCreateWithoutUser_follow_following_idTouserInput> | followCreateWithoutUser_follow_following_idTouserInput[] | followUncheckedCreateWithoutUser_follow_following_idTouserInput[]
    connectOrCreate?: followCreateOrConnectWithoutUser_follow_following_idTouserInput | followCreateOrConnectWithoutUser_follow_following_idTouserInput[]
    createMany?: followCreateManyUser_follow_following_idTouserInputEnvelope
    connect?: followWhereUniqueInput | followWhereUniqueInput[]
  }

  export type notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput = {
    create?: XOR<notificationCreateWithoutUser_notification_source_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput> | notificationCreateWithoutUser_notification_source_user_idTouserInput[] | notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutUser_notification_source_user_idTouserInput | notificationCreateOrConnectWithoutUser_notification_source_user_idTouserInput[]
    createMany?: notificationCreateManyUser_notification_source_user_idTouserInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type notificationCreateNestedManyWithoutUser_notification_user_idTouserInput = {
    create?: XOR<notificationCreateWithoutUser_notification_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_user_idTouserInput> | notificationCreateWithoutUser_notification_user_idTouserInput[] | notificationUncheckedCreateWithoutUser_notification_user_idTouserInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutUser_notification_user_idTouserInput | notificationCreateOrConnectWithoutUser_notification_user_idTouserInput[]
    createMany?: notificationCreateManyUser_notification_user_idTouserInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type postCreateNestedManyWithoutUserInput = {
    create?: XOR<postCreateWithoutUserInput, postUncheckedCreateWithoutUserInput> | postCreateWithoutUserInput[] | postUncheckedCreateWithoutUserInput[]
    connectOrCreate?: postCreateOrConnectWithoutUserInput | postCreateOrConnectWithoutUserInput[]
    createMany?: postCreateManyUserInputEnvelope
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
  }

  export type post_likeCreateNestedManyWithoutUserInput = {
    create?: XOR<post_likeCreateWithoutUserInput, post_likeUncheckedCreateWithoutUserInput> | post_likeCreateWithoutUserInput[] | post_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: post_likeCreateOrConnectWithoutUserInput | post_likeCreateOrConnectWithoutUserInput[]
    createMany?: post_likeCreateManyUserInputEnvelope
    connect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
  }

  export type post_reactionCreateNestedManyWithoutUserInput = {
    create?: XOR<post_reactionCreateWithoutUserInput, post_reactionUncheckedCreateWithoutUserInput> | post_reactionCreateWithoutUserInput[] | post_reactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutUserInput | post_reactionCreateOrConnectWithoutUserInput[]
    createMany?: post_reactionCreateManyUserInputEnvelope
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
  }

  export type profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput = {
    create?: XOR<profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput> | profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput[] | profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput[]
    connectOrCreate?: profile_visitCreateOrConnectWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitCreateOrConnectWithoutUser_profile_visit_profile_user_idTouserInput[]
    createMany?: profile_visitCreateManyUser_profile_visit_profile_user_idTouserInputEnvelope
    connect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
  }

  export type profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput = {
    create?: XOR<profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput> | profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput[] | profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput[]
    connectOrCreate?: profile_visitCreateOrConnectWithoutUser_profile_visit_visitor_idTouserInput | profile_visitCreateOrConnectWithoutUser_profile_visit_visitor_idTouserInput[]
    createMany?: profile_visitCreateManyUser_profile_visit_visitor_idTouserInputEnvelope
    connect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
  }

  export type reportCreateNestedManyWithoutUserInput = {
    create?: XOR<reportCreateWithoutUserInput, reportUncheckedCreateWithoutUserInput> | reportCreateWithoutUserInput[] | reportUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reportCreateOrConnectWithoutUserInput | reportCreateOrConnectWithoutUserInput[]
    createMany?: reportCreateManyUserInputEnvelope
    connect?: reportWhereUniqueInput | reportWhereUniqueInput[]
  }

  export type search_historyCreateNestedManyWithoutUserInput = {
    create?: XOR<search_historyCreateWithoutUserInput, search_historyUncheckedCreateWithoutUserInput> | search_historyCreateWithoutUserInput[] | search_historyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: search_historyCreateOrConnectWithoutUserInput | search_historyCreateOrConnectWithoutUserInput[]
    createMany?: search_historyCreateManyUserInputEnvelope
    connect?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
  }

  export type user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput = {
    create?: XOR<user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput> | user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput[] | user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput[]
    connectOrCreate?: user_blockCreateOrConnectWithoutUser_user_block_blocked_user_idTouserInput | user_blockCreateOrConnectWithoutUser_user_block_blocked_user_idTouserInput[]
    createMany?: user_blockCreateManyUser_user_block_blocked_user_idTouserInputEnvelope
    connect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
  }

  export type user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput = {
    create?: XOR<user_blockCreateWithoutUser_user_block_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput> | user_blockCreateWithoutUser_user_block_user_idTouserInput[] | user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput[]
    connectOrCreate?: user_blockCreateOrConnectWithoutUser_user_block_user_idTouserInput | user_blockCreateOrConnectWithoutUser_user_block_user_idTouserInput[]
    createMany?: user_blockCreateManyUser_user_block_user_idTouserInputEnvelope
    connect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
  }

  export type user_oauthCreateNestedOneWithoutUserInput = {
    create?: XOR<user_oauthCreateWithoutUserInput, user_oauthUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_oauthCreateOrConnectWithoutUserInput
    connect?: user_oauthWhereUniqueInput
  }

  export type user_profileCreateNestedOneWithoutUserInput = {
    create?: XOR<user_profileCreateWithoutUserInput, user_profileUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_profileCreateOrConnectWithoutUserInput
    connect?: user_profileWhereUniqueInput
  }

  export type user_securityCreateNestedOneWithoutUserInput = {
    create?: XOR<user_securityCreateWithoutUserInput, user_securityUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_securityCreateOrConnectWithoutUserInput
    connect?: user_securityWhereUniqueInput
  }

  export type chat_messageUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<chat_messageCreateWithoutUserInput, chat_messageUncheckedCreateWithoutUserInput> | chat_messageCreateWithoutUserInput[] | chat_messageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chat_messageCreateOrConnectWithoutUserInput | chat_messageCreateOrConnectWithoutUserInput[]
    createMany?: chat_messageCreateManyUserInputEnvelope
    connect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
  }

  export type chat_room_userUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<chat_room_userCreateWithoutUserInput, chat_room_userUncheckedCreateWithoutUserInput> | chat_room_userCreateWithoutUserInput[] | chat_room_userUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chat_room_userCreateOrConnectWithoutUserInput | chat_room_userCreateOrConnectWithoutUserInput[]
    createMany?: chat_room_userCreateManyUserInputEnvelope
    connect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
  }

  export type commentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<commentCreateWithoutUserInput, commentUncheckedCreateWithoutUserInput> | commentCreateWithoutUserInput[] | commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: commentCreateOrConnectWithoutUserInput | commentCreateOrConnectWithoutUserInput[]
    createMany?: commentCreateManyUserInputEnvelope
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
  }

  export type comment_likeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<comment_likeCreateWithoutUserInput, comment_likeUncheckedCreateWithoutUserInput> | comment_likeCreateWithoutUserInput[] | comment_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: comment_likeCreateOrConnectWithoutUserInput | comment_likeCreateOrConnectWithoutUserInput[]
    createMany?: comment_likeCreateManyUserInputEnvelope
    connect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
  }

  export type communityUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<communityCreateWithoutUserInput, communityUncheckedCreateWithoutUserInput> | communityCreateWithoutUserInput[] | communityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: communityCreateOrConnectWithoutUserInput | communityCreateOrConnectWithoutUserInput[]
    createMany?: communityCreateManyUserInputEnvelope
    connect?: communityWhereUniqueInput | communityWhereUniqueInput[]
  }

  export type feed_cacheUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<feed_cacheCreateWithoutUserInput, feed_cacheUncheckedCreateWithoutUserInput> | feed_cacheCreateWithoutUserInput[] | feed_cacheUncheckedCreateWithoutUserInput[]
    connectOrCreate?: feed_cacheCreateOrConnectWithoutUserInput | feed_cacheCreateOrConnectWithoutUserInput[]
    createMany?: feed_cacheCreateManyUserInputEnvelope
    connect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
  }

  export type file_reportUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<file_reportCreateWithoutUserInput, file_reportUncheckedCreateWithoutUserInput> | file_reportCreateWithoutUserInput[] | file_reportUncheckedCreateWithoutUserInput[]
    connectOrCreate?: file_reportCreateOrConnectWithoutUserInput | file_reportCreateOrConnectWithoutUserInput[]
    createMany?: file_reportCreateManyUserInputEnvelope
    connect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
  }

  export type followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput = {
    create?: XOR<followCreateWithoutUser_follow_follower_idTouserInput, followUncheckedCreateWithoutUser_follow_follower_idTouserInput> | followCreateWithoutUser_follow_follower_idTouserInput[] | followUncheckedCreateWithoutUser_follow_follower_idTouserInput[]
    connectOrCreate?: followCreateOrConnectWithoutUser_follow_follower_idTouserInput | followCreateOrConnectWithoutUser_follow_follower_idTouserInput[]
    createMany?: followCreateManyUser_follow_follower_idTouserInputEnvelope
    connect?: followWhereUniqueInput | followWhereUniqueInput[]
  }

  export type followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput = {
    create?: XOR<followCreateWithoutUser_follow_following_idTouserInput, followUncheckedCreateWithoutUser_follow_following_idTouserInput> | followCreateWithoutUser_follow_following_idTouserInput[] | followUncheckedCreateWithoutUser_follow_following_idTouserInput[]
    connectOrCreate?: followCreateOrConnectWithoutUser_follow_following_idTouserInput | followCreateOrConnectWithoutUser_follow_following_idTouserInput[]
    createMany?: followCreateManyUser_follow_following_idTouserInputEnvelope
    connect?: followWhereUniqueInput | followWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput = {
    create?: XOR<notificationCreateWithoutUser_notification_source_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput> | notificationCreateWithoutUser_notification_source_user_idTouserInput[] | notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutUser_notification_source_user_idTouserInput | notificationCreateOrConnectWithoutUser_notification_source_user_idTouserInput[]
    createMany?: notificationCreateManyUser_notification_source_user_idTouserInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput = {
    create?: XOR<notificationCreateWithoutUser_notification_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_user_idTouserInput> | notificationCreateWithoutUser_notification_user_idTouserInput[] | notificationUncheckedCreateWithoutUser_notification_user_idTouserInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutUser_notification_user_idTouserInput | notificationCreateOrConnectWithoutUser_notification_user_idTouserInput[]
    createMany?: notificationCreateManyUser_notification_user_idTouserInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type postUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<postCreateWithoutUserInput, postUncheckedCreateWithoutUserInput> | postCreateWithoutUserInput[] | postUncheckedCreateWithoutUserInput[]
    connectOrCreate?: postCreateOrConnectWithoutUserInput | postCreateOrConnectWithoutUserInput[]
    createMany?: postCreateManyUserInputEnvelope
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
  }

  export type post_likeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<post_likeCreateWithoutUserInput, post_likeUncheckedCreateWithoutUserInput> | post_likeCreateWithoutUserInput[] | post_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: post_likeCreateOrConnectWithoutUserInput | post_likeCreateOrConnectWithoutUserInput[]
    createMany?: post_likeCreateManyUserInputEnvelope
    connect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
  }

  export type post_reactionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<post_reactionCreateWithoutUserInput, post_reactionUncheckedCreateWithoutUserInput> | post_reactionCreateWithoutUserInput[] | post_reactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutUserInput | post_reactionCreateOrConnectWithoutUserInput[]
    createMany?: post_reactionCreateManyUserInputEnvelope
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
  }

  export type profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput = {
    create?: XOR<profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput> | profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput[] | profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput[]
    connectOrCreate?: profile_visitCreateOrConnectWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitCreateOrConnectWithoutUser_profile_visit_profile_user_idTouserInput[]
    createMany?: profile_visitCreateManyUser_profile_visit_profile_user_idTouserInputEnvelope
    connect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
  }

  export type profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput = {
    create?: XOR<profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput> | profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput[] | profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput[]
    connectOrCreate?: profile_visitCreateOrConnectWithoutUser_profile_visit_visitor_idTouserInput | profile_visitCreateOrConnectWithoutUser_profile_visit_visitor_idTouserInput[]
    createMany?: profile_visitCreateManyUser_profile_visit_visitor_idTouserInputEnvelope
    connect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
  }

  export type reportUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<reportCreateWithoutUserInput, reportUncheckedCreateWithoutUserInput> | reportCreateWithoutUserInput[] | reportUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reportCreateOrConnectWithoutUserInput | reportCreateOrConnectWithoutUserInput[]
    createMany?: reportCreateManyUserInputEnvelope
    connect?: reportWhereUniqueInput | reportWhereUniqueInput[]
  }

  export type search_historyUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<search_historyCreateWithoutUserInput, search_historyUncheckedCreateWithoutUserInput> | search_historyCreateWithoutUserInput[] | search_historyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: search_historyCreateOrConnectWithoutUserInput | search_historyCreateOrConnectWithoutUserInput[]
    createMany?: search_historyCreateManyUserInputEnvelope
    connect?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
  }

  export type user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput = {
    create?: XOR<user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput> | user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput[] | user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput[]
    connectOrCreate?: user_blockCreateOrConnectWithoutUser_user_block_blocked_user_idTouserInput | user_blockCreateOrConnectWithoutUser_user_block_blocked_user_idTouserInput[]
    createMany?: user_blockCreateManyUser_user_block_blocked_user_idTouserInputEnvelope
    connect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
  }

  export type user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput = {
    create?: XOR<user_blockCreateWithoutUser_user_block_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput> | user_blockCreateWithoutUser_user_block_user_idTouserInput[] | user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput[]
    connectOrCreate?: user_blockCreateOrConnectWithoutUser_user_block_user_idTouserInput | user_blockCreateOrConnectWithoutUser_user_block_user_idTouserInput[]
    createMany?: user_blockCreateManyUser_user_block_user_idTouserInputEnvelope
    connect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
  }

  export type user_oauthUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<user_oauthCreateWithoutUserInput, user_oauthUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_oauthCreateOrConnectWithoutUserInput
    connect?: user_oauthWhereUniqueInput
  }

  export type user_profileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<user_profileCreateWithoutUserInput, user_profileUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_profileCreateOrConnectWithoutUserInput
    connect?: user_profileWhereUniqueInput
  }

  export type user_securityUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<user_securityCreateWithoutUserInput, user_securityUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_securityCreateOrConnectWithoutUserInput
    connect?: user_securityWhereUniqueInput
  }

  export type Enumuser_statusFieldUpdateOperationsInput = {
    set?: $Enums.user_status
  }

  export type chat_messageUpdateManyWithoutUserNestedInput = {
    create?: XOR<chat_messageCreateWithoutUserInput, chat_messageUncheckedCreateWithoutUserInput> | chat_messageCreateWithoutUserInput[] | chat_messageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chat_messageCreateOrConnectWithoutUserInput | chat_messageCreateOrConnectWithoutUserInput[]
    upsert?: chat_messageUpsertWithWhereUniqueWithoutUserInput | chat_messageUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: chat_messageCreateManyUserInputEnvelope
    set?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    disconnect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    delete?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    connect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    update?: chat_messageUpdateWithWhereUniqueWithoutUserInput | chat_messageUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: chat_messageUpdateManyWithWhereWithoutUserInput | chat_messageUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: chat_messageScalarWhereInput | chat_messageScalarWhereInput[]
  }

  export type chat_room_userUpdateManyWithoutUserNestedInput = {
    create?: XOR<chat_room_userCreateWithoutUserInput, chat_room_userUncheckedCreateWithoutUserInput> | chat_room_userCreateWithoutUserInput[] | chat_room_userUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chat_room_userCreateOrConnectWithoutUserInput | chat_room_userCreateOrConnectWithoutUserInput[]
    upsert?: chat_room_userUpsertWithWhereUniqueWithoutUserInput | chat_room_userUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: chat_room_userCreateManyUserInputEnvelope
    set?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    disconnect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    delete?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    connect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    update?: chat_room_userUpdateWithWhereUniqueWithoutUserInput | chat_room_userUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: chat_room_userUpdateManyWithWhereWithoutUserInput | chat_room_userUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: chat_room_userScalarWhereInput | chat_room_userScalarWhereInput[]
  }

  export type commentUpdateManyWithoutUserNestedInput = {
    create?: XOR<commentCreateWithoutUserInput, commentUncheckedCreateWithoutUserInput> | commentCreateWithoutUserInput[] | commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: commentCreateOrConnectWithoutUserInput | commentCreateOrConnectWithoutUserInput[]
    upsert?: commentUpsertWithWhereUniqueWithoutUserInput | commentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: commentCreateManyUserInputEnvelope
    set?: commentWhereUniqueInput | commentWhereUniqueInput[]
    disconnect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    delete?: commentWhereUniqueInput | commentWhereUniqueInput[]
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    update?: commentUpdateWithWhereUniqueWithoutUserInput | commentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: commentUpdateManyWithWhereWithoutUserInput | commentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: commentScalarWhereInput | commentScalarWhereInput[]
  }

  export type comment_likeUpdateManyWithoutUserNestedInput = {
    create?: XOR<comment_likeCreateWithoutUserInput, comment_likeUncheckedCreateWithoutUserInput> | comment_likeCreateWithoutUserInput[] | comment_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: comment_likeCreateOrConnectWithoutUserInput | comment_likeCreateOrConnectWithoutUserInput[]
    upsert?: comment_likeUpsertWithWhereUniqueWithoutUserInput | comment_likeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: comment_likeCreateManyUserInputEnvelope
    set?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    disconnect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    delete?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    connect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    update?: comment_likeUpdateWithWhereUniqueWithoutUserInput | comment_likeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: comment_likeUpdateManyWithWhereWithoutUserInput | comment_likeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: comment_likeScalarWhereInput | comment_likeScalarWhereInput[]
  }

  export type communityUpdateManyWithoutUserNestedInput = {
    create?: XOR<communityCreateWithoutUserInput, communityUncheckedCreateWithoutUserInput> | communityCreateWithoutUserInput[] | communityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: communityCreateOrConnectWithoutUserInput | communityCreateOrConnectWithoutUserInput[]
    upsert?: communityUpsertWithWhereUniqueWithoutUserInput | communityUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: communityCreateManyUserInputEnvelope
    set?: communityWhereUniqueInput | communityWhereUniqueInput[]
    disconnect?: communityWhereUniqueInput | communityWhereUniqueInput[]
    delete?: communityWhereUniqueInput | communityWhereUniqueInput[]
    connect?: communityWhereUniqueInput | communityWhereUniqueInput[]
    update?: communityUpdateWithWhereUniqueWithoutUserInput | communityUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: communityUpdateManyWithWhereWithoutUserInput | communityUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: communityScalarWhereInput | communityScalarWhereInput[]
  }

  export type feed_cacheUpdateManyWithoutUserNestedInput = {
    create?: XOR<feed_cacheCreateWithoutUserInput, feed_cacheUncheckedCreateWithoutUserInput> | feed_cacheCreateWithoutUserInput[] | feed_cacheUncheckedCreateWithoutUserInput[]
    connectOrCreate?: feed_cacheCreateOrConnectWithoutUserInput | feed_cacheCreateOrConnectWithoutUserInput[]
    upsert?: feed_cacheUpsertWithWhereUniqueWithoutUserInput | feed_cacheUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: feed_cacheCreateManyUserInputEnvelope
    set?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    disconnect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    delete?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    connect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    update?: feed_cacheUpdateWithWhereUniqueWithoutUserInput | feed_cacheUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: feed_cacheUpdateManyWithWhereWithoutUserInput | feed_cacheUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: feed_cacheScalarWhereInput | feed_cacheScalarWhereInput[]
  }

  export type file_reportUpdateManyWithoutUserNestedInput = {
    create?: XOR<file_reportCreateWithoutUserInput, file_reportUncheckedCreateWithoutUserInput> | file_reportCreateWithoutUserInput[] | file_reportUncheckedCreateWithoutUserInput[]
    connectOrCreate?: file_reportCreateOrConnectWithoutUserInput | file_reportCreateOrConnectWithoutUserInput[]
    upsert?: file_reportUpsertWithWhereUniqueWithoutUserInput | file_reportUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: file_reportCreateManyUserInputEnvelope
    set?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    disconnect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    delete?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    connect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    update?: file_reportUpdateWithWhereUniqueWithoutUserInput | file_reportUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: file_reportUpdateManyWithWhereWithoutUserInput | file_reportUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: file_reportScalarWhereInput | file_reportScalarWhereInput[]
  }

  export type followUpdateManyWithoutUser_follow_follower_idTouserNestedInput = {
    create?: XOR<followCreateWithoutUser_follow_follower_idTouserInput, followUncheckedCreateWithoutUser_follow_follower_idTouserInput> | followCreateWithoutUser_follow_follower_idTouserInput[] | followUncheckedCreateWithoutUser_follow_follower_idTouserInput[]
    connectOrCreate?: followCreateOrConnectWithoutUser_follow_follower_idTouserInput | followCreateOrConnectWithoutUser_follow_follower_idTouserInput[]
    upsert?: followUpsertWithWhereUniqueWithoutUser_follow_follower_idTouserInput | followUpsertWithWhereUniqueWithoutUser_follow_follower_idTouserInput[]
    createMany?: followCreateManyUser_follow_follower_idTouserInputEnvelope
    set?: followWhereUniqueInput | followWhereUniqueInput[]
    disconnect?: followWhereUniqueInput | followWhereUniqueInput[]
    delete?: followWhereUniqueInput | followWhereUniqueInput[]
    connect?: followWhereUniqueInput | followWhereUniqueInput[]
    update?: followUpdateWithWhereUniqueWithoutUser_follow_follower_idTouserInput | followUpdateWithWhereUniqueWithoutUser_follow_follower_idTouserInput[]
    updateMany?: followUpdateManyWithWhereWithoutUser_follow_follower_idTouserInput | followUpdateManyWithWhereWithoutUser_follow_follower_idTouserInput[]
    deleteMany?: followScalarWhereInput | followScalarWhereInput[]
  }

  export type followUpdateManyWithoutUser_follow_following_idTouserNestedInput = {
    create?: XOR<followCreateWithoutUser_follow_following_idTouserInput, followUncheckedCreateWithoutUser_follow_following_idTouserInput> | followCreateWithoutUser_follow_following_idTouserInput[] | followUncheckedCreateWithoutUser_follow_following_idTouserInput[]
    connectOrCreate?: followCreateOrConnectWithoutUser_follow_following_idTouserInput | followCreateOrConnectWithoutUser_follow_following_idTouserInput[]
    upsert?: followUpsertWithWhereUniqueWithoutUser_follow_following_idTouserInput | followUpsertWithWhereUniqueWithoutUser_follow_following_idTouserInput[]
    createMany?: followCreateManyUser_follow_following_idTouserInputEnvelope
    set?: followWhereUniqueInput | followWhereUniqueInput[]
    disconnect?: followWhereUniqueInput | followWhereUniqueInput[]
    delete?: followWhereUniqueInput | followWhereUniqueInput[]
    connect?: followWhereUniqueInput | followWhereUniqueInput[]
    update?: followUpdateWithWhereUniqueWithoutUser_follow_following_idTouserInput | followUpdateWithWhereUniqueWithoutUser_follow_following_idTouserInput[]
    updateMany?: followUpdateManyWithWhereWithoutUser_follow_following_idTouserInput | followUpdateManyWithWhereWithoutUser_follow_following_idTouserInput[]
    deleteMany?: followScalarWhereInput | followScalarWhereInput[]
  }

  export type notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput = {
    create?: XOR<notificationCreateWithoutUser_notification_source_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput> | notificationCreateWithoutUser_notification_source_user_idTouserInput[] | notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutUser_notification_source_user_idTouserInput | notificationCreateOrConnectWithoutUser_notification_source_user_idTouserInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutUser_notification_source_user_idTouserInput | notificationUpsertWithWhereUniqueWithoutUser_notification_source_user_idTouserInput[]
    createMany?: notificationCreateManyUser_notification_source_user_idTouserInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutUser_notification_source_user_idTouserInput | notificationUpdateWithWhereUniqueWithoutUser_notification_source_user_idTouserInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutUser_notification_source_user_idTouserInput | notificationUpdateManyWithWhereWithoutUser_notification_source_user_idTouserInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput = {
    create?: XOR<notificationCreateWithoutUser_notification_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_user_idTouserInput> | notificationCreateWithoutUser_notification_user_idTouserInput[] | notificationUncheckedCreateWithoutUser_notification_user_idTouserInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutUser_notification_user_idTouserInput | notificationCreateOrConnectWithoutUser_notification_user_idTouserInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutUser_notification_user_idTouserInput | notificationUpsertWithWhereUniqueWithoutUser_notification_user_idTouserInput[]
    createMany?: notificationCreateManyUser_notification_user_idTouserInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutUser_notification_user_idTouserInput | notificationUpdateWithWhereUniqueWithoutUser_notification_user_idTouserInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutUser_notification_user_idTouserInput | notificationUpdateManyWithWhereWithoutUser_notification_user_idTouserInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type postUpdateManyWithoutUserNestedInput = {
    create?: XOR<postCreateWithoutUserInput, postUncheckedCreateWithoutUserInput> | postCreateWithoutUserInput[] | postUncheckedCreateWithoutUserInput[]
    connectOrCreate?: postCreateOrConnectWithoutUserInput | postCreateOrConnectWithoutUserInput[]
    upsert?: postUpsertWithWhereUniqueWithoutUserInput | postUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: postCreateManyUserInputEnvelope
    set?: postWhereUniqueInput | postWhereUniqueInput[]
    disconnect?: postWhereUniqueInput | postWhereUniqueInput[]
    delete?: postWhereUniqueInput | postWhereUniqueInput[]
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
    update?: postUpdateWithWhereUniqueWithoutUserInput | postUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: postUpdateManyWithWhereWithoutUserInput | postUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: postScalarWhereInput | postScalarWhereInput[]
  }

  export type post_likeUpdateManyWithoutUserNestedInput = {
    create?: XOR<post_likeCreateWithoutUserInput, post_likeUncheckedCreateWithoutUserInput> | post_likeCreateWithoutUserInput[] | post_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: post_likeCreateOrConnectWithoutUserInput | post_likeCreateOrConnectWithoutUserInput[]
    upsert?: post_likeUpsertWithWhereUniqueWithoutUserInput | post_likeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: post_likeCreateManyUserInputEnvelope
    set?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    disconnect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    delete?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    connect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    update?: post_likeUpdateWithWhereUniqueWithoutUserInput | post_likeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: post_likeUpdateManyWithWhereWithoutUserInput | post_likeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: post_likeScalarWhereInput | post_likeScalarWhereInput[]
  }

  export type post_reactionUpdateManyWithoutUserNestedInput = {
    create?: XOR<post_reactionCreateWithoutUserInput, post_reactionUncheckedCreateWithoutUserInput> | post_reactionCreateWithoutUserInput[] | post_reactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutUserInput | post_reactionCreateOrConnectWithoutUserInput[]
    upsert?: post_reactionUpsertWithWhereUniqueWithoutUserInput | post_reactionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: post_reactionCreateManyUserInputEnvelope
    set?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    disconnect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    delete?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    update?: post_reactionUpdateWithWhereUniqueWithoutUserInput | post_reactionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: post_reactionUpdateManyWithWhereWithoutUserInput | post_reactionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: post_reactionScalarWhereInput | post_reactionScalarWhereInput[]
  }

  export type profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput = {
    create?: XOR<profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput> | profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput[] | profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput[]
    connectOrCreate?: profile_visitCreateOrConnectWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitCreateOrConnectWithoutUser_profile_visit_profile_user_idTouserInput[]
    upsert?: profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput[]
    createMany?: profile_visitCreateManyUser_profile_visit_profile_user_idTouserInputEnvelope
    set?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    disconnect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    delete?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    connect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    update?: profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput[]
    updateMany?: profile_visitUpdateManyWithWhereWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitUpdateManyWithWhereWithoutUser_profile_visit_profile_user_idTouserInput[]
    deleteMany?: profile_visitScalarWhereInput | profile_visitScalarWhereInput[]
  }

  export type profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput = {
    create?: XOR<profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput> | profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput[] | profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput[]
    connectOrCreate?: profile_visitCreateOrConnectWithoutUser_profile_visit_visitor_idTouserInput | profile_visitCreateOrConnectWithoutUser_profile_visit_visitor_idTouserInput[]
    upsert?: profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput | profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput[]
    createMany?: profile_visitCreateManyUser_profile_visit_visitor_idTouserInputEnvelope
    set?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    disconnect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    delete?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    connect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    update?: profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput | profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput[]
    updateMany?: profile_visitUpdateManyWithWhereWithoutUser_profile_visit_visitor_idTouserInput | profile_visitUpdateManyWithWhereWithoutUser_profile_visit_visitor_idTouserInput[]
    deleteMany?: profile_visitScalarWhereInput | profile_visitScalarWhereInput[]
  }

  export type reportUpdateManyWithoutUserNestedInput = {
    create?: XOR<reportCreateWithoutUserInput, reportUncheckedCreateWithoutUserInput> | reportCreateWithoutUserInput[] | reportUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reportCreateOrConnectWithoutUserInput | reportCreateOrConnectWithoutUserInput[]
    upsert?: reportUpsertWithWhereUniqueWithoutUserInput | reportUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reportCreateManyUserInputEnvelope
    set?: reportWhereUniqueInput | reportWhereUniqueInput[]
    disconnect?: reportWhereUniqueInput | reportWhereUniqueInput[]
    delete?: reportWhereUniqueInput | reportWhereUniqueInput[]
    connect?: reportWhereUniqueInput | reportWhereUniqueInput[]
    update?: reportUpdateWithWhereUniqueWithoutUserInput | reportUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reportUpdateManyWithWhereWithoutUserInput | reportUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reportScalarWhereInput | reportScalarWhereInput[]
  }

  export type search_historyUpdateManyWithoutUserNestedInput = {
    create?: XOR<search_historyCreateWithoutUserInput, search_historyUncheckedCreateWithoutUserInput> | search_historyCreateWithoutUserInput[] | search_historyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: search_historyCreateOrConnectWithoutUserInput | search_historyCreateOrConnectWithoutUserInput[]
    upsert?: search_historyUpsertWithWhereUniqueWithoutUserInput | search_historyUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: search_historyCreateManyUserInputEnvelope
    set?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
    disconnect?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
    delete?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
    connect?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
    update?: search_historyUpdateWithWhereUniqueWithoutUserInput | search_historyUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: search_historyUpdateManyWithWhereWithoutUserInput | search_historyUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: search_historyScalarWhereInput | search_historyScalarWhereInput[]
  }

  export type user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput = {
    create?: XOR<user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput> | user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput[] | user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput[]
    connectOrCreate?: user_blockCreateOrConnectWithoutUser_user_block_blocked_user_idTouserInput | user_blockCreateOrConnectWithoutUser_user_block_blocked_user_idTouserInput[]
    upsert?: user_blockUpsertWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput | user_blockUpsertWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput[]
    createMany?: user_blockCreateManyUser_user_block_blocked_user_idTouserInputEnvelope
    set?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    disconnect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    delete?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    connect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    update?: user_blockUpdateWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput | user_blockUpdateWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput[]
    updateMany?: user_blockUpdateManyWithWhereWithoutUser_user_block_blocked_user_idTouserInput | user_blockUpdateManyWithWhereWithoutUser_user_block_blocked_user_idTouserInput[]
    deleteMany?: user_blockScalarWhereInput | user_blockScalarWhereInput[]
  }

  export type user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput = {
    create?: XOR<user_blockCreateWithoutUser_user_block_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput> | user_blockCreateWithoutUser_user_block_user_idTouserInput[] | user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput[]
    connectOrCreate?: user_blockCreateOrConnectWithoutUser_user_block_user_idTouserInput | user_blockCreateOrConnectWithoutUser_user_block_user_idTouserInput[]
    upsert?: user_blockUpsertWithWhereUniqueWithoutUser_user_block_user_idTouserInput | user_blockUpsertWithWhereUniqueWithoutUser_user_block_user_idTouserInput[]
    createMany?: user_blockCreateManyUser_user_block_user_idTouserInputEnvelope
    set?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    disconnect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    delete?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    connect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    update?: user_blockUpdateWithWhereUniqueWithoutUser_user_block_user_idTouserInput | user_blockUpdateWithWhereUniqueWithoutUser_user_block_user_idTouserInput[]
    updateMany?: user_blockUpdateManyWithWhereWithoutUser_user_block_user_idTouserInput | user_blockUpdateManyWithWhereWithoutUser_user_block_user_idTouserInput[]
    deleteMany?: user_blockScalarWhereInput | user_blockScalarWhereInput[]
  }

  export type user_oauthUpdateOneWithoutUserNestedInput = {
    create?: XOR<user_oauthCreateWithoutUserInput, user_oauthUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_oauthCreateOrConnectWithoutUserInput
    upsert?: user_oauthUpsertWithoutUserInput
    disconnect?: user_oauthWhereInput | boolean
    delete?: user_oauthWhereInput | boolean
    connect?: user_oauthWhereUniqueInput
    update?: XOR<XOR<user_oauthUpdateToOneWithWhereWithoutUserInput, user_oauthUpdateWithoutUserInput>, user_oauthUncheckedUpdateWithoutUserInput>
  }

  export type user_profileUpdateOneWithoutUserNestedInput = {
    create?: XOR<user_profileCreateWithoutUserInput, user_profileUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_profileCreateOrConnectWithoutUserInput
    upsert?: user_profileUpsertWithoutUserInput
    disconnect?: user_profileWhereInput | boolean
    delete?: user_profileWhereInput | boolean
    connect?: user_profileWhereUniqueInput
    update?: XOR<XOR<user_profileUpdateToOneWithWhereWithoutUserInput, user_profileUpdateWithoutUserInput>, user_profileUncheckedUpdateWithoutUserInput>
  }

  export type user_securityUpdateOneWithoutUserNestedInput = {
    create?: XOR<user_securityCreateWithoutUserInput, user_securityUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_securityCreateOrConnectWithoutUserInput
    upsert?: user_securityUpsertWithoutUserInput
    disconnect?: user_securityWhereInput | boolean
    delete?: user_securityWhereInput | boolean
    connect?: user_securityWhereUniqueInput
    update?: XOR<XOR<user_securityUpdateToOneWithWhereWithoutUserInput, user_securityUpdateWithoutUserInput>, user_securityUncheckedUpdateWithoutUserInput>
  }

  export type chat_messageUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<chat_messageCreateWithoutUserInput, chat_messageUncheckedCreateWithoutUserInput> | chat_messageCreateWithoutUserInput[] | chat_messageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chat_messageCreateOrConnectWithoutUserInput | chat_messageCreateOrConnectWithoutUserInput[]
    upsert?: chat_messageUpsertWithWhereUniqueWithoutUserInput | chat_messageUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: chat_messageCreateManyUserInputEnvelope
    set?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    disconnect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    delete?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    connect?: chat_messageWhereUniqueInput | chat_messageWhereUniqueInput[]
    update?: chat_messageUpdateWithWhereUniqueWithoutUserInput | chat_messageUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: chat_messageUpdateManyWithWhereWithoutUserInput | chat_messageUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: chat_messageScalarWhereInput | chat_messageScalarWhereInput[]
  }

  export type chat_room_userUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<chat_room_userCreateWithoutUserInput, chat_room_userUncheckedCreateWithoutUserInput> | chat_room_userCreateWithoutUserInput[] | chat_room_userUncheckedCreateWithoutUserInput[]
    connectOrCreate?: chat_room_userCreateOrConnectWithoutUserInput | chat_room_userCreateOrConnectWithoutUserInput[]
    upsert?: chat_room_userUpsertWithWhereUniqueWithoutUserInput | chat_room_userUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: chat_room_userCreateManyUserInputEnvelope
    set?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    disconnect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    delete?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    connect?: chat_room_userWhereUniqueInput | chat_room_userWhereUniqueInput[]
    update?: chat_room_userUpdateWithWhereUniqueWithoutUserInput | chat_room_userUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: chat_room_userUpdateManyWithWhereWithoutUserInput | chat_room_userUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: chat_room_userScalarWhereInput | chat_room_userScalarWhereInput[]
  }

  export type commentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<commentCreateWithoutUserInput, commentUncheckedCreateWithoutUserInput> | commentCreateWithoutUserInput[] | commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: commentCreateOrConnectWithoutUserInput | commentCreateOrConnectWithoutUserInput[]
    upsert?: commentUpsertWithWhereUniqueWithoutUserInput | commentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: commentCreateManyUserInputEnvelope
    set?: commentWhereUniqueInput | commentWhereUniqueInput[]
    disconnect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    delete?: commentWhereUniqueInput | commentWhereUniqueInput[]
    connect?: commentWhereUniqueInput | commentWhereUniqueInput[]
    update?: commentUpdateWithWhereUniqueWithoutUserInput | commentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: commentUpdateManyWithWhereWithoutUserInput | commentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: commentScalarWhereInput | commentScalarWhereInput[]
  }

  export type comment_likeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<comment_likeCreateWithoutUserInput, comment_likeUncheckedCreateWithoutUserInput> | comment_likeCreateWithoutUserInput[] | comment_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: comment_likeCreateOrConnectWithoutUserInput | comment_likeCreateOrConnectWithoutUserInput[]
    upsert?: comment_likeUpsertWithWhereUniqueWithoutUserInput | comment_likeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: comment_likeCreateManyUserInputEnvelope
    set?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    disconnect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    delete?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    connect?: comment_likeWhereUniqueInput | comment_likeWhereUniqueInput[]
    update?: comment_likeUpdateWithWhereUniqueWithoutUserInput | comment_likeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: comment_likeUpdateManyWithWhereWithoutUserInput | comment_likeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: comment_likeScalarWhereInput | comment_likeScalarWhereInput[]
  }

  export type communityUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<communityCreateWithoutUserInput, communityUncheckedCreateWithoutUserInput> | communityCreateWithoutUserInput[] | communityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: communityCreateOrConnectWithoutUserInput | communityCreateOrConnectWithoutUserInput[]
    upsert?: communityUpsertWithWhereUniqueWithoutUserInput | communityUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: communityCreateManyUserInputEnvelope
    set?: communityWhereUniqueInput | communityWhereUniqueInput[]
    disconnect?: communityWhereUniqueInput | communityWhereUniqueInput[]
    delete?: communityWhereUniqueInput | communityWhereUniqueInput[]
    connect?: communityWhereUniqueInput | communityWhereUniqueInput[]
    update?: communityUpdateWithWhereUniqueWithoutUserInput | communityUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: communityUpdateManyWithWhereWithoutUserInput | communityUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: communityScalarWhereInput | communityScalarWhereInput[]
  }

  export type feed_cacheUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<feed_cacheCreateWithoutUserInput, feed_cacheUncheckedCreateWithoutUserInput> | feed_cacheCreateWithoutUserInput[] | feed_cacheUncheckedCreateWithoutUserInput[]
    connectOrCreate?: feed_cacheCreateOrConnectWithoutUserInput | feed_cacheCreateOrConnectWithoutUserInput[]
    upsert?: feed_cacheUpsertWithWhereUniqueWithoutUserInput | feed_cacheUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: feed_cacheCreateManyUserInputEnvelope
    set?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    disconnect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    delete?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    connect?: feed_cacheWhereUniqueInput | feed_cacheWhereUniqueInput[]
    update?: feed_cacheUpdateWithWhereUniqueWithoutUserInput | feed_cacheUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: feed_cacheUpdateManyWithWhereWithoutUserInput | feed_cacheUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: feed_cacheScalarWhereInput | feed_cacheScalarWhereInput[]
  }

  export type file_reportUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<file_reportCreateWithoutUserInput, file_reportUncheckedCreateWithoutUserInput> | file_reportCreateWithoutUserInput[] | file_reportUncheckedCreateWithoutUserInput[]
    connectOrCreate?: file_reportCreateOrConnectWithoutUserInput | file_reportCreateOrConnectWithoutUserInput[]
    upsert?: file_reportUpsertWithWhereUniqueWithoutUserInput | file_reportUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: file_reportCreateManyUserInputEnvelope
    set?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    disconnect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    delete?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    connect?: file_reportWhereUniqueInput | file_reportWhereUniqueInput[]
    update?: file_reportUpdateWithWhereUniqueWithoutUserInput | file_reportUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: file_reportUpdateManyWithWhereWithoutUserInput | file_reportUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: file_reportScalarWhereInput | file_reportScalarWhereInput[]
  }

  export type followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput = {
    create?: XOR<followCreateWithoutUser_follow_follower_idTouserInput, followUncheckedCreateWithoutUser_follow_follower_idTouserInput> | followCreateWithoutUser_follow_follower_idTouserInput[] | followUncheckedCreateWithoutUser_follow_follower_idTouserInput[]
    connectOrCreate?: followCreateOrConnectWithoutUser_follow_follower_idTouserInput | followCreateOrConnectWithoutUser_follow_follower_idTouserInput[]
    upsert?: followUpsertWithWhereUniqueWithoutUser_follow_follower_idTouserInput | followUpsertWithWhereUniqueWithoutUser_follow_follower_idTouserInput[]
    createMany?: followCreateManyUser_follow_follower_idTouserInputEnvelope
    set?: followWhereUniqueInput | followWhereUniqueInput[]
    disconnect?: followWhereUniqueInput | followWhereUniqueInput[]
    delete?: followWhereUniqueInput | followWhereUniqueInput[]
    connect?: followWhereUniqueInput | followWhereUniqueInput[]
    update?: followUpdateWithWhereUniqueWithoutUser_follow_follower_idTouserInput | followUpdateWithWhereUniqueWithoutUser_follow_follower_idTouserInput[]
    updateMany?: followUpdateManyWithWhereWithoutUser_follow_follower_idTouserInput | followUpdateManyWithWhereWithoutUser_follow_follower_idTouserInput[]
    deleteMany?: followScalarWhereInput | followScalarWhereInput[]
  }

  export type followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput = {
    create?: XOR<followCreateWithoutUser_follow_following_idTouserInput, followUncheckedCreateWithoutUser_follow_following_idTouserInput> | followCreateWithoutUser_follow_following_idTouserInput[] | followUncheckedCreateWithoutUser_follow_following_idTouserInput[]
    connectOrCreate?: followCreateOrConnectWithoutUser_follow_following_idTouserInput | followCreateOrConnectWithoutUser_follow_following_idTouserInput[]
    upsert?: followUpsertWithWhereUniqueWithoutUser_follow_following_idTouserInput | followUpsertWithWhereUniqueWithoutUser_follow_following_idTouserInput[]
    createMany?: followCreateManyUser_follow_following_idTouserInputEnvelope
    set?: followWhereUniqueInput | followWhereUniqueInput[]
    disconnect?: followWhereUniqueInput | followWhereUniqueInput[]
    delete?: followWhereUniqueInput | followWhereUniqueInput[]
    connect?: followWhereUniqueInput | followWhereUniqueInput[]
    update?: followUpdateWithWhereUniqueWithoutUser_follow_following_idTouserInput | followUpdateWithWhereUniqueWithoutUser_follow_following_idTouserInput[]
    updateMany?: followUpdateManyWithWhereWithoutUser_follow_following_idTouserInput | followUpdateManyWithWhereWithoutUser_follow_following_idTouserInput[]
    deleteMany?: followScalarWhereInput | followScalarWhereInput[]
  }

  export type notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput = {
    create?: XOR<notificationCreateWithoutUser_notification_source_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput> | notificationCreateWithoutUser_notification_source_user_idTouserInput[] | notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutUser_notification_source_user_idTouserInput | notificationCreateOrConnectWithoutUser_notification_source_user_idTouserInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutUser_notification_source_user_idTouserInput | notificationUpsertWithWhereUniqueWithoutUser_notification_source_user_idTouserInput[]
    createMany?: notificationCreateManyUser_notification_source_user_idTouserInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutUser_notification_source_user_idTouserInput | notificationUpdateWithWhereUniqueWithoutUser_notification_source_user_idTouserInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutUser_notification_source_user_idTouserInput | notificationUpdateManyWithWhereWithoutUser_notification_source_user_idTouserInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput = {
    create?: XOR<notificationCreateWithoutUser_notification_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_user_idTouserInput> | notificationCreateWithoutUser_notification_user_idTouserInput[] | notificationUncheckedCreateWithoutUser_notification_user_idTouserInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutUser_notification_user_idTouserInput | notificationCreateOrConnectWithoutUser_notification_user_idTouserInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutUser_notification_user_idTouserInput | notificationUpsertWithWhereUniqueWithoutUser_notification_user_idTouserInput[]
    createMany?: notificationCreateManyUser_notification_user_idTouserInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutUser_notification_user_idTouserInput | notificationUpdateWithWhereUniqueWithoutUser_notification_user_idTouserInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutUser_notification_user_idTouserInput | notificationUpdateManyWithWhereWithoutUser_notification_user_idTouserInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type postUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<postCreateWithoutUserInput, postUncheckedCreateWithoutUserInput> | postCreateWithoutUserInput[] | postUncheckedCreateWithoutUserInput[]
    connectOrCreate?: postCreateOrConnectWithoutUserInput | postCreateOrConnectWithoutUserInput[]
    upsert?: postUpsertWithWhereUniqueWithoutUserInput | postUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: postCreateManyUserInputEnvelope
    set?: postWhereUniqueInput | postWhereUniqueInput[]
    disconnect?: postWhereUniqueInput | postWhereUniqueInput[]
    delete?: postWhereUniqueInput | postWhereUniqueInput[]
    connect?: postWhereUniqueInput | postWhereUniqueInput[]
    update?: postUpdateWithWhereUniqueWithoutUserInput | postUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: postUpdateManyWithWhereWithoutUserInput | postUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: postScalarWhereInput | postScalarWhereInput[]
  }

  export type post_likeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<post_likeCreateWithoutUserInput, post_likeUncheckedCreateWithoutUserInput> | post_likeCreateWithoutUserInput[] | post_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: post_likeCreateOrConnectWithoutUserInput | post_likeCreateOrConnectWithoutUserInput[]
    upsert?: post_likeUpsertWithWhereUniqueWithoutUserInput | post_likeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: post_likeCreateManyUserInputEnvelope
    set?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    disconnect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    delete?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    connect?: post_likeWhereUniqueInput | post_likeWhereUniqueInput[]
    update?: post_likeUpdateWithWhereUniqueWithoutUserInput | post_likeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: post_likeUpdateManyWithWhereWithoutUserInput | post_likeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: post_likeScalarWhereInput | post_likeScalarWhereInput[]
  }

  export type post_reactionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<post_reactionCreateWithoutUserInput, post_reactionUncheckedCreateWithoutUserInput> | post_reactionCreateWithoutUserInput[] | post_reactionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: post_reactionCreateOrConnectWithoutUserInput | post_reactionCreateOrConnectWithoutUserInput[]
    upsert?: post_reactionUpsertWithWhereUniqueWithoutUserInput | post_reactionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: post_reactionCreateManyUserInputEnvelope
    set?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    disconnect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    delete?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    connect?: post_reactionWhereUniqueInput | post_reactionWhereUniqueInput[]
    update?: post_reactionUpdateWithWhereUniqueWithoutUserInput | post_reactionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: post_reactionUpdateManyWithWhereWithoutUserInput | post_reactionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: post_reactionScalarWhereInput | post_reactionScalarWhereInput[]
  }

  export type profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput = {
    create?: XOR<profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput> | profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput[] | profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput[]
    connectOrCreate?: profile_visitCreateOrConnectWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitCreateOrConnectWithoutUser_profile_visit_profile_user_idTouserInput[]
    upsert?: profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput[]
    createMany?: profile_visitCreateManyUser_profile_visit_profile_user_idTouserInputEnvelope
    set?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    disconnect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    delete?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    connect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    update?: profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput[]
    updateMany?: profile_visitUpdateManyWithWhereWithoutUser_profile_visit_profile_user_idTouserInput | profile_visitUpdateManyWithWhereWithoutUser_profile_visit_profile_user_idTouserInput[]
    deleteMany?: profile_visitScalarWhereInput | profile_visitScalarWhereInput[]
  }

  export type profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput = {
    create?: XOR<profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput> | profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput[] | profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput[]
    connectOrCreate?: profile_visitCreateOrConnectWithoutUser_profile_visit_visitor_idTouserInput | profile_visitCreateOrConnectWithoutUser_profile_visit_visitor_idTouserInput[]
    upsert?: profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput | profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput[]
    createMany?: profile_visitCreateManyUser_profile_visit_visitor_idTouserInputEnvelope
    set?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    disconnect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    delete?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    connect?: profile_visitWhereUniqueInput | profile_visitWhereUniqueInput[]
    update?: profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput | profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput[]
    updateMany?: profile_visitUpdateManyWithWhereWithoutUser_profile_visit_visitor_idTouserInput | profile_visitUpdateManyWithWhereWithoutUser_profile_visit_visitor_idTouserInput[]
    deleteMany?: profile_visitScalarWhereInput | profile_visitScalarWhereInput[]
  }

  export type reportUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<reportCreateWithoutUserInput, reportUncheckedCreateWithoutUserInput> | reportCreateWithoutUserInput[] | reportUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reportCreateOrConnectWithoutUserInput | reportCreateOrConnectWithoutUserInput[]
    upsert?: reportUpsertWithWhereUniqueWithoutUserInput | reportUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reportCreateManyUserInputEnvelope
    set?: reportWhereUniqueInput | reportWhereUniqueInput[]
    disconnect?: reportWhereUniqueInput | reportWhereUniqueInput[]
    delete?: reportWhereUniqueInput | reportWhereUniqueInput[]
    connect?: reportWhereUniqueInput | reportWhereUniqueInput[]
    update?: reportUpdateWithWhereUniqueWithoutUserInput | reportUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reportUpdateManyWithWhereWithoutUserInput | reportUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reportScalarWhereInput | reportScalarWhereInput[]
  }

  export type search_historyUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<search_historyCreateWithoutUserInput, search_historyUncheckedCreateWithoutUserInput> | search_historyCreateWithoutUserInput[] | search_historyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: search_historyCreateOrConnectWithoutUserInput | search_historyCreateOrConnectWithoutUserInput[]
    upsert?: search_historyUpsertWithWhereUniqueWithoutUserInput | search_historyUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: search_historyCreateManyUserInputEnvelope
    set?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
    disconnect?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
    delete?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
    connect?: search_historyWhereUniqueInput | search_historyWhereUniqueInput[]
    update?: search_historyUpdateWithWhereUniqueWithoutUserInput | search_historyUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: search_historyUpdateManyWithWhereWithoutUserInput | search_historyUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: search_historyScalarWhereInput | search_historyScalarWhereInput[]
  }

  export type user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput = {
    create?: XOR<user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput> | user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput[] | user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput[]
    connectOrCreate?: user_blockCreateOrConnectWithoutUser_user_block_blocked_user_idTouserInput | user_blockCreateOrConnectWithoutUser_user_block_blocked_user_idTouserInput[]
    upsert?: user_blockUpsertWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput | user_blockUpsertWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput[]
    createMany?: user_blockCreateManyUser_user_block_blocked_user_idTouserInputEnvelope
    set?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    disconnect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    delete?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    connect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    update?: user_blockUpdateWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput | user_blockUpdateWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput[]
    updateMany?: user_blockUpdateManyWithWhereWithoutUser_user_block_blocked_user_idTouserInput | user_blockUpdateManyWithWhereWithoutUser_user_block_blocked_user_idTouserInput[]
    deleteMany?: user_blockScalarWhereInput | user_blockScalarWhereInput[]
  }

  export type user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput = {
    create?: XOR<user_blockCreateWithoutUser_user_block_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput> | user_blockCreateWithoutUser_user_block_user_idTouserInput[] | user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput[]
    connectOrCreate?: user_blockCreateOrConnectWithoutUser_user_block_user_idTouserInput | user_blockCreateOrConnectWithoutUser_user_block_user_idTouserInput[]
    upsert?: user_blockUpsertWithWhereUniqueWithoutUser_user_block_user_idTouserInput | user_blockUpsertWithWhereUniqueWithoutUser_user_block_user_idTouserInput[]
    createMany?: user_blockCreateManyUser_user_block_user_idTouserInputEnvelope
    set?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    disconnect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    delete?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    connect?: user_blockWhereUniqueInput | user_blockWhereUniqueInput[]
    update?: user_blockUpdateWithWhereUniqueWithoutUser_user_block_user_idTouserInput | user_blockUpdateWithWhereUniqueWithoutUser_user_block_user_idTouserInput[]
    updateMany?: user_blockUpdateManyWithWhereWithoutUser_user_block_user_idTouserInput | user_blockUpdateManyWithWhereWithoutUser_user_block_user_idTouserInput[]
    deleteMany?: user_blockScalarWhereInput | user_blockScalarWhereInput[]
  }

  export type user_oauthUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<user_oauthCreateWithoutUserInput, user_oauthUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_oauthCreateOrConnectWithoutUserInput
    upsert?: user_oauthUpsertWithoutUserInput
    disconnect?: user_oauthWhereInput | boolean
    delete?: user_oauthWhereInput | boolean
    connect?: user_oauthWhereUniqueInput
    update?: XOR<XOR<user_oauthUpdateToOneWithWhereWithoutUserInput, user_oauthUpdateWithoutUserInput>, user_oauthUncheckedUpdateWithoutUserInput>
  }

  export type user_profileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<user_profileCreateWithoutUserInput, user_profileUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_profileCreateOrConnectWithoutUserInput
    upsert?: user_profileUpsertWithoutUserInput
    disconnect?: user_profileWhereInput | boolean
    delete?: user_profileWhereInput | boolean
    connect?: user_profileWhereUniqueInput
    update?: XOR<XOR<user_profileUpdateToOneWithWhereWithoutUserInput, user_profileUpdateWithoutUserInput>, user_profileUncheckedUpdateWithoutUserInput>
  }

  export type user_securityUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<user_securityCreateWithoutUserInput, user_securityUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_securityCreateOrConnectWithoutUserInput
    upsert?: user_securityUpsertWithoutUserInput
    disconnect?: user_securityWhereInput | boolean
    delete?: user_securityWhereInput | boolean
    connect?: user_securityWhereUniqueInput
    update?: XOR<XOR<user_securityUpdateToOneWithWhereWithoutUserInput, user_securityUpdateWithoutUserInput>, user_securityUncheckedUpdateWithoutUserInput>
  }

  export type userCreateNestedOneWithoutUser_block_user_block_blocked_user_idTouserInput = {
    create?: XOR<userCreateWithoutUser_block_user_block_blocked_user_idTouserInput, userUncheckedCreateWithoutUser_block_user_block_blocked_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_block_user_block_blocked_user_idTouserInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUser_block_user_block_user_idTouserInput = {
    create?: XOR<userCreateWithoutUser_block_user_block_user_idTouserInput, userUncheckedCreateWithoutUser_block_user_block_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_block_user_block_user_idTouserInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutUser_block_user_block_blocked_user_idTouserNestedInput = {
    create?: XOR<userCreateWithoutUser_block_user_block_blocked_user_idTouserInput, userUncheckedCreateWithoutUser_block_user_block_blocked_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_block_user_block_blocked_user_idTouserInput
    upsert?: userUpsertWithoutUser_block_user_block_blocked_user_idTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_block_user_block_blocked_user_idTouserInput, userUpdateWithoutUser_block_user_block_blocked_user_idTouserInput>, userUncheckedUpdateWithoutUser_block_user_block_blocked_user_idTouserInput>
  }

  export type userUpdateOneRequiredWithoutUser_block_user_block_user_idTouserNestedInput = {
    create?: XOR<userCreateWithoutUser_block_user_block_user_idTouserInput, userUncheckedCreateWithoutUser_block_user_block_user_idTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_block_user_block_user_idTouserInput
    upsert?: userUpsertWithoutUser_block_user_block_user_idTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_block_user_block_user_idTouserInput, userUpdateWithoutUser_block_user_block_user_idTouserInput>, userUncheckedUpdateWithoutUser_block_user_block_user_idTouserInput>
  }

  export type userCreateNestedOneWithoutUser_oauthInput = {
    create?: XOR<userCreateWithoutUser_oauthInput, userUncheckedCreateWithoutUser_oauthInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_oauthInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutUser_oauthNestedInput = {
    create?: XOR<userCreateWithoutUser_oauthInput, userUncheckedCreateWithoutUser_oauthInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_oauthInput
    upsert?: userUpsertWithoutUser_oauthInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_oauthInput, userUpdateWithoutUser_oauthInput>, userUncheckedUpdateWithoutUser_oauthInput>
  }

  export type userCreateNestedOneWithoutUser_profileInput = {
    create?: XOR<userCreateWithoutUser_profileInput, userUncheckedCreateWithoutUser_profileInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_profileInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutUser_profileNestedInput = {
    create?: XOR<userCreateWithoutUser_profileInput, userUncheckedCreateWithoutUser_profileInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_profileInput
    upsert?: userUpsertWithoutUser_profileInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_profileInput, userUpdateWithoutUser_profileInput>, userUncheckedUpdateWithoutUser_profileInput>
  }

  export type userCreateNestedOneWithoutUser_securityInput = {
    create?: XOR<userCreateWithoutUser_securityInput, userUncheckedCreateWithoutUser_securityInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_securityInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutUser_securityNestedInput = {
    create?: XOR<userCreateWithoutUser_securityInput, userUncheckedCreateWithoutUser_securityInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_securityInput
    upsert?: userUpsertWithoutUser_securityInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_securityInput, userUpdateWithoutUser_securityInput>, userUncheckedUpdateWithoutUser_securityInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumpost_visibilityFilter<$PrismaModel = never> = {
    equals?: $Enums.post_visibility | Enumpost_visibilityFieldRefInput<$PrismaModel>
    in?: $Enums.post_visibility[]
    notIn?: $Enums.post_visibility[]
    not?: NestedEnumpost_visibilityFilter<$PrismaModel> | $Enums.post_visibility
  }

  export type NestedEnumpost_visibilityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.post_visibility | Enumpost_visibilityFieldRefInput<$PrismaModel>
    in?: $Enums.post_visibility[]
    notIn?: $Enums.post_visibility[]
    not?: NestedEnumpost_visibilityWithAggregatesFilter<$PrismaModel> | $Enums.post_visibility
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpost_visibilityFilter<$PrismaModel>
    _max?: NestedEnumpost_visibilityFilter<$PrismaModel>
  }

  export type NestedEnumreport_target_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.report_target_type | Enumreport_target_typeFieldRefInput<$PrismaModel>
    in?: $Enums.report_target_type[]
    notIn?: $Enums.report_target_type[]
    not?: NestedEnumreport_target_typeFilter<$PrismaModel> | $Enums.report_target_type
  }

  export type NestedEnumreport_target_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.report_target_type | Enumreport_target_typeFieldRefInput<$PrismaModel>
    in?: $Enums.report_target_type[]
    notIn?: $Enums.report_target_type[]
    not?: NestedEnumreport_target_typeWithAggregatesFilter<$PrismaModel> | $Enums.report_target_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumreport_target_typeFilter<$PrismaModel>
    _max?: NestedEnumreport_target_typeFilter<$PrismaModel>
  }

  export type NestedEnumuser_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.user_status | Enumuser_statusFieldRefInput<$PrismaModel>
    in?: $Enums.user_status[]
    notIn?: $Enums.user_status[]
    not?: NestedEnumuser_statusFilter<$PrismaModel> | $Enums.user_status
  }

  export type NestedEnumuser_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_status | Enumuser_statusFieldRefInput<$PrismaModel>
    in?: $Enums.user_status[]
    notIn?: $Enums.user_status[]
    not?: NestedEnumuser_statusWithAggregatesFilter<$PrismaModel> | $Enums.user_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_statusFilter<$PrismaModel>
    _max?: NestedEnumuser_statusFilter<$PrismaModel>
  }

  export type chat_roomCreateWithoutChat_messageInput = {
    name?: string | null
    is_group?: boolean | null
    created_at?: Date | string
    chat_room_user?: chat_room_userCreateNestedManyWithoutChat_roomInput
    notification?: notificationCreateNestedManyWithoutChat_roomInput
  }

  export type chat_roomUncheckedCreateWithoutChat_messageInput = {
    id?: number
    name?: string | null
    is_group?: boolean | null
    created_at?: Date | string
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutChat_roomInput
    notification?: notificationUncheckedCreateNestedManyWithoutChat_roomInput
  }

  export type chat_roomCreateOrConnectWithoutChat_messageInput = {
    where: chat_roomWhereUniqueInput
    create: XOR<chat_roomCreateWithoutChat_messageInput, chat_roomUncheckedCreateWithoutChat_messageInput>
  }

  export type userCreateWithoutChat_messageInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutChat_messageInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutChat_messageInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutChat_messageInput, userUncheckedCreateWithoutChat_messageInput>
  }

  export type notificationCreateWithoutChat_messageInput = {
    type: string
    message?: string | null
    is_read?: boolean
    created_at?: Date | string
    chat_room?: chat_roomCreateNestedOneWithoutNotificationInput
    comment?: commentCreateNestedOneWithoutNotificationInput
    post?: postCreateNestedOneWithoutNotificationInput
    user_notification_source_user_idTouser?: userCreateNestedOneWithoutNotification_notification_source_user_idTouserInput
    user_notification_user_idTouser: userCreateNestedOneWithoutNotification_notification_user_idTouserInput
  }

  export type notificationUncheckedCreateWithoutChat_messageInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type notificationCreateOrConnectWithoutChat_messageInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutChat_messageInput, notificationUncheckedCreateWithoutChat_messageInput>
  }

  export type notificationCreateManyChat_messageInputEnvelope = {
    data: notificationCreateManyChat_messageInput | notificationCreateManyChat_messageInput[]
    skipDuplicates?: boolean
  }

  export type chat_roomUpsertWithoutChat_messageInput = {
    update: XOR<chat_roomUpdateWithoutChat_messageInput, chat_roomUncheckedUpdateWithoutChat_messageInput>
    create: XOR<chat_roomCreateWithoutChat_messageInput, chat_roomUncheckedCreateWithoutChat_messageInput>
    where?: chat_roomWhereInput
  }

  export type chat_roomUpdateToOneWithWhereWithoutChat_messageInput = {
    where?: chat_roomWhereInput
    data: XOR<chat_roomUpdateWithoutChat_messageInput, chat_roomUncheckedUpdateWithoutChat_messageInput>
  }

  export type chat_roomUpdateWithoutChat_messageInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_room_user?: chat_room_userUpdateManyWithoutChat_roomNestedInput
    notification?: notificationUpdateManyWithoutChat_roomNestedInput
  }

  export type chat_roomUncheckedUpdateWithoutChat_messageInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutChat_roomNestedInput
    notification?: notificationUncheckedUpdateManyWithoutChat_roomNestedInput
  }

  export type userUpsertWithoutChat_messageInput = {
    update: XOR<userUpdateWithoutChat_messageInput, userUncheckedUpdateWithoutChat_messageInput>
    create: XOR<userCreateWithoutChat_messageInput, userUncheckedCreateWithoutChat_messageInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutChat_messageInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutChat_messageInput, userUncheckedUpdateWithoutChat_messageInput>
  }

  export type userUpdateWithoutChat_messageInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutChat_messageInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type notificationUpsertWithWhereUniqueWithoutChat_messageInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutChat_messageInput, notificationUncheckedUpdateWithoutChat_messageInput>
    create: XOR<notificationCreateWithoutChat_messageInput, notificationUncheckedCreateWithoutChat_messageInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutChat_messageInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutChat_messageInput, notificationUncheckedUpdateWithoutChat_messageInput>
  }

  export type notificationUpdateManyWithWhereWithoutChat_messageInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutChat_messageInput>
  }

  export type notificationScalarWhereInput = {
    AND?: notificationScalarWhereInput | notificationScalarWhereInput[]
    OR?: notificationScalarWhereInput[]
    NOT?: notificationScalarWhereInput | notificationScalarWhereInput[]
    id?: IntFilter<"notification"> | number
    user_id?: IntFilter<"notification"> | number
    type?: StringFilter<"notification"> | string
    message?: StringNullableFilter<"notification"> | string | null
    is_read?: BoolFilter<"notification"> | boolean
    source_user_id?: IntNullableFilter<"notification"> | number | null
    related_post_id?: IntNullableFilter<"notification"> | number | null
    related_comment_id?: IntNullableFilter<"notification"> | number | null
    chat_message_id?: IntNullableFilter<"notification"> | number | null
    chat_room_id?: IntNullableFilter<"notification"> | number | null
    created_at?: DateTimeFilter<"notification"> | Date | string
  }

  export type chat_messageCreateWithoutChat_roomInput = {
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    user: userCreateNestedOneWithoutChat_messageInput
    notification?: notificationCreateNestedManyWithoutChat_messageInput
  }

  export type chat_messageUncheckedCreateWithoutChat_roomInput = {
    id?: number
    sender_id: number
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    notification?: notificationUncheckedCreateNestedManyWithoutChat_messageInput
  }

  export type chat_messageCreateOrConnectWithoutChat_roomInput = {
    where: chat_messageWhereUniqueInput
    create: XOR<chat_messageCreateWithoutChat_roomInput, chat_messageUncheckedCreateWithoutChat_roomInput>
  }

  export type chat_messageCreateManyChat_roomInputEnvelope = {
    data: chat_messageCreateManyChat_roomInput | chat_messageCreateManyChat_roomInput[]
    skipDuplicates?: boolean
  }

  export type chat_room_userCreateWithoutChat_roomInput = {
    left_at?: Date | string | null
    user: userCreateNestedOneWithoutChat_room_userInput
  }

  export type chat_room_userUncheckedCreateWithoutChat_roomInput = {
    id?: number
    user_id: number
    left_at?: Date | string | null
  }

  export type chat_room_userCreateOrConnectWithoutChat_roomInput = {
    where: chat_room_userWhereUniqueInput
    create: XOR<chat_room_userCreateWithoutChat_roomInput, chat_room_userUncheckedCreateWithoutChat_roomInput>
  }

  export type chat_room_userCreateManyChat_roomInputEnvelope = {
    data: chat_room_userCreateManyChat_roomInput | chat_room_userCreateManyChat_roomInput[]
    skipDuplicates?: boolean
  }

  export type notificationCreateWithoutChat_roomInput = {
    type: string
    message?: string | null
    is_read?: boolean
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedOneWithoutNotificationInput
    comment?: commentCreateNestedOneWithoutNotificationInput
    post?: postCreateNestedOneWithoutNotificationInput
    user_notification_source_user_idTouser?: userCreateNestedOneWithoutNotification_notification_source_user_idTouserInput
    user_notification_user_idTouser: userCreateNestedOneWithoutNotification_notification_user_idTouserInput
  }

  export type notificationUncheckedCreateWithoutChat_roomInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    created_at?: Date | string
  }

  export type notificationCreateOrConnectWithoutChat_roomInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutChat_roomInput, notificationUncheckedCreateWithoutChat_roomInput>
  }

  export type notificationCreateManyChat_roomInputEnvelope = {
    data: notificationCreateManyChat_roomInput | notificationCreateManyChat_roomInput[]
    skipDuplicates?: boolean
  }

  export type chat_messageUpsertWithWhereUniqueWithoutChat_roomInput = {
    where: chat_messageWhereUniqueInput
    update: XOR<chat_messageUpdateWithoutChat_roomInput, chat_messageUncheckedUpdateWithoutChat_roomInput>
    create: XOR<chat_messageCreateWithoutChat_roomInput, chat_messageUncheckedCreateWithoutChat_roomInput>
  }

  export type chat_messageUpdateWithWhereUniqueWithoutChat_roomInput = {
    where: chat_messageWhereUniqueInput
    data: XOR<chat_messageUpdateWithoutChat_roomInput, chat_messageUncheckedUpdateWithoutChat_roomInput>
  }

  export type chat_messageUpdateManyWithWhereWithoutChat_roomInput = {
    where: chat_messageScalarWhereInput
    data: XOR<chat_messageUpdateManyMutationInput, chat_messageUncheckedUpdateManyWithoutChat_roomInput>
  }

  export type chat_messageScalarWhereInput = {
    AND?: chat_messageScalarWhereInput | chat_messageScalarWhereInput[]
    OR?: chat_messageScalarWhereInput[]
    NOT?: chat_messageScalarWhereInput | chat_messageScalarWhereInput[]
    id?: IntFilter<"chat_message"> | number
    chatroom_id?: IntFilter<"chat_message"> | number
    sender_id?: IntFilter<"chat_message"> | number
    message?: StringNullableFilter<"chat_message"> | string | null
    file_url?: StringNullableFilter<"chat_message"> | string | null
    is_deleted?: BoolFilter<"chat_message"> | boolean
    created_at?: DateTimeFilter<"chat_message"> | Date | string
  }

  export type chat_room_userUpsertWithWhereUniqueWithoutChat_roomInput = {
    where: chat_room_userWhereUniqueInput
    update: XOR<chat_room_userUpdateWithoutChat_roomInput, chat_room_userUncheckedUpdateWithoutChat_roomInput>
    create: XOR<chat_room_userCreateWithoutChat_roomInput, chat_room_userUncheckedCreateWithoutChat_roomInput>
  }

  export type chat_room_userUpdateWithWhereUniqueWithoutChat_roomInput = {
    where: chat_room_userWhereUniqueInput
    data: XOR<chat_room_userUpdateWithoutChat_roomInput, chat_room_userUncheckedUpdateWithoutChat_roomInput>
  }

  export type chat_room_userUpdateManyWithWhereWithoutChat_roomInput = {
    where: chat_room_userScalarWhereInput
    data: XOR<chat_room_userUpdateManyMutationInput, chat_room_userUncheckedUpdateManyWithoutChat_roomInput>
  }

  export type chat_room_userScalarWhereInput = {
    AND?: chat_room_userScalarWhereInput | chat_room_userScalarWhereInput[]
    OR?: chat_room_userScalarWhereInput[]
    NOT?: chat_room_userScalarWhereInput | chat_room_userScalarWhereInput[]
    id?: IntFilter<"chat_room_user"> | number
    chatroom_id?: IntFilter<"chat_room_user"> | number
    user_id?: IntFilter<"chat_room_user"> | number
    left_at?: DateTimeNullableFilter<"chat_room_user"> | Date | string | null
  }

  export type notificationUpsertWithWhereUniqueWithoutChat_roomInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutChat_roomInput, notificationUncheckedUpdateWithoutChat_roomInput>
    create: XOR<notificationCreateWithoutChat_roomInput, notificationUncheckedCreateWithoutChat_roomInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutChat_roomInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutChat_roomInput, notificationUncheckedUpdateWithoutChat_roomInput>
  }

  export type notificationUpdateManyWithWhereWithoutChat_roomInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutChat_roomInput>
  }

  export type chat_roomCreateWithoutChat_room_userInput = {
    name?: string | null
    is_group?: boolean | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutChat_roomInput
    notification?: notificationCreateNestedManyWithoutChat_roomInput
  }

  export type chat_roomUncheckedCreateWithoutChat_room_userInput = {
    id?: number
    name?: string | null
    is_group?: boolean | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutChat_roomInput
    notification?: notificationUncheckedCreateNestedManyWithoutChat_roomInput
  }

  export type chat_roomCreateOrConnectWithoutChat_room_userInput = {
    where: chat_roomWhereUniqueInput
    create: XOR<chat_roomCreateWithoutChat_room_userInput, chat_roomUncheckedCreateWithoutChat_room_userInput>
  }

  export type userCreateWithoutChat_room_userInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutChat_room_userInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutChat_room_userInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutChat_room_userInput, userUncheckedCreateWithoutChat_room_userInput>
  }

  export type chat_roomUpsertWithoutChat_room_userInput = {
    update: XOR<chat_roomUpdateWithoutChat_room_userInput, chat_roomUncheckedUpdateWithoutChat_room_userInput>
    create: XOR<chat_roomCreateWithoutChat_room_userInput, chat_roomUncheckedCreateWithoutChat_room_userInput>
    where?: chat_roomWhereInput
  }

  export type chat_roomUpdateToOneWithWhereWithoutChat_room_userInput = {
    where?: chat_roomWhereInput
    data: XOR<chat_roomUpdateWithoutChat_room_userInput, chat_roomUncheckedUpdateWithoutChat_room_userInput>
  }

  export type chat_roomUpdateWithoutChat_room_userInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutChat_roomNestedInput
    notification?: notificationUpdateManyWithoutChat_roomNestedInput
  }

  export type chat_roomUncheckedUpdateWithoutChat_room_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutChat_roomNestedInput
    notification?: notificationUncheckedUpdateManyWithoutChat_roomNestedInput
  }

  export type userUpsertWithoutChat_room_userInput = {
    update: XOR<userUpdateWithoutChat_room_userInput, userUncheckedUpdateWithoutChat_room_userInput>
    create: XOR<userCreateWithoutChat_room_userInput, userUncheckedCreateWithoutChat_room_userInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutChat_room_userInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutChat_room_userInput, userUncheckedUpdateWithoutChat_room_userInput>
  }

  export type userUpdateWithoutChat_room_userInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutChat_room_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type commentCreateWithoutOther_commentInput = {
    content?: string | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedOneWithoutOther_commentInput
    post: postCreateNestedOneWithoutCommentInput
    user: userCreateNestedOneWithoutCommentInput
    comment_like?: comment_likeCreateNestedManyWithoutCommentInput
    notification?: notificationCreateNestedManyWithoutCommentInput
  }

  export type commentUncheckedCreateWithoutOther_commentInput = {
    id?: number
    post_id: number
    user_id: number
    content?: string | null
    parent_id?: number | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutCommentInput
    notification?: notificationUncheckedCreateNestedManyWithoutCommentInput
  }

  export type commentCreateOrConnectWithoutOther_commentInput = {
    where: commentWhereUniqueInput
    create: XOR<commentCreateWithoutOther_commentInput, commentUncheckedCreateWithoutOther_commentInput>
  }

  export type commentCreateWithoutCommentInput = {
    content?: string | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    other_comment?: commentCreateNestedManyWithoutCommentInput
    post: postCreateNestedOneWithoutCommentInput
    user: userCreateNestedOneWithoutCommentInput
    comment_like?: comment_likeCreateNestedManyWithoutCommentInput
    notification?: notificationCreateNestedManyWithoutCommentInput
  }

  export type commentUncheckedCreateWithoutCommentInput = {
    id?: number
    post_id: number
    user_id: number
    content?: string | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    other_comment?: commentUncheckedCreateNestedManyWithoutCommentInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutCommentInput
    notification?: notificationUncheckedCreateNestedManyWithoutCommentInput
  }

  export type commentCreateOrConnectWithoutCommentInput = {
    where: commentWhereUniqueInput
    create: XOR<commentCreateWithoutCommentInput, commentUncheckedCreateWithoutCommentInput>
  }

  export type commentCreateManyCommentInputEnvelope = {
    data: commentCreateManyCommentInput | commentCreateManyCommentInput[]
    skipDuplicates?: boolean
  }

  export type postCreateWithoutCommentInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    feed_cache?: feed_cacheCreateNestedManyWithoutPostInput
    notification?: notificationCreateNestedManyWithoutPostInput
    community: communityCreateNestedOneWithoutPostInput
    user: userCreateNestedOneWithoutPostInput
    post_file?: post_fileCreateNestedManyWithoutPostInput
    post_like?: post_likeCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionCreateNestedManyWithoutPostInput
    post_tag?: post_tagCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateWithoutCommentInput = {
    id?: number
    user_id: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutPostInput
    notification?: notificationUncheckedCreateNestedManyWithoutPostInput
    post_file?: post_fileUncheckedCreateNestedManyWithoutPostInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutPostInput
    post_tag?: post_tagUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutCommentInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutCommentInput, postUncheckedCreateWithoutCommentInput>
  }

  export type userCreateWithoutCommentInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutCommentInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutCommentInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCommentInput, userUncheckedCreateWithoutCommentInput>
  }

  export type comment_likeCreateWithoutCommentInput = {
    created_at?: Date | string
    user: userCreateNestedOneWithoutComment_likeInput
  }

  export type comment_likeUncheckedCreateWithoutCommentInput = {
    id?: number
    user_id: number
    created_at?: Date | string
  }

  export type comment_likeCreateOrConnectWithoutCommentInput = {
    where: comment_likeWhereUniqueInput
    create: XOR<comment_likeCreateWithoutCommentInput, comment_likeUncheckedCreateWithoutCommentInput>
  }

  export type comment_likeCreateManyCommentInputEnvelope = {
    data: comment_likeCreateManyCommentInput | comment_likeCreateManyCommentInput[]
    skipDuplicates?: boolean
  }

  export type notificationCreateWithoutCommentInput = {
    type: string
    message?: string | null
    is_read?: boolean
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedOneWithoutNotificationInput
    chat_room?: chat_roomCreateNestedOneWithoutNotificationInput
    post?: postCreateNestedOneWithoutNotificationInput
    user_notification_source_user_idTouser?: userCreateNestedOneWithoutNotification_notification_source_user_idTouserInput
    user_notification_user_idTouser: userCreateNestedOneWithoutNotification_notification_user_idTouserInput
  }

  export type notificationUncheckedCreateWithoutCommentInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type notificationCreateOrConnectWithoutCommentInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutCommentInput, notificationUncheckedCreateWithoutCommentInput>
  }

  export type notificationCreateManyCommentInputEnvelope = {
    data: notificationCreateManyCommentInput | notificationCreateManyCommentInput[]
    skipDuplicates?: boolean
  }

  export type commentUpsertWithoutOther_commentInput = {
    update: XOR<commentUpdateWithoutOther_commentInput, commentUncheckedUpdateWithoutOther_commentInput>
    create: XOR<commentCreateWithoutOther_commentInput, commentUncheckedCreateWithoutOther_commentInput>
    where?: commentWhereInput
  }

  export type commentUpdateToOneWithWhereWithoutOther_commentInput = {
    where?: commentWhereInput
    data: XOR<commentUpdateWithoutOther_commentInput, commentUncheckedUpdateWithoutOther_commentInput>
  }

  export type commentUpdateWithoutOther_commentInput = {
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateOneWithoutOther_commentNestedInput
    post?: postUpdateOneRequiredWithoutCommentNestedInput
    user?: userUpdateOneRequiredWithoutCommentNestedInput
    comment_like?: comment_likeUpdateManyWithoutCommentNestedInput
    notification?: notificationUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateWithoutOther_commentInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment_like?: comment_likeUncheckedUpdateManyWithoutCommentNestedInput
    notification?: notificationUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type commentUpsertWithWhereUniqueWithoutCommentInput = {
    where: commentWhereUniqueInput
    update: XOR<commentUpdateWithoutCommentInput, commentUncheckedUpdateWithoutCommentInput>
    create: XOR<commentCreateWithoutCommentInput, commentUncheckedCreateWithoutCommentInput>
  }

  export type commentUpdateWithWhereUniqueWithoutCommentInput = {
    where: commentWhereUniqueInput
    data: XOR<commentUpdateWithoutCommentInput, commentUncheckedUpdateWithoutCommentInput>
  }

  export type commentUpdateManyWithWhereWithoutCommentInput = {
    where: commentScalarWhereInput
    data: XOR<commentUpdateManyMutationInput, commentUncheckedUpdateManyWithoutCommentInput>
  }

  export type commentScalarWhereInput = {
    AND?: commentScalarWhereInput | commentScalarWhereInput[]
    OR?: commentScalarWhereInput[]
    NOT?: commentScalarWhereInput | commentScalarWhereInput[]
    id?: IntFilter<"comment"> | number
    post_id?: IntFilter<"comment"> | number
    user_id?: IntFilter<"comment"> | number
    content?: StringNullableFilter<"comment"> | string | null
    parent_id?: IntNullableFilter<"comment"> | number | null
    is_anonymous?: BoolFilter<"comment"> | boolean
    is_blinded?: BoolFilter<"comment"> | boolean
    is_deleted?: BoolFilter<"comment"> | boolean
    created_at?: DateTimeFilter<"comment"> | Date | string
    updated_at?: DateTimeNullableFilter<"comment"> | Date | string | null
  }

  export type postUpsertWithoutCommentInput = {
    update: XOR<postUpdateWithoutCommentInput, postUncheckedUpdateWithoutCommentInput>
    create: XOR<postCreateWithoutCommentInput, postUncheckedCreateWithoutCommentInput>
    where?: postWhereInput
  }

  export type postUpdateToOneWithWhereWithoutCommentInput = {
    where?: postWhereInput
    data: XOR<postUpdateWithoutCommentInput, postUncheckedUpdateWithoutCommentInput>
  }

  export type postUpdateWithoutCommentInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    feed_cache?: feed_cacheUpdateManyWithoutPostNestedInput
    notification?: notificationUpdateManyWithoutPostNestedInput
    community?: communityUpdateOneRequiredWithoutPostNestedInput
    user?: userUpdateOneRequiredWithoutPostNestedInput
    post_file?: post_fileUpdateManyWithoutPostNestedInput
    post_like?: post_likeUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutPostNestedInput
    notification?: notificationUncheckedUpdateManyWithoutPostNestedInput
    post_file?: post_fileUncheckedUpdateManyWithoutPostNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUncheckedUpdateManyWithoutPostNestedInput
  }

  export type userUpsertWithoutCommentInput = {
    update: XOR<userUpdateWithoutCommentInput, userUncheckedUpdateWithoutCommentInput>
    create: XOR<userCreateWithoutCommentInput, userUncheckedCreateWithoutCommentInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCommentInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCommentInput, userUncheckedUpdateWithoutCommentInput>
  }

  export type userUpdateWithoutCommentInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type comment_likeUpsertWithWhereUniqueWithoutCommentInput = {
    where: comment_likeWhereUniqueInput
    update: XOR<comment_likeUpdateWithoutCommentInput, comment_likeUncheckedUpdateWithoutCommentInput>
    create: XOR<comment_likeCreateWithoutCommentInput, comment_likeUncheckedCreateWithoutCommentInput>
  }

  export type comment_likeUpdateWithWhereUniqueWithoutCommentInput = {
    where: comment_likeWhereUniqueInput
    data: XOR<comment_likeUpdateWithoutCommentInput, comment_likeUncheckedUpdateWithoutCommentInput>
  }

  export type comment_likeUpdateManyWithWhereWithoutCommentInput = {
    where: comment_likeScalarWhereInput
    data: XOR<comment_likeUpdateManyMutationInput, comment_likeUncheckedUpdateManyWithoutCommentInput>
  }

  export type comment_likeScalarWhereInput = {
    AND?: comment_likeScalarWhereInput | comment_likeScalarWhereInput[]
    OR?: comment_likeScalarWhereInput[]
    NOT?: comment_likeScalarWhereInput | comment_likeScalarWhereInput[]
    id?: IntFilter<"comment_like"> | number
    comment_id?: IntFilter<"comment_like"> | number
    user_id?: IntFilter<"comment_like"> | number
    created_at?: DateTimeFilter<"comment_like"> | Date | string
  }

  export type notificationUpsertWithWhereUniqueWithoutCommentInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutCommentInput, notificationUncheckedUpdateWithoutCommentInput>
    create: XOR<notificationCreateWithoutCommentInput, notificationUncheckedCreateWithoutCommentInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutCommentInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutCommentInput, notificationUncheckedUpdateWithoutCommentInput>
  }

  export type notificationUpdateManyWithWhereWithoutCommentInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutCommentInput>
  }

  export type commentCreateWithoutComment_likeInput = {
    content?: string | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedOneWithoutOther_commentInput
    other_comment?: commentCreateNestedManyWithoutCommentInput
    post: postCreateNestedOneWithoutCommentInput
    user: userCreateNestedOneWithoutCommentInput
    notification?: notificationCreateNestedManyWithoutCommentInput
  }

  export type commentUncheckedCreateWithoutComment_likeInput = {
    id?: number
    post_id: number
    user_id: number
    content?: string | null
    parent_id?: number | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    other_comment?: commentUncheckedCreateNestedManyWithoutCommentInput
    notification?: notificationUncheckedCreateNestedManyWithoutCommentInput
  }

  export type commentCreateOrConnectWithoutComment_likeInput = {
    where: commentWhereUniqueInput
    create: XOR<commentCreateWithoutComment_likeInput, commentUncheckedCreateWithoutComment_likeInput>
  }

  export type userCreateWithoutComment_likeInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutComment_likeInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutComment_likeInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutComment_likeInput, userUncheckedCreateWithoutComment_likeInput>
  }

  export type commentUpsertWithoutComment_likeInput = {
    update: XOR<commentUpdateWithoutComment_likeInput, commentUncheckedUpdateWithoutComment_likeInput>
    create: XOR<commentCreateWithoutComment_likeInput, commentUncheckedCreateWithoutComment_likeInput>
    where?: commentWhereInput
  }

  export type commentUpdateToOneWithWhereWithoutComment_likeInput = {
    where?: commentWhereInput
    data: XOR<commentUpdateWithoutComment_likeInput, commentUncheckedUpdateWithoutComment_likeInput>
  }

  export type commentUpdateWithoutComment_likeInput = {
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateOneWithoutOther_commentNestedInput
    other_comment?: commentUpdateManyWithoutCommentNestedInput
    post?: postUpdateOneRequiredWithoutCommentNestedInput
    user?: userUpdateOneRequiredWithoutCommentNestedInput
    notification?: notificationUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateWithoutComment_likeInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    other_comment?: commentUncheckedUpdateManyWithoutCommentNestedInput
    notification?: notificationUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type userUpsertWithoutComment_likeInput = {
    update: XOR<userUpdateWithoutComment_likeInput, userUncheckedUpdateWithoutComment_likeInput>
    create: XOR<userCreateWithoutComment_likeInput, userUncheckedCreateWithoutComment_likeInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutComment_likeInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutComment_likeInput, userUncheckedUpdateWithoutComment_likeInput>
  }

  export type userUpdateWithoutComment_likeInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutComment_likeInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userCreateWithoutCommunityInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutCommunityInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutCommunityInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutCommunityInput, userUncheckedCreateWithoutCommunityInput>
  }

  export type postCreateWithoutCommunityInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheCreateNestedManyWithoutPostInput
    notification?: notificationCreateNestedManyWithoutPostInput
    user: userCreateNestedOneWithoutPostInput
    post_file?: post_fileCreateNestedManyWithoutPostInput
    post_like?: post_likeCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionCreateNestedManyWithoutPostInput
    post_tag?: post_tagCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateWithoutCommunityInput = {
    id?: number
    user_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentUncheckedCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutPostInput
    notification?: notificationUncheckedCreateNestedManyWithoutPostInput
    post_file?: post_fileUncheckedCreateNestedManyWithoutPostInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutPostInput
    post_tag?: post_tagUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutCommunityInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutCommunityInput, postUncheckedCreateWithoutCommunityInput>
  }

  export type postCreateManyCommunityInputEnvelope = {
    data: postCreateManyCommunityInput | postCreateManyCommunityInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithoutCommunityInput = {
    update: XOR<userUpdateWithoutCommunityInput, userUncheckedUpdateWithoutCommunityInput>
    create: XOR<userCreateWithoutCommunityInput, userUncheckedCreateWithoutCommunityInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutCommunityInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutCommunityInput, userUncheckedUpdateWithoutCommunityInput>
  }

  export type userUpdateWithoutCommunityInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutCommunityInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type postUpsertWithWhereUniqueWithoutCommunityInput = {
    where: postWhereUniqueInput
    update: XOR<postUpdateWithoutCommunityInput, postUncheckedUpdateWithoutCommunityInput>
    create: XOR<postCreateWithoutCommunityInput, postUncheckedCreateWithoutCommunityInput>
  }

  export type postUpdateWithWhereUniqueWithoutCommunityInput = {
    where: postWhereUniqueInput
    data: XOR<postUpdateWithoutCommunityInput, postUncheckedUpdateWithoutCommunityInput>
  }

  export type postUpdateManyWithWhereWithoutCommunityInput = {
    where: postScalarWhereInput
    data: XOR<postUpdateManyMutationInput, postUncheckedUpdateManyWithoutCommunityInput>
  }

  export type postScalarWhereInput = {
    AND?: postScalarWhereInput | postScalarWhereInput[]
    OR?: postScalarWhereInput[]
    NOT?: postScalarWhereInput | postScalarWhereInput[]
    id?: IntFilter<"post"> | number
    user_id?: IntFilter<"post"> | number
    community_id?: IntFilter<"post"> | number
    title?: StringNullableFilter<"post"> | string | null
    content?: StringNullableFilter<"post"> | string | null
    is_anonymous?: BoolFilter<"post"> | boolean
    visibility?: Enumpost_visibilityFilter<"post"> | $Enums.post_visibility
    view_count?: IntFilter<"post"> | number
    comment_count?: IntFilter<"post"> | number
    is_blinded?: BoolFilter<"post"> | boolean
    is_deleted?: BoolFilter<"post"> | boolean
    created_at?: DateTimeFilter<"post"> | Date | string
    updated_at?: DateTimeNullableFilter<"post"> | Date | string | null
  }

  export type post_reactionCreateWithoutEmojiInput = {
    created_at?: Date | string
    post: postCreateNestedOneWithoutPost_reactionInput
    user: userCreateNestedOneWithoutPost_reactionInput
  }

  export type post_reactionUncheckedCreateWithoutEmojiInput = {
    post_id: number
    user_id: number
    created_at?: Date | string
  }

  export type post_reactionCreateOrConnectWithoutEmojiInput = {
    where: post_reactionWhereUniqueInput
    create: XOR<post_reactionCreateWithoutEmojiInput, post_reactionUncheckedCreateWithoutEmojiInput>
  }

  export type post_reactionCreateManyEmojiInputEnvelope = {
    data: post_reactionCreateManyEmojiInput | post_reactionCreateManyEmojiInput[]
    skipDuplicates?: boolean
  }

  export type post_reactionUpsertWithWhereUniqueWithoutEmojiInput = {
    where: post_reactionWhereUniqueInput
    update: XOR<post_reactionUpdateWithoutEmojiInput, post_reactionUncheckedUpdateWithoutEmojiInput>
    create: XOR<post_reactionCreateWithoutEmojiInput, post_reactionUncheckedCreateWithoutEmojiInput>
  }

  export type post_reactionUpdateWithWhereUniqueWithoutEmojiInput = {
    where: post_reactionWhereUniqueInput
    data: XOR<post_reactionUpdateWithoutEmojiInput, post_reactionUncheckedUpdateWithoutEmojiInput>
  }

  export type post_reactionUpdateManyWithWhereWithoutEmojiInput = {
    where: post_reactionScalarWhereInput
    data: XOR<post_reactionUpdateManyMutationInput, post_reactionUncheckedUpdateManyWithoutEmojiInput>
  }

  export type post_reactionScalarWhereInput = {
    AND?: post_reactionScalarWhereInput | post_reactionScalarWhereInput[]
    OR?: post_reactionScalarWhereInput[]
    NOT?: post_reactionScalarWhereInput | post_reactionScalarWhereInput[]
    post_id?: IntFilter<"post_reaction"> | number
    user_id?: IntFilter<"post_reaction"> | number
    emoji_id?: IntFilter<"post_reaction"> | number
    created_at?: DateTimeFilter<"post_reaction"> | Date | string
  }

  export type postCreateWithoutFeed_cacheInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedManyWithoutPostInput
    notification?: notificationCreateNestedManyWithoutPostInput
    community: communityCreateNestedOneWithoutPostInput
    user: userCreateNestedOneWithoutPostInput
    post_file?: post_fileCreateNestedManyWithoutPostInput
    post_like?: post_likeCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionCreateNestedManyWithoutPostInput
    post_tag?: post_tagCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateWithoutFeed_cacheInput = {
    id?: number
    user_id: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentUncheckedCreateNestedManyWithoutPostInput
    notification?: notificationUncheckedCreateNestedManyWithoutPostInput
    post_file?: post_fileUncheckedCreateNestedManyWithoutPostInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutPostInput
    post_tag?: post_tagUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutFeed_cacheInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutFeed_cacheInput, postUncheckedCreateWithoutFeed_cacheInput>
  }

  export type userCreateWithoutFeed_cacheInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutFeed_cacheInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutFeed_cacheInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutFeed_cacheInput, userUncheckedCreateWithoutFeed_cacheInput>
  }

  export type postUpsertWithoutFeed_cacheInput = {
    update: XOR<postUpdateWithoutFeed_cacheInput, postUncheckedUpdateWithoutFeed_cacheInput>
    create: XOR<postCreateWithoutFeed_cacheInput, postUncheckedCreateWithoutFeed_cacheInput>
    where?: postWhereInput
  }

  export type postUpdateToOneWithWhereWithoutFeed_cacheInput = {
    where?: postWhereInput
    data: XOR<postUpdateWithoutFeed_cacheInput, postUncheckedUpdateWithoutFeed_cacheInput>
  }

  export type postUpdateWithoutFeed_cacheInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateManyWithoutPostNestedInput
    notification?: notificationUpdateManyWithoutPostNestedInput
    community?: communityUpdateOneRequiredWithoutPostNestedInput
    user?: userUpdateOneRequiredWithoutPostNestedInput
    post_file?: post_fileUpdateManyWithoutPostNestedInput
    post_like?: post_likeUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutFeed_cacheInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUncheckedUpdateManyWithoutPostNestedInput
    notification?: notificationUncheckedUpdateManyWithoutPostNestedInput
    post_file?: post_fileUncheckedUpdateManyWithoutPostNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUncheckedUpdateManyWithoutPostNestedInput
  }

  export type userUpsertWithoutFeed_cacheInput = {
    update: XOR<userUpdateWithoutFeed_cacheInput, userUncheckedUpdateWithoutFeed_cacheInput>
    create: XOR<userCreateWithoutFeed_cacheInput, userUncheckedCreateWithoutFeed_cacheInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutFeed_cacheInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutFeed_cacheInput, userUncheckedUpdateWithoutFeed_cacheInput>
  }

  export type userUpdateWithoutFeed_cacheInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutFeed_cacheInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type post_fileCreateWithoutFile_reportInput = {
    file_url?: string | null
    file_type?: string | null
    is_thumbnail?: boolean
    uploaded_at?: Date | string
    post: postCreateNestedOneWithoutPost_fileInput
  }

  export type post_fileUncheckedCreateWithoutFile_reportInput = {
    id?: number
    post_id: number
    file_url?: string | null
    file_type?: string | null
    is_thumbnail?: boolean
    uploaded_at?: Date | string
  }

  export type post_fileCreateOrConnectWithoutFile_reportInput = {
    where: post_fileWhereUniqueInput
    create: XOR<post_fileCreateWithoutFile_reportInput, post_fileUncheckedCreateWithoutFile_reportInput>
  }

  export type userCreateWithoutFile_reportInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutFile_reportInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutFile_reportInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutFile_reportInput, userUncheckedCreateWithoutFile_reportInput>
  }

  export type post_fileUpsertWithoutFile_reportInput = {
    update: XOR<post_fileUpdateWithoutFile_reportInput, post_fileUncheckedUpdateWithoutFile_reportInput>
    create: XOR<post_fileCreateWithoutFile_reportInput, post_fileUncheckedCreateWithoutFile_reportInput>
    where?: post_fileWhereInput
  }

  export type post_fileUpdateToOneWithWhereWithoutFile_reportInput = {
    where?: post_fileWhereInput
    data: XOR<post_fileUpdateWithoutFile_reportInput, post_fileUncheckedUpdateWithoutFile_reportInput>
  }

  export type post_fileUpdateWithoutFile_reportInput = {
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_thumbnail?: BoolFieldUpdateOperationsInput | boolean
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postUpdateOneRequiredWithoutPost_fileNestedInput
  }

  export type post_fileUncheckedUpdateWithoutFile_reportInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_thumbnail?: BoolFieldUpdateOperationsInput | boolean
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type userUpsertWithoutFile_reportInput = {
    update: XOR<userUpdateWithoutFile_reportInput, userUncheckedUpdateWithoutFile_reportInput>
    create: XOR<userCreateWithoutFile_reportInput, userUncheckedCreateWithoutFile_reportInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutFile_reportInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutFile_reportInput, userUncheckedUpdateWithoutFile_reportInput>
  }

  export type userUpdateWithoutFile_reportInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutFile_reportInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userCreateWithoutFollow_follow_follower_idTouserInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutFollow_follow_follower_idTouserInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutFollow_follow_follower_idTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutFollow_follow_follower_idTouserInput, userUncheckedCreateWithoutFollow_follow_follower_idTouserInput>
  }

  export type userCreateWithoutFollow_follow_following_idTouserInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutFollow_follow_following_idTouserInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutFollow_follow_following_idTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutFollow_follow_following_idTouserInput, userUncheckedCreateWithoutFollow_follow_following_idTouserInput>
  }

  export type userUpsertWithoutFollow_follow_follower_idTouserInput = {
    update: XOR<userUpdateWithoutFollow_follow_follower_idTouserInput, userUncheckedUpdateWithoutFollow_follow_follower_idTouserInput>
    create: XOR<userCreateWithoutFollow_follow_follower_idTouserInput, userUncheckedCreateWithoutFollow_follow_follower_idTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutFollow_follow_follower_idTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutFollow_follow_follower_idTouserInput, userUncheckedUpdateWithoutFollow_follow_follower_idTouserInput>
  }

  export type userUpdateWithoutFollow_follow_follower_idTouserInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutFollow_follow_follower_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userUpsertWithoutFollow_follow_following_idTouserInput = {
    update: XOR<userUpdateWithoutFollow_follow_following_idTouserInput, userUncheckedUpdateWithoutFollow_follow_following_idTouserInput>
    create: XOR<userCreateWithoutFollow_follow_following_idTouserInput, userUncheckedCreateWithoutFollow_follow_following_idTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutFollow_follow_following_idTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutFollow_follow_following_idTouserInput, userUncheckedUpdateWithoutFollow_follow_following_idTouserInput>
  }

  export type userUpdateWithoutFollow_follow_following_idTouserInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutFollow_follow_following_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type chat_messageCreateWithoutNotificationInput = {
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    chat_room: chat_roomCreateNestedOneWithoutChat_messageInput
    user: userCreateNestedOneWithoutChat_messageInput
  }

  export type chat_messageUncheckedCreateWithoutNotificationInput = {
    id?: number
    chatroom_id: number
    sender_id: number
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
  }

  export type chat_messageCreateOrConnectWithoutNotificationInput = {
    where: chat_messageWhereUniqueInput
    create: XOR<chat_messageCreateWithoutNotificationInput, chat_messageUncheckedCreateWithoutNotificationInput>
  }

  export type chat_roomCreateWithoutNotificationInput = {
    name?: string | null
    is_group?: boolean | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutChat_roomInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutChat_roomInput
  }

  export type chat_roomUncheckedCreateWithoutNotificationInput = {
    id?: number
    name?: string | null
    is_group?: boolean | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutChat_roomInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutChat_roomInput
  }

  export type chat_roomCreateOrConnectWithoutNotificationInput = {
    where: chat_roomWhereUniqueInput
    create: XOR<chat_roomCreateWithoutNotificationInput, chat_roomUncheckedCreateWithoutNotificationInput>
  }

  export type commentCreateWithoutNotificationInput = {
    content?: string | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedOneWithoutOther_commentInput
    other_comment?: commentCreateNestedManyWithoutCommentInput
    post: postCreateNestedOneWithoutCommentInput
    user: userCreateNestedOneWithoutCommentInput
    comment_like?: comment_likeCreateNestedManyWithoutCommentInput
  }

  export type commentUncheckedCreateWithoutNotificationInput = {
    id?: number
    post_id: number
    user_id: number
    content?: string | null
    parent_id?: number | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    other_comment?: commentUncheckedCreateNestedManyWithoutCommentInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutCommentInput
  }

  export type commentCreateOrConnectWithoutNotificationInput = {
    where: commentWhereUniqueInput
    create: XOR<commentCreateWithoutNotificationInput, commentUncheckedCreateWithoutNotificationInput>
  }

  export type postCreateWithoutNotificationInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheCreateNestedManyWithoutPostInput
    community: communityCreateNestedOneWithoutPostInput
    user: userCreateNestedOneWithoutPostInput
    post_file?: post_fileCreateNestedManyWithoutPostInput
    post_like?: post_likeCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionCreateNestedManyWithoutPostInput
    post_tag?: post_tagCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateWithoutNotificationInput = {
    id?: number
    user_id: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentUncheckedCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutPostInput
    post_file?: post_fileUncheckedCreateNestedManyWithoutPostInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutPostInput
    post_tag?: post_tagUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutNotificationInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutNotificationInput, postUncheckedCreateWithoutNotificationInput>
  }

  export type userCreateWithoutNotification_notification_source_user_idTouserInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutNotification_notification_source_user_idTouserInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutNotification_notification_source_user_idTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutNotification_notification_source_user_idTouserInput, userUncheckedCreateWithoutNotification_notification_source_user_idTouserInput>
  }

  export type userCreateWithoutNotification_notification_user_idTouserInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutNotification_notification_user_idTouserInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutNotification_notification_user_idTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutNotification_notification_user_idTouserInput, userUncheckedCreateWithoutNotification_notification_user_idTouserInput>
  }

  export type chat_messageUpsertWithoutNotificationInput = {
    update: XOR<chat_messageUpdateWithoutNotificationInput, chat_messageUncheckedUpdateWithoutNotificationInput>
    create: XOR<chat_messageCreateWithoutNotificationInput, chat_messageUncheckedCreateWithoutNotificationInput>
    where?: chat_messageWhereInput
  }

  export type chat_messageUpdateToOneWithWhereWithoutNotificationInput = {
    where?: chat_messageWhereInput
    data: XOR<chat_messageUpdateWithoutNotificationInput, chat_messageUncheckedUpdateWithoutNotificationInput>
  }

  export type chat_messageUpdateWithoutNotificationInput = {
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_room?: chat_roomUpdateOneRequiredWithoutChat_messageNestedInput
    user?: userUpdateOneRequiredWithoutChat_messageNestedInput
  }

  export type chat_messageUncheckedUpdateWithoutNotificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    chatroom_id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_roomUpsertWithoutNotificationInput = {
    update: XOR<chat_roomUpdateWithoutNotificationInput, chat_roomUncheckedUpdateWithoutNotificationInput>
    create: XOR<chat_roomCreateWithoutNotificationInput, chat_roomUncheckedCreateWithoutNotificationInput>
    where?: chat_roomWhereInput
  }

  export type chat_roomUpdateToOneWithWhereWithoutNotificationInput = {
    where?: chat_roomWhereInput
    data: XOR<chat_roomUpdateWithoutNotificationInput, chat_roomUncheckedUpdateWithoutNotificationInput>
  }

  export type chat_roomUpdateWithoutNotificationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutChat_roomNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutChat_roomNestedInput
  }

  export type chat_roomUncheckedUpdateWithoutNotificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_group?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutChat_roomNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutChat_roomNestedInput
  }

  export type commentUpsertWithoutNotificationInput = {
    update: XOR<commentUpdateWithoutNotificationInput, commentUncheckedUpdateWithoutNotificationInput>
    create: XOR<commentCreateWithoutNotificationInput, commentUncheckedCreateWithoutNotificationInput>
    where?: commentWhereInput
  }

  export type commentUpdateToOneWithWhereWithoutNotificationInput = {
    where?: commentWhereInput
    data: XOR<commentUpdateWithoutNotificationInput, commentUncheckedUpdateWithoutNotificationInput>
  }

  export type commentUpdateWithoutNotificationInput = {
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateOneWithoutOther_commentNestedInput
    other_comment?: commentUpdateManyWithoutCommentNestedInput
    post?: postUpdateOneRequiredWithoutCommentNestedInput
    user?: userUpdateOneRequiredWithoutCommentNestedInput
    comment_like?: comment_likeUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateWithoutNotificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    other_comment?: commentUncheckedUpdateManyWithoutCommentNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type postUpsertWithoutNotificationInput = {
    update: XOR<postUpdateWithoutNotificationInput, postUncheckedUpdateWithoutNotificationInput>
    create: XOR<postCreateWithoutNotificationInput, postUncheckedCreateWithoutNotificationInput>
    where?: postWhereInput
  }

  export type postUpdateToOneWithWhereWithoutNotificationInput = {
    where?: postWhereInput
    data: XOR<postUpdateWithoutNotificationInput, postUncheckedUpdateWithoutNotificationInput>
  }

  export type postUpdateWithoutNotificationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutPostNestedInput
    community?: communityUpdateOneRequiredWithoutPostNestedInput
    user?: userUpdateOneRequiredWithoutPostNestedInput
    post_file?: post_fileUpdateManyWithoutPostNestedInput
    post_like?: post_likeUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutNotificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUncheckedUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutPostNestedInput
    post_file?: post_fileUncheckedUpdateManyWithoutPostNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUncheckedUpdateManyWithoutPostNestedInput
  }

  export type userUpsertWithoutNotification_notification_source_user_idTouserInput = {
    update: XOR<userUpdateWithoutNotification_notification_source_user_idTouserInput, userUncheckedUpdateWithoutNotification_notification_source_user_idTouserInput>
    create: XOR<userCreateWithoutNotification_notification_source_user_idTouserInput, userUncheckedCreateWithoutNotification_notification_source_user_idTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutNotification_notification_source_user_idTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutNotification_notification_source_user_idTouserInput, userUncheckedUpdateWithoutNotification_notification_source_user_idTouserInput>
  }

  export type userUpdateWithoutNotification_notification_source_user_idTouserInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutNotification_notification_source_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userUpsertWithoutNotification_notification_user_idTouserInput = {
    update: XOR<userUpdateWithoutNotification_notification_user_idTouserInput, userUncheckedUpdateWithoutNotification_notification_user_idTouserInput>
    create: XOR<userCreateWithoutNotification_notification_user_idTouserInput, userUncheckedCreateWithoutNotification_notification_user_idTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutNotification_notification_user_idTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutNotification_notification_user_idTouserInput, userUncheckedUpdateWithoutNotification_notification_user_idTouserInput>
  }

  export type userUpdateWithoutNotification_notification_user_idTouserInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutNotification_notification_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type commentCreateWithoutPostInput = {
    content?: string | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedOneWithoutOther_commentInput
    other_comment?: commentCreateNestedManyWithoutCommentInput
    user: userCreateNestedOneWithoutCommentInput
    comment_like?: comment_likeCreateNestedManyWithoutCommentInput
    notification?: notificationCreateNestedManyWithoutCommentInput
  }

  export type commentUncheckedCreateWithoutPostInput = {
    id?: number
    user_id: number
    content?: string | null
    parent_id?: number | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    other_comment?: commentUncheckedCreateNestedManyWithoutCommentInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutCommentInput
    notification?: notificationUncheckedCreateNestedManyWithoutCommentInput
  }

  export type commentCreateOrConnectWithoutPostInput = {
    where: commentWhereUniqueInput
    create: XOR<commentCreateWithoutPostInput, commentUncheckedCreateWithoutPostInput>
  }

  export type commentCreateManyPostInputEnvelope = {
    data: commentCreateManyPostInput | commentCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type feed_cacheCreateWithoutPostInput = {
    score: number
    created_at?: Date | string
    user: userCreateNestedOneWithoutFeed_cacheInput
  }

  export type feed_cacheUncheckedCreateWithoutPostInput = {
    id?: number
    user_id: number
    score: number
    created_at?: Date | string
  }

  export type feed_cacheCreateOrConnectWithoutPostInput = {
    where: feed_cacheWhereUniqueInput
    create: XOR<feed_cacheCreateWithoutPostInput, feed_cacheUncheckedCreateWithoutPostInput>
  }

  export type feed_cacheCreateManyPostInputEnvelope = {
    data: feed_cacheCreateManyPostInput | feed_cacheCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type notificationCreateWithoutPostInput = {
    type: string
    message?: string | null
    is_read?: boolean
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedOneWithoutNotificationInput
    chat_room?: chat_roomCreateNestedOneWithoutNotificationInput
    comment?: commentCreateNestedOneWithoutNotificationInput
    user_notification_source_user_idTouser?: userCreateNestedOneWithoutNotification_notification_source_user_idTouserInput
    user_notification_user_idTouser: userCreateNestedOneWithoutNotification_notification_user_idTouserInput
  }

  export type notificationUncheckedCreateWithoutPostInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type notificationCreateOrConnectWithoutPostInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutPostInput, notificationUncheckedCreateWithoutPostInput>
  }

  export type notificationCreateManyPostInputEnvelope = {
    data: notificationCreateManyPostInput | notificationCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type communityCreateWithoutPostInput = {
    name: string
    description?: string | null
    is_private?: boolean
    created_at?: Date | string
    user?: userCreateNestedOneWithoutCommunityInput
  }

  export type communityUncheckedCreateWithoutPostInput = {
    id?: number
    name: string
    description?: string | null
    admin_id?: number | null
    is_private?: boolean
    created_at?: Date | string
  }

  export type communityCreateOrConnectWithoutPostInput = {
    where: communityWhereUniqueInput
    create: XOR<communityCreateWithoutPostInput, communityUncheckedCreateWithoutPostInput>
  }

  export type userCreateWithoutPostInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutPostInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutPostInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPostInput, userUncheckedCreateWithoutPostInput>
  }

  export type post_fileCreateWithoutPostInput = {
    file_url?: string | null
    file_type?: string | null
    is_thumbnail?: boolean
    uploaded_at?: Date | string
    file_report?: file_reportCreateNestedManyWithoutPost_fileInput
  }

  export type post_fileUncheckedCreateWithoutPostInput = {
    id?: number
    file_url?: string | null
    file_type?: string | null
    is_thumbnail?: boolean
    uploaded_at?: Date | string
    file_report?: file_reportUncheckedCreateNestedManyWithoutPost_fileInput
  }

  export type post_fileCreateOrConnectWithoutPostInput = {
    where: post_fileWhereUniqueInput
    create: XOR<post_fileCreateWithoutPostInput, post_fileUncheckedCreateWithoutPostInput>
  }

  export type post_fileCreateManyPostInputEnvelope = {
    data: post_fileCreateManyPostInput | post_fileCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type post_likeCreateWithoutPostInput = {
    created_at?: Date | string
    user: userCreateNestedOneWithoutPost_likeInput
  }

  export type post_likeUncheckedCreateWithoutPostInput = {
    id?: number
    user_id: number
    created_at?: Date | string
  }

  export type post_likeCreateOrConnectWithoutPostInput = {
    where: post_likeWhereUniqueInput
    create: XOR<post_likeCreateWithoutPostInput, post_likeUncheckedCreateWithoutPostInput>
  }

  export type post_likeCreateManyPostInputEnvelope = {
    data: post_likeCreateManyPostInput | post_likeCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type post_reactionCreateWithoutPostInput = {
    created_at?: Date | string
    emoji: emojiCreateNestedOneWithoutPost_reactionInput
    user: userCreateNestedOneWithoutPost_reactionInput
  }

  export type post_reactionUncheckedCreateWithoutPostInput = {
    user_id: number
    emoji_id: number
    created_at?: Date | string
  }

  export type post_reactionCreateOrConnectWithoutPostInput = {
    where: post_reactionWhereUniqueInput
    create: XOR<post_reactionCreateWithoutPostInput, post_reactionUncheckedCreateWithoutPostInput>
  }

  export type post_reactionCreateManyPostInputEnvelope = {
    data: post_reactionCreateManyPostInput | post_reactionCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type post_tagCreateWithoutPostInput = {
    tag: tagCreateNestedOneWithoutPost_tagInput
  }

  export type post_tagUncheckedCreateWithoutPostInput = {
    tag_id: number
  }

  export type post_tagCreateOrConnectWithoutPostInput = {
    where: post_tagWhereUniqueInput
    create: XOR<post_tagCreateWithoutPostInput, post_tagUncheckedCreateWithoutPostInput>
  }

  export type post_tagCreateManyPostInputEnvelope = {
    data: post_tagCreateManyPostInput | post_tagCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type commentUpsertWithWhereUniqueWithoutPostInput = {
    where: commentWhereUniqueInput
    update: XOR<commentUpdateWithoutPostInput, commentUncheckedUpdateWithoutPostInput>
    create: XOR<commentCreateWithoutPostInput, commentUncheckedCreateWithoutPostInput>
  }

  export type commentUpdateWithWhereUniqueWithoutPostInput = {
    where: commentWhereUniqueInput
    data: XOR<commentUpdateWithoutPostInput, commentUncheckedUpdateWithoutPostInput>
  }

  export type commentUpdateManyWithWhereWithoutPostInput = {
    where: commentScalarWhereInput
    data: XOR<commentUpdateManyMutationInput, commentUncheckedUpdateManyWithoutPostInput>
  }

  export type feed_cacheUpsertWithWhereUniqueWithoutPostInput = {
    where: feed_cacheWhereUniqueInput
    update: XOR<feed_cacheUpdateWithoutPostInput, feed_cacheUncheckedUpdateWithoutPostInput>
    create: XOR<feed_cacheCreateWithoutPostInput, feed_cacheUncheckedCreateWithoutPostInput>
  }

  export type feed_cacheUpdateWithWhereUniqueWithoutPostInput = {
    where: feed_cacheWhereUniqueInput
    data: XOR<feed_cacheUpdateWithoutPostInput, feed_cacheUncheckedUpdateWithoutPostInput>
  }

  export type feed_cacheUpdateManyWithWhereWithoutPostInput = {
    where: feed_cacheScalarWhereInput
    data: XOR<feed_cacheUpdateManyMutationInput, feed_cacheUncheckedUpdateManyWithoutPostInput>
  }

  export type feed_cacheScalarWhereInput = {
    AND?: feed_cacheScalarWhereInput | feed_cacheScalarWhereInput[]
    OR?: feed_cacheScalarWhereInput[]
    NOT?: feed_cacheScalarWhereInput | feed_cacheScalarWhereInput[]
    id?: IntFilter<"feed_cache"> | number
    user_id?: IntFilter<"feed_cache"> | number
    post_id?: IntFilter<"feed_cache"> | number
    score?: FloatFilter<"feed_cache"> | number
    created_at?: DateTimeFilter<"feed_cache"> | Date | string
  }

  export type notificationUpsertWithWhereUniqueWithoutPostInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutPostInput, notificationUncheckedUpdateWithoutPostInput>
    create: XOR<notificationCreateWithoutPostInput, notificationUncheckedCreateWithoutPostInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutPostInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutPostInput, notificationUncheckedUpdateWithoutPostInput>
  }

  export type notificationUpdateManyWithWhereWithoutPostInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutPostInput>
  }

  export type communityUpsertWithoutPostInput = {
    update: XOR<communityUpdateWithoutPostInput, communityUncheckedUpdateWithoutPostInput>
    create: XOR<communityCreateWithoutPostInput, communityUncheckedCreateWithoutPostInput>
    where?: communityWhereInput
  }

  export type communityUpdateToOneWithWhereWithoutPostInput = {
    where?: communityWhereInput
    data: XOR<communityUpdateWithoutPostInput, communityUncheckedUpdateWithoutPostInput>
  }

  export type communityUpdateWithoutPostInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    admin_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type userUpsertWithoutPostInput = {
    update: XOR<userUpdateWithoutPostInput, userUncheckedUpdateWithoutPostInput>
    create: XOR<userCreateWithoutPostInput, userUncheckedCreateWithoutPostInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPostInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPostInput, userUncheckedUpdateWithoutPostInput>
  }

  export type userUpdateWithoutPostInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type post_fileUpsertWithWhereUniqueWithoutPostInput = {
    where: post_fileWhereUniqueInput
    update: XOR<post_fileUpdateWithoutPostInput, post_fileUncheckedUpdateWithoutPostInput>
    create: XOR<post_fileCreateWithoutPostInput, post_fileUncheckedCreateWithoutPostInput>
  }

  export type post_fileUpdateWithWhereUniqueWithoutPostInput = {
    where: post_fileWhereUniqueInput
    data: XOR<post_fileUpdateWithoutPostInput, post_fileUncheckedUpdateWithoutPostInput>
  }

  export type post_fileUpdateManyWithWhereWithoutPostInput = {
    where: post_fileScalarWhereInput
    data: XOR<post_fileUpdateManyMutationInput, post_fileUncheckedUpdateManyWithoutPostInput>
  }

  export type post_fileScalarWhereInput = {
    AND?: post_fileScalarWhereInput | post_fileScalarWhereInput[]
    OR?: post_fileScalarWhereInput[]
    NOT?: post_fileScalarWhereInput | post_fileScalarWhereInput[]
    id?: IntFilter<"post_file"> | number
    post_id?: IntFilter<"post_file"> | number
    file_url?: StringNullableFilter<"post_file"> | string | null
    file_type?: StringNullableFilter<"post_file"> | string | null
    is_thumbnail?: BoolFilter<"post_file"> | boolean
    uploaded_at?: DateTimeFilter<"post_file"> | Date | string
  }

  export type post_likeUpsertWithWhereUniqueWithoutPostInput = {
    where: post_likeWhereUniqueInput
    update: XOR<post_likeUpdateWithoutPostInput, post_likeUncheckedUpdateWithoutPostInput>
    create: XOR<post_likeCreateWithoutPostInput, post_likeUncheckedCreateWithoutPostInput>
  }

  export type post_likeUpdateWithWhereUniqueWithoutPostInput = {
    where: post_likeWhereUniqueInput
    data: XOR<post_likeUpdateWithoutPostInput, post_likeUncheckedUpdateWithoutPostInput>
  }

  export type post_likeUpdateManyWithWhereWithoutPostInput = {
    where: post_likeScalarWhereInput
    data: XOR<post_likeUpdateManyMutationInput, post_likeUncheckedUpdateManyWithoutPostInput>
  }

  export type post_likeScalarWhereInput = {
    AND?: post_likeScalarWhereInput | post_likeScalarWhereInput[]
    OR?: post_likeScalarWhereInput[]
    NOT?: post_likeScalarWhereInput | post_likeScalarWhereInput[]
    id?: IntFilter<"post_like"> | number
    post_id?: IntFilter<"post_like"> | number
    user_id?: IntFilter<"post_like"> | number
    created_at?: DateTimeFilter<"post_like"> | Date | string
  }

  export type post_reactionUpsertWithWhereUniqueWithoutPostInput = {
    where: post_reactionWhereUniqueInput
    update: XOR<post_reactionUpdateWithoutPostInput, post_reactionUncheckedUpdateWithoutPostInput>
    create: XOR<post_reactionCreateWithoutPostInput, post_reactionUncheckedCreateWithoutPostInput>
  }

  export type post_reactionUpdateWithWhereUniqueWithoutPostInput = {
    where: post_reactionWhereUniqueInput
    data: XOR<post_reactionUpdateWithoutPostInput, post_reactionUncheckedUpdateWithoutPostInput>
  }

  export type post_reactionUpdateManyWithWhereWithoutPostInput = {
    where: post_reactionScalarWhereInput
    data: XOR<post_reactionUpdateManyMutationInput, post_reactionUncheckedUpdateManyWithoutPostInput>
  }

  export type post_tagUpsertWithWhereUniqueWithoutPostInput = {
    where: post_tagWhereUniqueInput
    update: XOR<post_tagUpdateWithoutPostInput, post_tagUncheckedUpdateWithoutPostInput>
    create: XOR<post_tagCreateWithoutPostInput, post_tagUncheckedCreateWithoutPostInput>
  }

  export type post_tagUpdateWithWhereUniqueWithoutPostInput = {
    where: post_tagWhereUniqueInput
    data: XOR<post_tagUpdateWithoutPostInput, post_tagUncheckedUpdateWithoutPostInput>
  }

  export type post_tagUpdateManyWithWhereWithoutPostInput = {
    where: post_tagScalarWhereInput
    data: XOR<post_tagUpdateManyMutationInput, post_tagUncheckedUpdateManyWithoutPostInput>
  }

  export type post_tagScalarWhereInput = {
    AND?: post_tagScalarWhereInput | post_tagScalarWhereInput[]
    OR?: post_tagScalarWhereInput[]
    NOT?: post_tagScalarWhereInput | post_tagScalarWhereInput[]
    post_id?: IntFilter<"post_tag"> | number
    tag_id?: IntFilter<"post_tag"> | number
  }

  export type file_reportCreateWithoutPost_fileInput = {
    reason?: string | null
    created_at?: Date | string
    user: userCreateNestedOneWithoutFile_reportInput
  }

  export type file_reportUncheckedCreateWithoutPost_fileInput = {
    id?: number
    reporter_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type file_reportCreateOrConnectWithoutPost_fileInput = {
    where: file_reportWhereUniqueInput
    create: XOR<file_reportCreateWithoutPost_fileInput, file_reportUncheckedCreateWithoutPost_fileInput>
  }

  export type file_reportCreateManyPost_fileInputEnvelope = {
    data: file_reportCreateManyPost_fileInput | file_reportCreateManyPost_fileInput[]
    skipDuplicates?: boolean
  }

  export type postCreateWithoutPost_fileInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheCreateNestedManyWithoutPostInput
    notification?: notificationCreateNestedManyWithoutPostInput
    community: communityCreateNestedOneWithoutPostInput
    user: userCreateNestedOneWithoutPostInput
    post_like?: post_likeCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionCreateNestedManyWithoutPostInput
    post_tag?: post_tagCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateWithoutPost_fileInput = {
    id?: number
    user_id: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentUncheckedCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutPostInput
    notification?: notificationUncheckedCreateNestedManyWithoutPostInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutPostInput
    post_tag?: post_tagUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutPost_fileInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutPost_fileInput, postUncheckedCreateWithoutPost_fileInput>
  }

  export type file_reportUpsertWithWhereUniqueWithoutPost_fileInput = {
    where: file_reportWhereUniqueInput
    update: XOR<file_reportUpdateWithoutPost_fileInput, file_reportUncheckedUpdateWithoutPost_fileInput>
    create: XOR<file_reportCreateWithoutPost_fileInput, file_reportUncheckedCreateWithoutPost_fileInput>
  }

  export type file_reportUpdateWithWhereUniqueWithoutPost_fileInput = {
    where: file_reportWhereUniqueInput
    data: XOR<file_reportUpdateWithoutPost_fileInput, file_reportUncheckedUpdateWithoutPost_fileInput>
  }

  export type file_reportUpdateManyWithWhereWithoutPost_fileInput = {
    where: file_reportScalarWhereInput
    data: XOR<file_reportUpdateManyMutationInput, file_reportUncheckedUpdateManyWithoutPost_fileInput>
  }

  export type file_reportScalarWhereInput = {
    AND?: file_reportScalarWhereInput | file_reportScalarWhereInput[]
    OR?: file_reportScalarWhereInput[]
    NOT?: file_reportScalarWhereInput | file_reportScalarWhereInput[]
    id?: IntFilter<"file_report"> | number
    file_id?: IntFilter<"file_report"> | number
    reporter_id?: IntFilter<"file_report"> | number
    reason?: StringNullableFilter<"file_report"> | string | null
    created_at?: DateTimeFilter<"file_report"> | Date | string
  }

  export type postUpsertWithoutPost_fileInput = {
    update: XOR<postUpdateWithoutPost_fileInput, postUncheckedUpdateWithoutPost_fileInput>
    create: XOR<postCreateWithoutPost_fileInput, postUncheckedCreateWithoutPost_fileInput>
    where?: postWhereInput
  }

  export type postUpdateToOneWithWhereWithoutPost_fileInput = {
    where?: postWhereInput
    data: XOR<postUpdateWithoutPost_fileInput, postUncheckedUpdateWithoutPost_fileInput>
  }

  export type postUpdateWithoutPost_fileInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutPostNestedInput
    notification?: notificationUpdateManyWithoutPostNestedInput
    community?: communityUpdateOneRequiredWithoutPostNestedInput
    user?: userUpdateOneRequiredWithoutPostNestedInput
    post_like?: post_likeUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutPost_fileInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUncheckedUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutPostNestedInput
    notification?: notificationUncheckedUpdateManyWithoutPostNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUncheckedUpdateManyWithoutPostNestedInput
  }

  export type postCreateWithoutPost_likeInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheCreateNestedManyWithoutPostInput
    notification?: notificationCreateNestedManyWithoutPostInput
    community: communityCreateNestedOneWithoutPostInput
    user: userCreateNestedOneWithoutPostInput
    post_file?: post_fileCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionCreateNestedManyWithoutPostInput
    post_tag?: post_tagCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateWithoutPost_likeInput = {
    id?: number
    user_id: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentUncheckedCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutPostInput
    notification?: notificationUncheckedCreateNestedManyWithoutPostInput
    post_file?: post_fileUncheckedCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutPostInput
    post_tag?: post_tagUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutPost_likeInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutPost_likeInput, postUncheckedCreateWithoutPost_likeInput>
  }

  export type userCreateWithoutPost_likeInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutPost_likeInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutPost_likeInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPost_likeInput, userUncheckedCreateWithoutPost_likeInput>
  }

  export type postUpsertWithoutPost_likeInput = {
    update: XOR<postUpdateWithoutPost_likeInput, postUncheckedUpdateWithoutPost_likeInput>
    create: XOR<postCreateWithoutPost_likeInput, postUncheckedCreateWithoutPost_likeInput>
    where?: postWhereInput
  }

  export type postUpdateToOneWithWhereWithoutPost_likeInput = {
    where?: postWhereInput
    data: XOR<postUpdateWithoutPost_likeInput, postUncheckedUpdateWithoutPost_likeInput>
  }

  export type postUpdateWithoutPost_likeInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutPostNestedInput
    notification?: notificationUpdateManyWithoutPostNestedInput
    community?: communityUpdateOneRequiredWithoutPostNestedInput
    user?: userUpdateOneRequiredWithoutPostNestedInput
    post_file?: post_fileUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutPost_likeInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUncheckedUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutPostNestedInput
    notification?: notificationUncheckedUpdateManyWithoutPostNestedInput
    post_file?: post_fileUncheckedUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUncheckedUpdateManyWithoutPostNestedInput
  }

  export type userUpsertWithoutPost_likeInput = {
    update: XOR<userUpdateWithoutPost_likeInput, userUncheckedUpdateWithoutPost_likeInput>
    create: XOR<userCreateWithoutPost_likeInput, userUncheckedCreateWithoutPost_likeInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPost_likeInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPost_likeInput, userUncheckedUpdateWithoutPost_likeInput>
  }

  export type userUpdateWithoutPost_likeInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutPost_likeInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type emojiCreateWithoutPost_reactionInput = {
    name: string
  }

  export type emojiUncheckedCreateWithoutPost_reactionInput = {
    id?: number
    name: string
  }

  export type emojiCreateOrConnectWithoutPost_reactionInput = {
    where: emojiWhereUniqueInput
    create: XOR<emojiCreateWithoutPost_reactionInput, emojiUncheckedCreateWithoutPost_reactionInput>
  }

  export type postCreateWithoutPost_reactionInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheCreateNestedManyWithoutPostInput
    notification?: notificationCreateNestedManyWithoutPostInput
    community: communityCreateNestedOneWithoutPostInput
    user: userCreateNestedOneWithoutPostInput
    post_file?: post_fileCreateNestedManyWithoutPostInput
    post_like?: post_likeCreateNestedManyWithoutPostInput
    post_tag?: post_tagCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateWithoutPost_reactionInput = {
    id?: number
    user_id: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentUncheckedCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutPostInput
    notification?: notificationUncheckedCreateNestedManyWithoutPostInput
    post_file?: post_fileUncheckedCreateNestedManyWithoutPostInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutPostInput
    post_tag?: post_tagUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutPost_reactionInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutPost_reactionInput, postUncheckedCreateWithoutPost_reactionInput>
  }

  export type userCreateWithoutPost_reactionInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutPost_reactionInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutPost_reactionInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPost_reactionInput, userUncheckedCreateWithoutPost_reactionInput>
  }

  export type emojiUpsertWithoutPost_reactionInput = {
    update: XOR<emojiUpdateWithoutPost_reactionInput, emojiUncheckedUpdateWithoutPost_reactionInput>
    create: XOR<emojiCreateWithoutPost_reactionInput, emojiUncheckedCreateWithoutPost_reactionInput>
    where?: emojiWhereInput
  }

  export type emojiUpdateToOneWithWhereWithoutPost_reactionInput = {
    where?: emojiWhereInput
    data: XOR<emojiUpdateWithoutPost_reactionInput, emojiUncheckedUpdateWithoutPost_reactionInput>
  }

  export type emojiUpdateWithoutPost_reactionInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type emojiUncheckedUpdateWithoutPost_reactionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type postUpsertWithoutPost_reactionInput = {
    update: XOR<postUpdateWithoutPost_reactionInput, postUncheckedUpdateWithoutPost_reactionInput>
    create: XOR<postCreateWithoutPost_reactionInput, postUncheckedCreateWithoutPost_reactionInput>
    where?: postWhereInput
  }

  export type postUpdateToOneWithWhereWithoutPost_reactionInput = {
    where?: postWhereInput
    data: XOR<postUpdateWithoutPost_reactionInput, postUncheckedUpdateWithoutPost_reactionInput>
  }

  export type postUpdateWithoutPost_reactionInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutPostNestedInput
    notification?: notificationUpdateManyWithoutPostNestedInput
    community?: communityUpdateOneRequiredWithoutPostNestedInput
    user?: userUpdateOneRequiredWithoutPostNestedInput
    post_file?: post_fileUpdateManyWithoutPostNestedInput
    post_like?: post_likeUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutPost_reactionInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUncheckedUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutPostNestedInput
    notification?: notificationUncheckedUpdateManyWithoutPostNestedInput
    post_file?: post_fileUncheckedUpdateManyWithoutPostNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUncheckedUpdateManyWithoutPostNestedInput
  }

  export type userUpsertWithoutPost_reactionInput = {
    update: XOR<userUpdateWithoutPost_reactionInput, userUncheckedUpdateWithoutPost_reactionInput>
    create: XOR<userCreateWithoutPost_reactionInput, userUncheckedCreateWithoutPost_reactionInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPost_reactionInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPost_reactionInput, userUncheckedUpdateWithoutPost_reactionInput>
  }

  export type userUpdateWithoutPost_reactionInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutPost_reactionInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type postCreateWithoutPost_tagInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheCreateNestedManyWithoutPostInput
    notification?: notificationCreateNestedManyWithoutPostInput
    community: communityCreateNestedOneWithoutPostInput
    user: userCreateNestedOneWithoutPostInput
    post_file?: post_fileCreateNestedManyWithoutPostInput
    post_like?: post_likeCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateWithoutPost_tagInput = {
    id?: number
    user_id: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentUncheckedCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutPostInput
    notification?: notificationUncheckedCreateNestedManyWithoutPostInput
    post_file?: post_fileUncheckedCreateNestedManyWithoutPostInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutPost_tagInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutPost_tagInput, postUncheckedCreateWithoutPost_tagInput>
  }

  export type tagCreateWithoutPost_tagInput = {
    name: string
  }

  export type tagUncheckedCreateWithoutPost_tagInput = {
    id?: number
    name: string
  }

  export type tagCreateOrConnectWithoutPost_tagInput = {
    where: tagWhereUniqueInput
    create: XOR<tagCreateWithoutPost_tagInput, tagUncheckedCreateWithoutPost_tagInput>
  }

  export type postUpsertWithoutPost_tagInput = {
    update: XOR<postUpdateWithoutPost_tagInput, postUncheckedUpdateWithoutPost_tagInput>
    create: XOR<postCreateWithoutPost_tagInput, postUncheckedCreateWithoutPost_tagInput>
    where?: postWhereInput
  }

  export type postUpdateToOneWithWhereWithoutPost_tagInput = {
    where?: postWhereInput
    data: XOR<postUpdateWithoutPost_tagInput, postUncheckedUpdateWithoutPost_tagInput>
  }

  export type postUpdateWithoutPost_tagInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutPostNestedInput
    notification?: notificationUpdateManyWithoutPostNestedInput
    community?: communityUpdateOneRequiredWithoutPostNestedInput
    user?: userUpdateOneRequiredWithoutPostNestedInput
    post_file?: post_fileUpdateManyWithoutPostNestedInput
    post_like?: post_likeUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutPost_tagInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUncheckedUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutPostNestedInput
    notification?: notificationUncheckedUpdateManyWithoutPostNestedInput
    post_file?: post_fileUncheckedUpdateManyWithoutPostNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type tagUpsertWithoutPost_tagInput = {
    update: XOR<tagUpdateWithoutPost_tagInput, tagUncheckedUpdateWithoutPost_tagInput>
    create: XOR<tagCreateWithoutPost_tagInput, tagUncheckedCreateWithoutPost_tagInput>
    where?: tagWhereInput
  }

  export type tagUpdateToOneWithWhereWithoutPost_tagInput = {
    where?: tagWhereInput
    data: XOR<tagUpdateWithoutPost_tagInput, tagUncheckedUpdateWithoutPost_tagInput>
  }

  export type tagUpdateWithoutPost_tagInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type tagUncheckedUpdateWithoutPost_tagInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type userCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutProfile_visit_profile_visit_profile_user_idTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput, userUncheckedCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput>
  }

  export type userCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutProfile_visit_profile_visit_visitor_idTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput, userUncheckedCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput>
  }

  export type userUpsertWithoutProfile_visit_profile_visit_profile_user_idTouserInput = {
    update: XOR<userUpdateWithoutProfile_visit_profile_visit_profile_user_idTouserInput, userUncheckedUpdateWithoutProfile_visit_profile_visit_profile_user_idTouserInput>
    create: XOR<userCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput, userUncheckedCreateWithoutProfile_visit_profile_visit_profile_user_idTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutProfile_visit_profile_visit_profile_user_idTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutProfile_visit_profile_visit_profile_user_idTouserInput, userUncheckedUpdateWithoutProfile_visit_profile_visit_profile_user_idTouserInput>
  }

  export type userUpdateWithoutProfile_visit_profile_visit_profile_user_idTouserInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutProfile_visit_profile_visit_profile_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userUpsertWithoutProfile_visit_profile_visit_visitor_idTouserInput = {
    update: XOR<userUpdateWithoutProfile_visit_profile_visit_visitor_idTouserInput, userUncheckedUpdateWithoutProfile_visit_profile_visit_visitor_idTouserInput>
    create: XOR<userCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput, userUncheckedCreateWithoutProfile_visit_profile_visit_visitor_idTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutProfile_visit_profile_visit_visitor_idTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutProfile_visit_profile_visit_visitor_idTouserInput, userUncheckedUpdateWithoutProfile_visit_profile_visit_visitor_idTouserInput>
  }

  export type userUpdateWithoutProfile_visit_profile_visit_visitor_idTouserInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutProfile_visit_profile_visit_visitor_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userCreateWithoutReportInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutReportInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutReportInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutReportInput, userUncheckedCreateWithoutReportInput>
  }

  export type userUpsertWithoutReportInput = {
    update: XOR<userUpdateWithoutReportInput, userUncheckedUpdateWithoutReportInput>
    create: XOR<userCreateWithoutReportInput, userUncheckedCreateWithoutReportInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutReportInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutReportInput, userUncheckedUpdateWithoutReportInput>
  }

  export type userUpdateWithoutReportInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutReportInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userCreateWithoutSearch_historyInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutSearch_historyInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutSearch_historyInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutSearch_historyInput, userUncheckedCreateWithoutSearch_historyInput>
  }

  export type userUpsertWithoutSearch_historyInput = {
    update: XOR<userUpdateWithoutSearch_historyInput, userUncheckedUpdateWithoutSearch_historyInput>
    create: XOR<userCreateWithoutSearch_historyInput, userUncheckedCreateWithoutSearch_historyInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutSearch_historyInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutSearch_historyInput, userUncheckedUpdateWithoutSearch_historyInput>
  }

  export type userUpdateWithoutSearch_historyInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutSearch_historyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type post_tagCreateWithoutTagInput = {
    post: postCreateNestedOneWithoutPost_tagInput
  }

  export type post_tagUncheckedCreateWithoutTagInput = {
    post_id: number
  }

  export type post_tagCreateOrConnectWithoutTagInput = {
    where: post_tagWhereUniqueInput
    create: XOR<post_tagCreateWithoutTagInput, post_tagUncheckedCreateWithoutTagInput>
  }

  export type post_tagCreateManyTagInputEnvelope = {
    data: post_tagCreateManyTagInput | post_tagCreateManyTagInput[]
    skipDuplicates?: boolean
  }

  export type post_tagUpsertWithWhereUniqueWithoutTagInput = {
    where: post_tagWhereUniqueInput
    update: XOR<post_tagUpdateWithoutTagInput, post_tagUncheckedUpdateWithoutTagInput>
    create: XOR<post_tagCreateWithoutTagInput, post_tagUncheckedCreateWithoutTagInput>
  }

  export type post_tagUpdateWithWhereUniqueWithoutTagInput = {
    where: post_tagWhereUniqueInput
    data: XOR<post_tagUpdateWithoutTagInput, post_tagUncheckedUpdateWithoutTagInput>
  }

  export type post_tagUpdateManyWithWhereWithoutTagInput = {
    where: post_tagScalarWhereInput
    data: XOR<post_tagUpdateManyMutationInput, post_tagUncheckedUpdateManyWithoutTagInput>
  }

  export type chat_messageCreateWithoutUserInput = {
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    chat_room: chat_roomCreateNestedOneWithoutChat_messageInput
    notification?: notificationCreateNestedManyWithoutChat_messageInput
  }

  export type chat_messageUncheckedCreateWithoutUserInput = {
    id?: number
    chatroom_id: number
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    notification?: notificationUncheckedCreateNestedManyWithoutChat_messageInput
  }

  export type chat_messageCreateOrConnectWithoutUserInput = {
    where: chat_messageWhereUniqueInput
    create: XOR<chat_messageCreateWithoutUserInput, chat_messageUncheckedCreateWithoutUserInput>
  }

  export type chat_messageCreateManyUserInputEnvelope = {
    data: chat_messageCreateManyUserInput | chat_messageCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type chat_room_userCreateWithoutUserInput = {
    left_at?: Date | string | null
    chat_room: chat_roomCreateNestedOneWithoutChat_room_userInput
  }

  export type chat_room_userUncheckedCreateWithoutUserInput = {
    id?: number
    chatroom_id: number
    left_at?: Date | string | null
  }

  export type chat_room_userCreateOrConnectWithoutUserInput = {
    where: chat_room_userWhereUniqueInput
    create: XOR<chat_room_userCreateWithoutUserInput, chat_room_userUncheckedCreateWithoutUserInput>
  }

  export type chat_room_userCreateManyUserInputEnvelope = {
    data: chat_room_userCreateManyUserInput | chat_room_userCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type commentCreateWithoutUserInput = {
    content?: string | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedOneWithoutOther_commentInput
    other_comment?: commentCreateNestedManyWithoutCommentInput
    post: postCreateNestedOneWithoutCommentInput
    comment_like?: comment_likeCreateNestedManyWithoutCommentInput
    notification?: notificationCreateNestedManyWithoutCommentInput
  }

  export type commentUncheckedCreateWithoutUserInput = {
    id?: number
    post_id: number
    content?: string | null
    parent_id?: number | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    other_comment?: commentUncheckedCreateNestedManyWithoutCommentInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutCommentInput
    notification?: notificationUncheckedCreateNestedManyWithoutCommentInput
  }

  export type commentCreateOrConnectWithoutUserInput = {
    where: commentWhereUniqueInput
    create: XOR<commentCreateWithoutUserInput, commentUncheckedCreateWithoutUserInput>
  }

  export type commentCreateManyUserInputEnvelope = {
    data: commentCreateManyUserInput | commentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type comment_likeCreateWithoutUserInput = {
    created_at?: Date | string
    comment: commentCreateNestedOneWithoutComment_likeInput
  }

  export type comment_likeUncheckedCreateWithoutUserInput = {
    id?: number
    comment_id: number
    created_at?: Date | string
  }

  export type comment_likeCreateOrConnectWithoutUserInput = {
    where: comment_likeWhereUniqueInput
    create: XOR<comment_likeCreateWithoutUserInput, comment_likeUncheckedCreateWithoutUserInput>
  }

  export type comment_likeCreateManyUserInputEnvelope = {
    data: comment_likeCreateManyUserInput | comment_likeCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type communityCreateWithoutUserInput = {
    name: string
    description?: string | null
    is_private?: boolean
    created_at?: Date | string
    post?: postCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    description?: string | null
    is_private?: boolean
    created_at?: Date | string
    post?: postUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityCreateOrConnectWithoutUserInput = {
    where: communityWhereUniqueInput
    create: XOR<communityCreateWithoutUserInput, communityUncheckedCreateWithoutUserInput>
  }

  export type communityCreateManyUserInputEnvelope = {
    data: communityCreateManyUserInput | communityCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type feed_cacheCreateWithoutUserInput = {
    score: number
    created_at?: Date | string
    post: postCreateNestedOneWithoutFeed_cacheInput
  }

  export type feed_cacheUncheckedCreateWithoutUserInput = {
    id?: number
    post_id: number
    score: number
    created_at?: Date | string
  }

  export type feed_cacheCreateOrConnectWithoutUserInput = {
    where: feed_cacheWhereUniqueInput
    create: XOR<feed_cacheCreateWithoutUserInput, feed_cacheUncheckedCreateWithoutUserInput>
  }

  export type feed_cacheCreateManyUserInputEnvelope = {
    data: feed_cacheCreateManyUserInput | feed_cacheCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type file_reportCreateWithoutUserInput = {
    reason?: string | null
    created_at?: Date | string
    post_file: post_fileCreateNestedOneWithoutFile_reportInput
  }

  export type file_reportUncheckedCreateWithoutUserInput = {
    id?: number
    file_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type file_reportCreateOrConnectWithoutUserInput = {
    where: file_reportWhereUniqueInput
    create: XOR<file_reportCreateWithoutUserInput, file_reportUncheckedCreateWithoutUserInput>
  }

  export type file_reportCreateManyUserInputEnvelope = {
    data: file_reportCreateManyUserInput | file_reportCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type followCreateWithoutUser_follow_follower_idTouserInput = {
    created_at?: Date | string
    user_follow_following_idTouser: userCreateNestedOneWithoutFollow_follow_following_idTouserInput
  }

  export type followUncheckedCreateWithoutUser_follow_follower_idTouserInput = {
    following_id: number
    created_at?: Date | string
  }

  export type followCreateOrConnectWithoutUser_follow_follower_idTouserInput = {
    where: followWhereUniqueInput
    create: XOR<followCreateWithoutUser_follow_follower_idTouserInput, followUncheckedCreateWithoutUser_follow_follower_idTouserInput>
  }

  export type followCreateManyUser_follow_follower_idTouserInputEnvelope = {
    data: followCreateManyUser_follow_follower_idTouserInput | followCreateManyUser_follow_follower_idTouserInput[]
    skipDuplicates?: boolean
  }

  export type followCreateWithoutUser_follow_following_idTouserInput = {
    created_at?: Date | string
    user_follow_follower_idTouser: userCreateNestedOneWithoutFollow_follow_follower_idTouserInput
  }

  export type followUncheckedCreateWithoutUser_follow_following_idTouserInput = {
    follower_id: number
    created_at?: Date | string
  }

  export type followCreateOrConnectWithoutUser_follow_following_idTouserInput = {
    where: followWhereUniqueInput
    create: XOR<followCreateWithoutUser_follow_following_idTouserInput, followUncheckedCreateWithoutUser_follow_following_idTouserInput>
  }

  export type followCreateManyUser_follow_following_idTouserInputEnvelope = {
    data: followCreateManyUser_follow_following_idTouserInput | followCreateManyUser_follow_following_idTouserInput[]
    skipDuplicates?: boolean
  }

  export type notificationCreateWithoutUser_notification_source_user_idTouserInput = {
    type: string
    message?: string | null
    is_read?: boolean
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedOneWithoutNotificationInput
    chat_room?: chat_roomCreateNestedOneWithoutNotificationInput
    comment?: commentCreateNestedOneWithoutNotificationInput
    post?: postCreateNestedOneWithoutNotificationInput
    user_notification_user_idTouser: userCreateNestedOneWithoutNotification_notification_user_idTouserInput
  }

  export type notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type notificationCreateOrConnectWithoutUser_notification_source_user_idTouserInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutUser_notification_source_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput>
  }

  export type notificationCreateManyUser_notification_source_user_idTouserInputEnvelope = {
    data: notificationCreateManyUser_notification_source_user_idTouserInput | notificationCreateManyUser_notification_source_user_idTouserInput[]
    skipDuplicates?: boolean
  }

  export type notificationCreateWithoutUser_notification_user_idTouserInput = {
    type: string
    message?: string | null
    is_read?: boolean
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedOneWithoutNotificationInput
    chat_room?: chat_roomCreateNestedOneWithoutNotificationInput
    comment?: commentCreateNestedOneWithoutNotificationInput
    post?: postCreateNestedOneWithoutNotificationInput
    user_notification_source_user_idTouser?: userCreateNestedOneWithoutNotification_notification_source_user_idTouserInput
  }

  export type notificationUncheckedCreateWithoutUser_notification_user_idTouserInput = {
    id?: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type notificationCreateOrConnectWithoutUser_notification_user_idTouserInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutUser_notification_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_user_idTouserInput>
  }

  export type notificationCreateManyUser_notification_user_idTouserInputEnvelope = {
    data: notificationCreateManyUser_notification_user_idTouserInput | notificationCreateManyUser_notification_user_idTouserInput[]
    skipDuplicates?: boolean
  }

  export type postCreateWithoutUserInput = {
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheCreateNestedManyWithoutPostInput
    notification?: notificationCreateNestedManyWithoutPostInput
    community: communityCreateNestedOneWithoutPostInput
    post_file?: post_fileCreateNestedManyWithoutPostInput
    post_like?: post_likeCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionCreateNestedManyWithoutPostInput
    post_tag?: post_tagCreateNestedManyWithoutPostInput
  }

  export type postUncheckedCreateWithoutUserInput = {
    id?: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    comment?: commentUncheckedCreateNestedManyWithoutPostInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutPostInput
    notification?: notificationUncheckedCreateNestedManyWithoutPostInput
    post_file?: post_fileUncheckedCreateNestedManyWithoutPostInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutPostInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutPostInput
    post_tag?: post_tagUncheckedCreateNestedManyWithoutPostInput
  }

  export type postCreateOrConnectWithoutUserInput = {
    where: postWhereUniqueInput
    create: XOR<postCreateWithoutUserInput, postUncheckedCreateWithoutUserInput>
  }

  export type postCreateManyUserInputEnvelope = {
    data: postCreateManyUserInput | postCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type post_likeCreateWithoutUserInput = {
    created_at?: Date | string
    post: postCreateNestedOneWithoutPost_likeInput
  }

  export type post_likeUncheckedCreateWithoutUserInput = {
    id?: number
    post_id: number
    created_at?: Date | string
  }

  export type post_likeCreateOrConnectWithoutUserInput = {
    where: post_likeWhereUniqueInput
    create: XOR<post_likeCreateWithoutUserInput, post_likeUncheckedCreateWithoutUserInput>
  }

  export type post_likeCreateManyUserInputEnvelope = {
    data: post_likeCreateManyUserInput | post_likeCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type post_reactionCreateWithoutUserInput = {
    created_at?: Date | string
    emoji: emojiCreateNestedOneWithoutPost_reactionInput
    post: postCreateNestedOneWithoutPost_reactionInput
  }

  export type post_reactionUncheckedCreateWithoutUserInput = {
    post_id: number
    emoji_id: number
    created_at?: Date | string
  }

  export type post_reactionCreateOrConnectWithoutUserInput = {
    where: post_reactionWhereUniqueInput
    create: XOR<post_reactionCreateWithoutUserInput, post_reactionUncheckedCreateWithoutUserInput>
  }

  export type post_reactionCreateManyUserInputEnvelope = {
    data: post_reactionCreateManyUserInput | post_reactionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput = {
    visited_at?: Date | string
    user_profile_visit_visitor_idTouser: userCreateNestedOneWithoutProfile_visit_profile_visit_visitor_idTouserInput
  }

  export type profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput = {
    id?: number
    visitor_id: number
    visited_at?: Date | string
  }

  export type profile_visitCreateOrConnectWithoutUser_profile_visit_profile_user_idTouserInput = {
    where: profile_visitWhereUniqueInput
    create: XOR<profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput>
  }

  export type profile_visitCreateManyUser_profile_visit_profile_user_idTouserInputEnvelope = {
    data: profile_visitCreateManyUser_profile_visit_profile_user_idTouserInput | profile_visitCreateManyUser_profile_visit_profile_user_idTouserInput[]
    skipDuplicates?: boolean
  }

  export type profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput = {
    visited_at?: Date | string
    user_profile_visit_profile_user_idTouser: userCreateNestedOneWithoutProfile_visit_profile_visit_profile_user_idTouserInput
  }

  export type profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput = {
    id?: number
    profile_user_id: number
    visited_at?: Date | string
  }

  export type profile_visitCreateOrConnectWithoutUser_profile_visit_visitor_idTouserInput = {
    where: profile_visitWhereUniqueInput
    create: XOR<profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput>
  }

  export type profile_visitCreateManyUser_profile_visit_visitor_idTouserInputEnvelope = {
    data: profile_visitCreateManyUser_profile_visit_visitor_idTouserInput | profile_visitCreateManyUser_profile_visit_visitor_idTouserInput[]
    skipDuplicates?: boolean
  }

  export type reportCreateWithoutUserInput = {
    target_type: $Enums.report_target_type
    target_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type reportUncheckedCreateWithoutUserInput = {
    id?: number
    target_type: $Enums.report_target_type
    target_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type reportCreateOrConnectWithoutUserInput = {
    where: reportWhereUniqueInput
    create: XOR<reportCreateWithoutUserInput, reportUncheckedCreateWithoutUserInput>
  }

  export type reportCreateManyUserInputEnvelope = {
    data: reportCreateManyUserInput | reportCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type search_historyCreateWithoutUserInput = {
    keyword: string
    searched_at?: Date | string
  }

  export type search_historyUncheckedCreateWithoutUserInput = {
    id?: number
    keyword: string
    searched_at?: Date | string
  }

  export type search_historyCreateOrConnectWithoutUserInput = {
    where: search_historyWhereUniqueInput
    create: XOR<search_historyCreateWithoutUserInput, search_historyUncheckedCreateWithoutUserInput>
  }

  export type search_historyCreateManyUserInputEnvelope = {
    data: search_historyCreateManyUserInput | search_historyCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput = {
    created_at?: Date | string
    user_user_block_user_idTouser: userCreateNestedOneWithoutUser_block_user_block_user_idTouserInput
  }

  export type user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput = {
    id?: number
    user_id: number
    created_at?: Date | string
  }

  export type user_blockCreateOrConnectWithoutUser_user_block_blocked_user_idTouserInput = {
    where: user_blockWhereUniqueInput
    create: XOR<user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput>
  }

  export type user_blockCreateManyUser_user_block_blocked_user_idTouserInputEnvelope = {
    data: user_blockCreateManyUser_user_block_blocked_user_idTouserInput | user_blockCreateManyUser_user_block_blocked_user_idTouserInput[]
    skipDuplicates?: boolean
  }

  export type user_blockCreateWithoutUser_user_block_user_idTouserInput = {
    created_at?: Date | string
    user_user_block_blocked_user_idTouser: userCreateNestedOneWithoutUser_block_user_block_blocked_user_idTouserInput
  }

  export type user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput = {
    id?: number
    blocked_user_id: number
    created_at?: Date | string
  }

  export type user_blockCreateOrConnectWithoutUser_user_block_user_idTouserInput = {
    where: user_blockWhereUniqueInput
    create: XOR<user_blockCreateWithoutUser_user_block_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput>
  }

  export type user_blockCreateManyUser_user_block_user_idTouserInputEnvelope = {
    data: user_blockCreateManyUser_user_block_user_idTouserInput | user_blockCreateManyUser_user_block_user_idTouserInput[]
    skipDuplicates?: boolean
  }

  export type user_oauthCreateWithoutUserInput = {
    oauth_provider?: string | null
    oauth_id?: string | null
  }

  export type user_oauthUncheckedCreateWithoutUserInput = {
    oauth_provider?: string | null
    oauth_id?: string | null
  }

  export type user_oauthCreateOrConnectWithoutUserInput = {
    where: user_oauthWhereUniqueInput
    create: XOR<user_oauthCreateWithoutUserInput, user_oauthUncheckedCreateWithoutUserInput>
  }

  export type user_profileCreateWithoutUserInput = {
    name: string
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
  }

  export type user_profileUncheckedCreateWithoutUserInput = {
    name: string
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
  }

  export type user_profileCreateOrConnectWithoutUserInput = {
    where: user_profileWhereUniqueInput
    create: XOR<user_profileCreateWithoutUserInput, user_profileUncheckedCreateWithoutUserInput>
  }

  export type user_securityCreateWithoutUserInput = {
    email_verified?: boolean
    last_login_at?: Date | string | null
  }

  export type user_securityUncheckedCreateWithoutUserInput = {
    email_verified?: boolean
    last_login_at?: Date | string | null
  }

  export type user_securityCreateOrConnectWithoutUserInput = {
    where: user_securityWhereUniqueInput
    create: XOR<user_securityCreateWithoutUserInput, user_securityUncheckedCreateWithoutUserInput>
  }

  export type chat_messageUpsertWithWhereUniqueWithoutUserInput = {
    where: chat_messageWhereUniqueInput
    update: XOR<chat_messageUpdateWithoutUserInput, chat_messageUncheckedUpdateWithoutUserInput>
    create: XOR<chat_messageCreateWithoutUserInput, chat_messageUncheckedCreateWithoutUserInput>
  }

  export type chat_messageUpdateWithWhereUniqueWithoutUserInput = {
    where: chat_messageWhereUniqueInput
    data: XOR<chat_messageUpdateWithoutUserInput, chat_messageUncheckedUpdateWithoutUserInput>
  }

  export type chat_messageUpdateManyWithWhereWithoutUserInput = {
    where: chat_messageScalarWhereInput
    data: XOR<chat_messageUpdateManyMutationInput, chat_messageUncheckedUpdateManyWithoutUserInput>
  }

  export type chat_room_userUpsertWithWhereUniqueWithoutUserInput = {
    where: chat_room_userWhereUniqueInput
    update: XOR<chat_room_userUpdateWithoutUserInput, chat_room_userUncheckedUpdateWithoutUserInput>
    create: XOR<chat_room_userCreateWithoutUserInput, chat_room_userUncheckedCreateWithoutUserInput>
  }

  export type chat_room_userUpdateWithWhereUniqueWithoutUserInput = {
    where: chat_room_userWhereUniqueInput
    data: XOR<chat_room_userUpdateWithoutUserInput, chat_room_userUncheckedUpdateWithoutUserInput>
  }

  export type chat_room_userUpdateManyWithWhereWithoutUserInput = {
    where: chat_room_userScalarWhereInput
    data: XOR<chat_room_userUpdateManyMutationInput, chat_room_userUncheckedUpdateManyWithoutUserInput>
  }

  export type commentUpsertWithWhereUniqueWithoutUserInput = {
    where: commentWhereUniqueInput
    update: XOR<commentUpdateWithoutUserInput, commentUncheckedUpdateWithoutUserInput>
    create: XOR<commentCreateWithoutUserInput, commentUncheckedCreateWithoutUserInput>
  }

  export type commentUpdateWithWhereUniqueWithoutUserInput = {
    where: commentWhereUniqueInput
    data: XOR<commentUpdateWithoutUserInput, commentUncheckedUpdateWithoutUserInput>
  }

  export type commentUpdateManyWithWhereWithoutUserInput = {
    where: commentScalarWhereInput
    data: XOR<commentUpdateManyMutationInput, commentUncheckedUpdateManyWithoutUserInput>
  }

  export type comment_likeUpsertWithWhereUniqueWithoutUserInput = {
    where: comment_likeWhereUniqueInput
    update: XOR<comment_likeUpdateWithoutUserInput, comment_likeUncheckedUpdateWithoutUserInput>
    create: XOR<comment_likeCreateWithoutUserInput, comment_likeUncheckedCreateWithoutUserInput>
  }

  export type comment_likeUpdateWithWhereUniqueWithoutUserInput = {
    where: comment_likeWhereUniqueInput
    data: XOR<comment_likeUpdateWithoutUserInput, comment_likeUncheckedUpdateWithoutUserInput>
  }

  export type comment_likeUpdateManyWithWhereWithoutUserInput = {
    where: comment_likeScalarWhereInput
    data: XOR<comment_likeUpdateManyMutationInput, comment_likeUncheckedUpdateManyWithoutUserInput>
  }

  export type communityUpsertWithWhereUniqueWithoutUserInput = {
    where: communityWhereUniqueInput
    update: XOR<communityUpdateWithoutUserInput, communityUncheckedUpdateWithoutUserInput>
    create: XOR<communityCreateWithoutUserInput, communityUncheckedCreateWithoutUserInput>
  }

  export type communityUpdateWithWhereUniqueWithoutUserInput = {
    where: communityWhereUniqueInput
    data: XOR<communityUpdateWithoutUserInput, communityUncheckedUpdateWithoutUserInput>
  }

  export type communityUpdateManyWithWhereWithoutUserInput = {
    where: communityScalarWhereInput
    data: XOR<communityUpdateManyMutationInput, communityUncheckedUpdateManyWithoutUserInput>
  }

  export type communityScalarWhereInput = {
    AND?: communityScalarWhereInput | communityScalarWhereInput[]
    OR?: communityScalarWhereInput[]
    NOT?: communityScalarWhereInput | communityScalarWhereInput[]
    id?: IntFilter<"community"> | number
    name?: StringFilter<"community"> | string
    description?: StringNullableFilter<"community"> | string | null
    admin_id?: IntNullableFilter<"community"> | number | null
    is_private?: BoolFilter<"community"> | boolean
    created_at?: DateTimeFilter<"community"> | Date | string
  }

  export type feed_cacheUpsertWithWhereUniqueWithoutUserInput = {
    where: feed_cacheWhereUniqueInput
    update: XOR<feed_cacheUpdateWithoutUserInput, feed_cacheUncheckedUpdateWithoutUserInput>
    create: XOR<feed_cacheCreateWithoutUserInput, feed_cacheUncheckedCreateWithoutUserInput>
  }

  export type feed_cacheUpdateWithWhereUniqueWithoutUserInput = {
    where: feed_cacheWhereUniqueInput
    data: XOR<feed_cacheUpdateWithoutUserInput, feed_cacheUncheckedUpdateWithoutUserInput>
  }

  export type feed_cacheUpdateManyWithWhereWithoutUserInput = {
    where: feed_cacheScalarWhereInput
    data: XOR<feed_cacheUpdateManyMutationInput, feed_cacheUncheckedUpdateManyWithoutUserInput>
  }

  export type file_reportUpsertWithWhereUniqueWithoutUserInput = {
    where: file_reportWhereUniqueInput
    update: XOR<file_reportUpdateWithoutUserInput, file_reportUncheckedUpdateWithoutUserInput>
    create: XOR<file_reportCreateWithoutUserInput, file_reportUncheckedCreateWithoutUserInput>
  }

  export type file_reportUpdateWithWhereUniqueWithoutUserInput = {
    where: file_reportWhereUniqueInput
    data: XOR<file_reportUpdateWithoutUserInput, file_reportUncheckedUpdateWithoutUserInput>
  }

  export type file_reportUpdateManyWithWhereWithoutUserInput = {
    where: file_reportScalarWhereInput
    data: XOR<file_reportUpdateManyMutationInput, file_reportUncheckedUpdateManyWithoutUserInput>
  }

  export type followUpsertWithWhereUniqueWithoutUser_follow_follower_idTouserInput = {
    where: followWhereUniqueInput
    update: XOR<followUpdateWithoutUser_follow_follower_idTouserInput, followUncheckedUpdateWithoutUser_follow_follower_idTouserInput>
    create: XOR<followCreateWithoutUser_follow_follower_idTouserInput, followUncheckedCreateWithoutUser_follow_follower_idTouserInput>
  }

  export type followUpdateWithWhereUniqueWithoutUser_follow_follower_idTouserInput = {
    where: followWhereUniqueInput
    data: XOR<followUpdateWithoutUser_follow_follower_idTouserInput, followUncheckedUpdateWithoutUser_follow_follower_idTouserInput>
  }

  export type followUpdateManyWithWhereWithoutUser_follow_follower_idTouserInput = {
    where: followScalarWhereInput
    data: XOR<followUpdateManyMutationInput, followUncheckedUpdateManyWithoutUser_follow_follower_idTouserInput>
  }

  export type followScalarWhereInput = {
    AND?: followScalarWhereInput | followScalarWhereInput[]
    OR?: followScalarWhereInput[]
    NOT?: followScalarWhereInput | followScalarWhereInput[]
    follower_id?: IntFilter<"follow"> | number
    following_id?: IntFilter<"follow"> | number
    created_at?: DateTimeFilter<"follow"> | Date | string
  }

  export type followUpsertWithWhereUniqueWithoutUser_follow_following_idTouserInput = {
    where: followWhereUniqueInput
    update: XOR<followUpdateWithoutUser_follow_following_idTouserInput, followUncheckedUpdateWithoutUser_follow_following_idTouserInput>
    create: XOR<followCreateWithoutUser_follow_following_idTouserInput, followUncheckedCreateWithoutUser_follow_following_idTouserInput>
  }

  export type followUpdateWithWhereUniqueWithoutUser_follow_following_idTouserInput = {
    where: followWhereUniqueInput
    data: XOR<followUpdateWithoutUser_follow_following_idTouserInput, followUncheckedUpdateWithoutUser_follow_following_idTouserInput>
  }

  export type followUpdateManyWithWhereWithoutUser_follow_following_idTouserInput = {
    where: followScalarWhereInput
    data: XOR<followUpdateManyMutationInput, followUncheckedUpdateManyWithoutUser_follow_following_idTouserInput>
  }

  export type notificationUpsertWithWhereUniqueWithoutUser_notification_source_user_idTouserInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutUser_notification_source_user_idTouserInput, notificationUncheckedUpdateWithoutUser_notification_source_user_idTouserInput>
    create: XOR<notificationCreateWithoutUser_notification_source_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_source_user_idTouserInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutUser_notification_source_user_idTouserInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutUser_notification_source_user_idTouserInput, notificationUncheckedUpdateWithoutUser_notification_source_user_idTouserInput>
  }

  export type notificationUpdateManyWithWhereWithoutUser_notification_source_user_idTouserInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserInput>
  }

  export type notificationUpsertWithWhereUniqueWithoutUser_notification_user_idTouserInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutUser_notification_user_idTouserInput, notificationUncheckedUpdateWithoutUser_notification_user_idTouserInput>
    create: XOR<notificationCreateWithoutUser_notification_user_idTouserInput, notificationUncheckedCreateWithoutUser_notification_user_idTouserInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutUser_notification_user_idTouserInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutUser_notification_user_idTouserInput, notificationUncheckedUpdateWithoutUser_notification_user_idTouserInput>
  }

  export type notificationUpdateManyWithWhereWithoutUser_notification_user_idTouserInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserInput>
  }

  export type postUpsertWithWhereUniqueWithoutUserInput = {
    where: postWhereUniqueInput
    update: XOR<postUpdateWithoutUserInput, postUncheckedUpdateWithoutUserInput>
    create: XOR<postCreateWithoutUserInput, postUncheckedCreateWithoutUserInput>
  }

  export type postUpdateWithWhereUniqueWithoutUserInput = {
    where: postWhereUniqueInput
    data: XOR<postUpdateWithoutUserInput, postUncheckedUpdateWithoutUserInput>
  }

  export type postUpdateManyWithWhereWithoutUserInput = {
    where: postScalarWhereInput
    data: XOR<postUpdateManyMutationInput, postUncheckedUpdateManyWithoutUserInput>
  }

  export type post_likeUpsertWithWhereUniqueWithoutUserInput = {
    where: post_likeWhereUniqueInput
    update: XOR<post_likeUpdateWithoutUserInput, post_likeUncheckedUpdateWithoutUserInput>
    create: XOR<post_likeCreateWithoutUserInput, post_likeUncheckedCreateWithoutUserInput>
  }

  export type post_likeUpdateWithWhereUniqueWithoutUserInput = {
    where: post_likeWhereUniqueInput
    data: XOR<post_likeUpdateWithoutUserInput, post_likeUncheckedUpdateWithoutUserInput>
  }

  export type post_likeUpdateManyWithWhereWithoutUserInput = {
    where: post_likeScalarWhereInput
    data: XOR<post_likeUpdateManyMutationInput, post_likeUncheckedUpdateManyWithoutUserInput>
  }

  export type post_reactionUpsertWithWhereUniqueWithoutUserInput = {
    where: post_reactionWhereUniqueInput
    update: XOR<post_reactionUpdateWithoutUserInput, post_reactionUncheckedUpdateWithoutUserInput>
    create: XOR<post_reactionCreateWithoutUserInput, post_reactionUncheckedCreateWithoutUserInput>
  }

  export type post_reactionUpdateWithWhereUniqueWithoutUserInput = {
    where: post_reactionWhereUniqueInput
    data: XOR<post_reactionUpdateWithoutUserInput, post_reactionUncheckedUpdateWithoutUserInput>
  }

  export type post_reactionUpdateManyWithWhereWithoutUserInput = {
    where: post_reactionScalarWhereInput
    data: XOR<post_reactionUpdateManyMutationInput, post_reactionUncheckedUpdateManyWithoutUserInput>
  }

  export type profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput = {
    where: profile_visitWhereUniqueInput
    update: XOR<profile_visitUpdateWithoutUser_profile_visit_profile_user_idTouserInput, profile_visitUncheckedUpdateWithoutUser_profile_visit_profile_user_idTouserInput>
    create: XOR<profile_visitCreateWithoutUser_profile_visit_profile_user_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_profile_user_idTouserInput>
  }

  export type profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_profile_user_idTouserInput = {
    where: profile_visitWhereUniqueInput
    data: XOR<profile_visitUpdateWithoutUser_profile_visit_profile_user_idTouserInput, profile_visitUncheckedUpdateWithoutUser_profile_visit_profile_user_idTouserInput>
  }

  export type profile_visitUpdateManyWithWhereWithoutUser_profile_visit_profile_user_idTouserInput = {
    where: profile_visitScalarWhereInput
    data: XOR<profile_visitUpdateManyMutationInput, profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserInput>
  }

  export type profile_visitScalarWhereInput = {
    AND?: profile_visitScalarWhereInput | profile_visitScalarWhereInput[]
    OR?: profile_visitScalarWhereInput[]
    NOT?: profile_visitScalarWhereInput | profile_visitScalarWhereInput[]
    id?: IntFilter<"profile_visit"> | number
    visitor_id?: IntFilter<"profile_visit"> | number
    profile_user_id?: IntFilter<"profile_visit"> | number
    visited_at?: DateTimeFilter<"profile_visit"> | Date | string
  }

  export type profile_visitUpsertWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput = {
    where: profile_visitWhereUniqueInput
    update: XOR<profile_visitUpdateWithoutUser_profile_visit_visitor_idTouserInput, profile_visitUncheckedUpdateWithoutUser_profile_visit_visitor_idTouserInput>
    create: XOR<profile_visitCreateWithoutUser_profile_visit_visitor_idTouserInput, profile_visitUncheckedCreateWithoutUser_profile_visit_visitor_idTouserInput>
  }

  export type profile_visitUpdateWithWhereUniqueWithoutUser_profile_visit_visitor_idTouserInput = {
    where: profile_visitWhereUniqueInput
    data: XOR<profile_visitUpdateWithoutUser_profile_visit_visitor_idTouserInput, profile_visitUncheckedUpdateWithoutUser_profile_visit_visitor_idTouserInput>
  }

  export type profile_visitUpdateManyWithWhereWithoutUser_profile_visit_visitor_idTouserInput = {
    where: profile_visitScalarWhereInput
    data: XOR<profile_visitUpdateManyMutationInput, profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserInput>
  }

  export type reportUpsertWithWhereUniqueWithoutUserInput = {
    where: reportWhereUniqueInput
    update: XOR<reportUpdateWithoutUserInput, reportUncheckedUpdateWithoutUserInput>
    create: XOR<reportCreateWithoutUserInput, reportUncheckedCreateWithoutUserInput>
  }

  export type reportUpdateWithWhereUniqueWithoutUserInput = {
    where: reportWhereUniqueInput
    data: XOR<reportUpdateWithoutUserInput, reportUncheckedUpdateWithoutUserInput>
  }

  export type reportUpdateManyWithWhereWithoutUserInput = {
    where: reportScalarWhereInput
    data: XOR<reportUpdateManyMutationInput, reportUncheckedUpdateManyWithoutUserInput>
  }

  export type reportScalarWhereInput = {
    AND?: reportScalarWhereInput | reportScalarWhereInput[]
    OR?: reportScalarWhereInput[]
    NOT?: reportScalarWhereInput | reportScalarWhereInput[]
    id?: IntFilter<"report"> | number
    reporter_id?: IntFilter<"report"> | number
    target_type?: Enumreport_target_typeFilter<"report"> | $Enums.report_target_type
    target_id?: IntFilter<"report"> | number
    reason?: StringNullableFilter<"report"> | string | null
    created_at?: DateTimeFilter<"report"> | Date | string
  }

  export type search_historyUpsertWithWhereUniqueWithoutUserInput = {
    where: search_historyWhereUniqueInput
    update: XOR<search_historyUpdateWithoutUserInput, search_historyUncheckedUpdateWithoutUserInput>
    create: XOR<search_historyCreateWithoutUserInput, search_historyUncheckedCreateWithoutUserInput>
  }

  export type search_historyUpdateWithWhereUniqueWithoutUserInput = {
    where: search_historyWhereUniqueInput
    data: XOR<search_historyUpdateWithoutUserInput, search_historyUncheckedUpdateWithoutUserInput>
  }

  export type search_historyUpdateManyWithWhereWithoutUserInput = {
    where: search_historyScalarWhereInput
    data: XOR<search_historyUpdateManyMutationInput, search_historyUncheckedUpdateManyWithoutUserInput>
  }

  export type search_historyScalarWhereInput = {
    AND?: search_historyScalarWhereInput | search_historyScalarWhereInput[]
    OR?: search_historyScalarWhereInput[]
    NOT?: search_historyScalarWhereInput | search_historyScalarWhereInput[]
    id?: IntFilter<"search_history"> | number
    user_id?: IntFilter<"search_history"> | number
    keyword?: StringFilter<"search_history"> | string
    searched_at?: DateTimeFilter<"search_history"> | Date | string
  }

  export type user_blockUpsertWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput = {
    where: user_blockWhereUniqueInput
    update: XOR<user_blockUpdateWithoutUser_user_block_blocked_user_idTouserInput, user_blockUncheckedUpdateWithoutUser_user_block_blocked_user_idTouserInput>
    create: XOR<user_blockCreateWithoutUser_user_block_blocked_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_blocked_user_idTouserInput>
  }

  export type user_blockUpdateWithWhereUniqueWithoutUser_user_block_blocked_user_idTouserInput = {
    where: user_blockWhereUniqueInput
    data: XOR<user_blockUpdateWithoutUser_user_block_blocked_user_idTouserInput, user_blockUncheckedUpdateWithoutUser_user_block_blocked_user_idTouserInput>
  }

  export type user_blockUpdateManyWithWhereWithoutUser_user_block_blocked_user_idTouserInput = {
    where: user_blockScalarWhereInput
    data: XOR<user_blockUpdateManyMutationInput, user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserInput>
  }

  export type user_blockScalarWhereInput = {
    AND?: user_blockScalarWhereInput | user_blockScalarWhereInput[]
    OR?: user_blockScalarWhereInput[]
    NOT?: user_blockScalarWhereInput | user_blockScalarWhereInput[]
    id?: IntFilter<"user_block"> | number
    user_id?: IntFilter<"user_block"> | number
    blocked_user_id?: IntFilter<"user_block"> | number
    created_at?: DateTimeFilter<"user_block"> | Date | string
  }

  export type user_blockUpsertWithWhereUniqueWithoutUser_user_block_user_idTouserInput = {
    where: user_blockWhereUniqueInput
    update: XOR<user_blockUpdateWithoutUser_user_block_user_idTouserInput, user_blockUncheckedUpdateWithoutUser_user_block_user_idTouserInput>
    create: XOR<user_blockCreateWithoutUser_user_block_user_idTouserInput, user_blockUncheckedCreateWithoutUser_user_block_user_idTouserInput>
  }

  export type user_blockUpdateWithWhereUniqueWithoutUser_user_block_user_idTouserInput = {
    where: user_blockWhereUniqueInput
    data: XOR<user_blockUpdateWithoutUser_user_block_user_idTouserInput, user_blockUncheckedUpdateWithoutUser_user_block_user_idTouserInput>
  }

  export type user_blockUpdateManyWithWhereWithoutUser_user_block_user_idTouserInput = {
    where: user_blockScalarWhereInput
    data: XOR<user_blockUpdateManyMutationInput, user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserInput>
  }

  export type user_oauthUpsertWithoutUserInput = {
    update: XOR<user_oauthUpdateWithoutUserInput, user_oauthUncheckedUpdateWithoutUserInput>
    create: XOR<user_oauthCreateWithoutUserInput, user_oauthUncheckedCreateWithoutUserInput>
    where?: user_oauthWhereInput
  }

  export type user_oauthUpdateToOneWithWhereWithoutUserInput = {
    where?: user_oauthWhereInput
    data: XOR<user_oauthUpdateWithoutUserInput, user_oauthUncheckedUpdateWithoutUserInput>
  }

  export type user_oauthUpdateWithoutUserInput = {
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_oauthUncheckedUpdateWithoutUserInput = {
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_profileUpsertWithoutUserInput = {
    update: XOR<user_profileUpdateWithoutUserInput, user_profileUncheckedUpdateWithoutUserInput>
    create: XOR<user_profileCreateWithoutUserInput, user_profileUncheckedCreateWithoutUserInput>
    where?: user_profileWhereInput
  }

  export type user_profileUpdateToOneWithWhereWithoutUserInput = {
    where?: user_profileWhereInput
    data: XOR<user_profileUpdateWithoutUserInput, user_profileUncheckedUpdateWithoutUserInput>
  }

  export type user_profileUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_profileUncheckedUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_securityUpsertWithoutUserInput = {
    update: XOR<user_securityUpdateWithoutUserInput, user_securityUncheckedUpdateWithoutUserInput>
    create: XOR<user_securityCreateWithoutUserInput, user_securityUncheckedCreateWithoutUserInput>
    where?: user_securityWhereInput
  }

  export type user_securityUpdateToOneWithWhereWithoutUserInput = {
    where?: user_securityWhereInput
    data: XOR<user_securityUpdateWithoutUserInput, user_securityUncheckedUpdateWithoutUserInput>
  }

  export type user_securityUpdateWithoutUserInput = {
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_securityUncheckedUpdateWithoutUserInput = {
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userCreateWithoutUser_block_user_block_blocked_user_idTouserInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_block_user_block_blocked_user_idTouserInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_block_user_block_blocked_user_idTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_block_user_block_blocked_user_idTouserInput, userUncheckedCreateWithoutUser_block_user_block_blocked_user_idTouserInput>
  }

  export type userCreateWithoutUser_block_user_block_user_idTouserInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_block_user_block_user_idTouserInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_block_user_block_user_idTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_block_user_block_user_idTouserInput, userUncheckedCreateWithoutUser_block_user_block_user_idTouserInput>
  }

  export type userUpsertWithoutUser_block_user_block_blocked_user_idTouserInput = {
    update: XOR<userUpdateWithoutUser_block_user_block_blocked_user_idTouserInput, userUncheckedUpdateWithoutUser_block_user_block_blocked_user_idTouserInput>
    create: XOR<userCreateWithoutUser_block_user_block_blocked_user_idTouserInput, userUncheckedCreateWithoutUser_block_user_block_blocked_user_idTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_block_user_block_blocked_user_idTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_block_user_block_blocked_user_idTouserInput, userUncheckedUpdateWithoutUser_block_user_block_blocked_user_idTouserInput>
  }

  export type userUpdateWithoutUser_block_user_block_blocked_user_idTouserInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_block_user_block_blocked_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userUpsertWithoutUser_block_user_block_user_idTouserInput = {
    update: XOR<userUpdateWithoutUser_block_user_block_user_idTouserInput, userUncheckedUpdateWithoutUser_block_user_block_user_idTouserInput>
    create: XOR<userCreateWithoutUser_block_user_block_user_idTouserInput, userUncheckedCreateWithoutUser_block_user_block_user_idTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_block_user_block_user_idTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_block_user_block_user_idTouserInput, userUncheckedUpdateWithoutUser_block_user_block_user_idTouserInput>
  }

  export type userUpdateWithoutUser_block_user_block_user_idTouserInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_block_user_block_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userCreateWithoutUser_oauthInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_oauthInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_oauthInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_oauthInput, userUncheckedCreateWithoutUser_oauthInput>
  }

  export type userUpsertWithoutUser_oauthInput = {
    update: XOR<userUpdateWithoutUser_oauthInput, userUncheckedUpdateWithoutUser_oauthInput>
    create: XOR<userCreateWithoutUser_oauthInput, userUncheckedCreateWithoutUser_oauthInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_oauthInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_oauthInput, userUncheckedUpdateWithoutUser_oauthInput>
  }

  export type userUpdateWithoutUser_oauthInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_oauthInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userCreateWithoutUser_profileInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_security?: user_securityCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_profileInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_profileInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_profileInput, userUncheckedCreateWithoutUser_profileInput>
  }

  export type userUpsertWithoutUser_profileInput = {
    update: XOR<userUpdateWithoutUser_profileInput, userUncheckedUpdateWithoutUser_profileInput>
    create: XOR<userCreateWithoutUser_profileInput, userUncheckedCreateWithoutUser_profileInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_profileInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_profileInput, userUncheckedUpdateWithoutUser_profileInput>
  }

  export type userUpdateWithoutUser_profileInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_security?: user_securityUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_profileInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUserNestedInput
  }

  export type userCreateWithoutUser_securityInput = {
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userCreateNestedManyWithoutUserInput
    comment?: commentCreateNestedManyWithoutUserInput
    comment_like?: comment_likeCreateNestedManyWithoutUserInput
    community?: communityCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheCreateNestedManyWithoutUserInput
    file_report?: file_reportCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postCreateNestedManyWithoutUserInput
    post_like?: post_likeCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportCreateNestedManyWithoutUserInput
    search_history?: search_historyCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthCreateNestedOneWithoutUserInput
    user_profile?: user_profileCreateNestedOneWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_securityInput = {
    id?: number
    username: string
    password: string
    email: string
    name?: string | null
    nickname?: string | null
    profile_img?: string | null
    bio?: string | null
    gender?: string | null
    email_verified?: boolean
    status?: $Enums.user_status
    website?: string | null
    location?: string | null
    birthday?: Date | string | null
    oauth_provider?: string | null
    oauth_id?: string | null
    created_at?: Date | string
    chat_message?: chat_messageUncheckedCreateNestedManyWithoutUserInput
    chat_room_user?: chat_room_userUncheckedCreateNestedManyWithoutUserInput
    comment?: commentUncheckedCreateNestedManyWithoutUserInput
    comment_like?: comment_likeUncheckedCreateNestedManyWithoutUserInput
    community?: communityUncheckedCreateNestedManyWithoutUserInput
    feed_cache?: feed_cacheUncheckedCreateNestedManyWithoutUserInput
    file_report?: file_reportUncheckedCreateNestedManyWithoutUserInput
    follow_follow_follower_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_follower_idTouserInput
    follow_follow_following_idTouser?: followUncheckedCreateNestedManyWithoutUser_follow_following_idTouserInput
    notification_notification_source_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_source_user_idTouserInput
    notification_notification_user_idTouser?: notificationUncheckedCreateNestedManyWithoutUser_notification_user_idTouserInput
    post?: postUncheckedCreateNestedManyWithoutUserInput
    post_like?: post_likeUncheckedCreateNestedManyWithoutUserInput
    post_reaction?: post_reactionUncheckedCreateNestedManyWithoutUserInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_profile_user_idTouserInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedCreateNestedManyWithoutUser_profile_visit_visitor_idTouserInput
    report?: reportUncheckedCreateNestedManyWithoutUserInput
    search_history?: search_historyUncheckedCreateNestedManyWithoutUserInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_blocked_user_idTouserInput
    user_block_user_block_user_idTouser?: user_blockUncheckedCreateNestedManyWithoutUser_user_block_user_idTouserInput
    user_oauth?: user_oauthUncheckedCreateNestedOneWithoutUserInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_securityInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_securityInput, userUncheckedCreateWithoutUser_securityInput>
  }

  export type userUpsertWithoutUser_securityInput = {
    update: XOR<userUpdateWithoutUser_securityInput, userUncheckedUpdateWithoutUser_securityInput>
    create: XOR<userCreateWithoutUser_securityInput, userUncheckedCreateWithoutUser_securityInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_securityInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_securityInput, userUncheckedUpdateWithoutUser_securityInput>
  }

  export type userUpdateWithoutUser_securityInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUpdateManyWithoutUserNestedInput
    comment?: commentUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUpdateManyWithoutUserNestedInput
    community?: communityUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutUserNestedInput
    file_report?: file_reportUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUpdateManyWithoutUserNestedInput
    post_like?: post_likeUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUpdateManyWithoutUserNestedInput
    search_history?: search_historyUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUpdateOneWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_securityInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    profile_img?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: Enumuser_statusFieldUpdateOperationsInput | $Enums.user_status
    website?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    oauth_provider?: NullableStringFieldUpdateOperationsInput | string | null
    oauth_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUncheckedUpdateManyWithoutUserNestedInput
    chat_room_user?: chat_room_userUncheckedUpdateManyWithoutUserNestedInput
    comment?: commentUncheckedUpdateManyWithoutUserNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutUserNestedInput
    community?: communityUncheckedUpdateManyWithoutUserNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutUserNestedInput
    file_report?: file_reportUncheckedUpdateManyWithoutUserNestedInput
    follow_follow_follower_idTouser?: followUncheckedUpdateManyWithoutUser_follow_follower_idTouserNestedInput
    follow_follow_following_idTouser?: followUncheckedUpdateManyWithoutUser_follow_following_idTouserNestedInput
    notification_notification_source_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserNestedInput
    notification_notification_user_idTouser?: notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserNestedInput
    post?: postUncheckedUpdateManyWithoutUserNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutUserNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutUserNestedInput
    profile_visit_profile_visit_profile_user_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserNestedInput
    profile_visit_profile_visit_visitor_idTouser?: profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserNestedInput
    report?: reportUncheckedUpdateManyWithoutUserNestedInput
    search_history?: search_historyUncheckedUpdateManyWithoutUserNestedInput
    user_block_user_block_blocked_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserNestedInput
    user_block_user_block_user_idTouser?: user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserNestedInput
    user_oauth?: user_oauthUncheckedUpdateOneWithoutUserNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type notificationCreateManyChat_messageInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type notificationUpdateWithoutChat_messageInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_room?: chat_roomUpdateOneWithoutNotificationNestedInput
    comment?: commentUpdateOneWithoutNotificationNestedInput
    post?: postUpdateOneWithoutNotificationNestedInput
    user_notification_source_user_idTouser?: userUpdateOneWithoutNotification_notification_source_user_idTouserNestedInput
    user_notification_user_idTouser?: userUpdateOneRequiredWithoutNotification_notification_user_idTouserNestedInput
  }

  export type notificationUncheckedUpdateWithoutChat_messageInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUncheckedUpdateManyWithoutChat_messageInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_messageCreateManyChat_roomInput = {
    id?: number
    sender_id: number
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
  }

  export type chat_room_userCreateManyChat_roomInput = {
    id?: number
    user_id: number
    left_at?: Date | string | null
  }

  export type notificationCreateManyChat_roomInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    created_at?: Date | string
  }

  export type chat_messageUpdateWithoutChat_roomInput = {
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutChat_messageNestedInput
    notification?: notificationUpdateManyWithoutChat_messageNestedInput
  }

  export type chat_messageUncheckedUpdateWithoutChat_roomInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    notification?: notificationUncheckedUpdateManyWithoutChat_messageNestedInput
  }

  export type chat_messageUncheckedUpdateManyWithoutChat_roomInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_room_userUpdateWithoutChat_roomInput = {
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutChat_room_userNestedInput
  }

  export type chat_room_userUncheckedUpdateWithoutChat_roomInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_room_userUncheckedUpdateManyWithoutChat_roomInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUpdateWithoutChat_roomInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateOneWithoutNotificationNestedInput
    comment?: commentUpdateOneWithoutNotificationNestedInput
    post?: postUpdateOneWithoutNotificationNestedInput
    user_notification_source_user_idTouser?: userUpdateOneWithoutNotification_notification_source_user_idTouserNestedInput
    user_notification_user_idTouser?: userUpdateOneRequiredWithoutNotification_notification_user_idTouserNestedInput
  }

  export type notificationUncheckedUpdateWithoutChat_roomInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUncheckedUpdateManyWithoutChat_roomInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type commentCreateManyCommentInput = {
    id?: number
    post_id: number
    user_id: number
    content?: string | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type comment_likeCreateManyCommentInput = {
    id?: number
    user_id: number
    created_at?: Date | string
  }

  export type notificationCreateManyCommentInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type commentUpdateWithoutCommentInput = {
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    other_comment?: commentUpdateManyWithoutCommentNestedInput
    post?: postUpdateOneRequiredWithoutCommentNestedInput
    user?: userUpdateOneRequiredWithoutCommentNestedInput
    comment_like?: comment_likeUpdateManyWithoutCommentNestedInput
    notification?: notificationUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    other_comment?: commentUncheckedUpdateManyWithoutCommentNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutCommentNestedInput
    notification?: notificationUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateManyWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comment_likeUpdateWithoutCommentInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutComment_likeNestedInput
  }

  export type comment_likeUncheckedUpdateWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type comment_likeUncheckedUpdateManyWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUpdateWithoutCommentInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateOneWithoutNotificationNestedInput
    chat_room?: chat_roomUpdateOneWithoutNotificationNestedInput
    post?: postUpdateOneWithoutNotificationNestedInput
    user_notification_source_user_idTouser?: userUpdateOneWithoutNotification_notification_source_user_idTouserNestedInput
    user_notification_user_idTouser?: userUpdateOneRequiredWithoutNotification_notification_user_idTouserNestedInput
  }

  export type notificationUncheckedUpdateWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUncheckedUpdateManyWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type postCreateManyCommunityInput = {
    id?: number
    user_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type postUpdateWithoutCommunityInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutPostNestedInput
    notification?: notificationUpdateManyWithoutPostNestedInput
    user?: userUpdateOneRequiredWithoutPostNestedInput
    post_file?: post_fileUpdateManyWithoutPostNestedInput
    post_like?: post_likeUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutCommunityInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUncheckedUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutPostNestedInput
    notification?: notificationUncheckedUpdateManyWithoutPostNestedInput
    post_file?: post_fileUncheckedUpdateManyWithoutPostNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUncheckedUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateManyWithoutCommunityInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type post_reactionCreateManyEmojiInput = {
    post_id: number
    user_id: number
    created_at?: Date | string
  }

  export type post_reactionUpdateWithoutEmojiInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postUpdateOneRequiredWithoutPost_reactionNestedInput
    user?: userUpdateOneRequiredWithoutPost_reactionNestedInput
  }

  export type post_reactionUncheckedUpdateWithoutEmojiInput = {
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_reactionUncheckedUpdateManyWithoutEmojiInput = {
    post_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type commentCreateManyPostInput = {
    id?: number
    user_id: number
    content?: string | null
    parent_id?: number | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type feed_cacheCreateManyPostInput = {
    id?: number
    user_id: number
    score: number
    created_at?: Date | string
  }

  export type notificationCreateManyPostInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type post_fileCreateManyPostInput = {
    id?: number
    file_url?: string | null
    file_type?: string | null
    is_thumbnail?: boolean
    uploaded_at?: Date | string
  }

  export type post_likeCreateManyPostInput = {
    id?: number
    user_id: number
    created_at?: Date | string
  }

  export type post_reactionCreateManyPostInput = {
    user_id: number
    emoji_id: number
    created_at?: Date | string
  }

  export type post_tagCreateManyPostInput = {
    tag_id: number
  }

  export type commentUpdateWithoutPostInput = {
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateOneWithoutOther_commentNestedInput
    other_comment?: commentUpdateManyWithoutCommentNestedInput
    user?: userUpdateOneRequiredWithoutCommentNestedInput
    comment_like?: comment_likeUpdateManyWithoutCommentNestedInput
    notification?: notificationUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    other_comment?: commentUncheckedUpdateManyWithoutCommentNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutCommentNestedInput
    notification?: notificationUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateManyWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type feed_cacheUpdateWithoutPostInput = {
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutFeed_cacheNestedInput
  }

  export type feed_cacheUncheckedUpdateWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feed_cacheUncheckedUpdateManyWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUpdateWithoutPostInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateOneWithoutNotificationNestedInput
    chat_room?: chat_roomUpdateOneWithoutNotificationNestedInput
    comment?: commentUpdateOneWithoutNotificationNestedInput
    user_notification_source_user_idTouser?: userUpdateOneWithoutNotification_notification_source_user_idTouserNestedInput
    user_notification_user_idTouser?: userUpdateOneRequiredWithoutNotification_notification_user_idTouserNestedInput
  }

  export type notificationUncheckedUpdateWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUncheckedUpdateManyWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_fileUpdateWithoutPostInput = {
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_thumbnail?: BoolFieldUpdateOperationsInput | boolean
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    file_report?: file_reportUpdateManyWithoutPost_fileNestedInput
  }

  export type post_fileUncheckedUpdateWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_thumbnail?: BoolFieldUpdateOperationsInput | boolean
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    file_report?: file_reportUncheckedUpdateManyWithoutPost_fileNestedInput
  }

  export type post_fileUncheckedUpdateManyWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    file_type?: NullableStringFieldUpdateOperationsInput | string | null
    is_thumbnail?: BoolFieldUpdateOperationsInput | boolean
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_likeUpdateWithoutPostInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPost_likeNestedInput
  }

  export type post_likeUncheckedUpdateWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_likeUncheckedUpdateManyWithoutPostInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_reactionUpdateWithoutPostInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    emoji?: emojiUpdateOneRequiredWithoutPost_reactionNestedInput
    user?: userUpdateOneRequiredWithoutPost_reactionNestedInput
  }

  export type post_reactionUncheckedUpdateWithoutPostInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    emoji_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_reactionUncheckedUpdateManyWithoutPostInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    emoji_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_tagUpdateWithoutPostInput = {
    tag?: tagUpdateOneRequiredWithoutPost_tagNestedInput
  }

  export type post_tagUncheckedUpdateWithoutPostInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
  }

  export type post_tagUncheckedUpdateManyWithoutPostInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
  }

  export type file_reportCreateManyPost_fileInput = {
    id?: number
    reporter_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type file_reportUpdateWithoutPost_fileInput = {
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutFile_reportNestedInput
  }

  export type file_reportUncheckedUpdateWithoutPost_fileInput = {
    id?: IntFieldUpdateOperationsInput | number
    reporter_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type file_reportUncheckedUpdateManyWithoutPost_fileInput = {
    id?: IntFieldUpdateOperationsInput | number
    reporter_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_tagCreateManyTagInput = {
    post_id: number
  }

  export type post_tagUpdateWithoutTagInput = {
    post?: postUpdateOneRequiredWithoutPost_tagNestedInput
  }

  export type post_tagUncheckedUpdateWithoutTagInput = {
    post_id?: IntFieldUpdateOperationsInput | number
  }

  export type post_tagUncheckedUpdateManyWithoutTagInput = {
    post_id?: IntFieldUpdateOperationsInput | number
  }

  export type chat_messageCreateManyUserInput = {
    id?: number
    chatroom_id: number
    message?: string | null
    file_url?: string | null
    is_deleted?: boolean
    created_at?: Date | string
  }

  export type chat_room_userCreateManyUserInput = {
    id?: number
    chatroom_id: number
    left_at?: Date | string | null
  }

  export type commentCreateManyUserInput = {
    id?: number
    post_id: number
    content?: string | null
    parent_id?: number | null
    is_anonymous?: boolean
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type comment_likeCreateManyUserInput = {
    id?: number
    comment_id: number
    created_at?: Date | string
  }

  export type communityCreateManyUserInput = {
    id?: number
    name: string
    description?: string | null
    is_private?: boolean
    created_at?: Date | string
  }

  export type feed_cacheCreateManyUserInput = {
    id?: number
    post_id: number
    score: number
    created_at?: Date | string
  }

  export type file_reportCreateManyUserInput = {
    id?: number
    file_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type followCreateManyUser_follow_follower_idTouserInput = {
    following_id: number
    created_at?: Date | string
  }

  export type followCreateManyUser_follow_following_idTouserInput = {
    follower_id: number
    created_at?: Date | string
  }

  export type notificationCreateManyUser_notification_source_user_idTouserInput = {
    id?: number
    user_id: number
    type: string
    message?: string | null
    is_read?: boolean
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type notificationCreateManyUser_notification_user_idTouserInput = {
    id?: number
    type: string
    message?: string | null
    is_read?: boolean
    source_user_id?: number | null
    related_post_id?: number | null
    related_comment_id?: number | null
    chat_message_id?: number | null
    chat_room_id?: number | null
    created_at?: Date | string
  }

  export type postCreateManyUserInput = {
    id?: number
    community_id: number
    title?: string | null
    content?: string | null
    is_anonymous?: boolean
    visibility?: $Enums.post_visibility
    view_count?: number
    comment_count?: number
    is_blinded?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type post_likeCreateManyUserInput = {
    id?: number
    post_id: number
    created_at?: Date | string
  }

  export type post_reactionCreateManyUserInput = {
    post_id: number
    emoji_id: number
    created_at?: Date | string
  }

  export type profile_visitCreateManyUser_profile_visit_profile_user_idTouserInput = {
    id?: number
    visitor_id: number
    visited_at?: Date | string
  }

  export type profile_visitCreateManyUser_profile_visit_visitor_idTouserInput = {
    id?: number
    profile_user_id: number
    visited_at?: Date | string
  }

  export type reportCreateManyUserInput = {
    id?: number
    target_type: $Enums.report_target_type
    target_id: number
    reason?: string | null
    created_at?: Date | string
  }

  export type search_historyCreateManyUserInput = {
    id?: number
    keyword: string
    searched_at?: Date | string
  }

  export type user_blockCreateManyUser_user_block_blocked_user_idTouserInput = {
    id?: number
    user_id: number
    created_at?: Date | string
  }

  export type user_blockCreateManyUser_user_block_user_idTouserInput = {
    id?: number
    blocked_user_id: number
    created_at?: Date | string
  }

  export type chat_messageUpdateWithoutUserInput = {
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_room?: chat_roomUpdateOneRequiredWithoutChat_messageNestedInput
    notification?: notificationUpdateManyWithoutChat_messageNestedInput
  }

  export type chat_messageUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    chatroom_id?: IntFieldUpdateOperationsInput | number
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    notification?: notificationUncheckedUpdateManyWithoutChat_messageNestedInput
  }

  export type chat_messageUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    chatroom_id?: IntFieldUpdateOperationsInput | number
    message?: NullableStringFieldUpdateOperationsInput | string | null
    file_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_room_userUpdateWithoutUserInput = {
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat_room?: chat_roomUpdateOneRequiredWithoutChat_room_userNestedInput
  }

  export type chat_room_userUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    chatroom_id?: IntFieldUpdateOperationsInput | number
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_room_userUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    chatroom_id?: IntFieldUpdateOperationsInput | number
    left_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type commentUpdateWithoutUserInput = {
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateOneWithoutOther_commentNestedInput
    other_comment?: commentUpdateManyWithoutCommentNestedInput
    post?: postUpdateOneRequiredWithoutCommentNestedInput
    comment_like?: comment_likeUpdateManyWithoutCommentNestedInput
    notification?: notificationUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    other_comment?: commentUncheckedUpdateManyWithoutCommentNestedInput
    comment_like?: comment_likeUncheckedUpdateManyWithoutCommentNestedInput
    notification?: notificationUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type commentUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comment_likeUpdateWithoutUserInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    comment?: commentUpdateOneRequiredWithoutComment_likeNestedInput
  }

  export type comment_likeUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type comment_likeUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communityUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feed_cacheUpdateWithoutUserInput = {
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postUpdateOneRequiredWithoutFeed_cacheNestedInput
  }

  export type feed_cacheUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type feed_cacheUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type file_reportUpdateWithoutUserInput = {
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_file?: post_fileUpdateOneRequiredWithoutFile_reportNestedInput
  }

  export type file_reportUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    file_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type file_reportUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    file_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type followUpdateWithoutUser_follow_follower_idTouserInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_follow_following_idTouser?: userUpdateOneRequiredWithoutFollow_follow_following_idTouserNestedInput
  }

  export type followUncheckedUpdateWithoutUser_follow_follower_idTouserInput = {
    following_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type followUncheckedUpdateManyWithoutUser_follow_follower_idTouserInput = {
    following_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type followUpdateWithoutUser_follow_following_idTouserInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_follow_follower_idTouser?: userUpdateOneRequiredWithoutFollow_follow_follower_idTouserNestedInput
  }

  export type followUncheckedUpdateWithoutUser_follow_following_idTouserInput = {
    follower_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type followUncheckedUpdateManyWithoutUser_follow_following_idTouserInput = {
    follower_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUpdateWithoutUser_notification_source_user_idTouserInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateOneWithoutNotificationNestedInput
    chat_room?: chat_roomUpdateOneWithoutNotificationNestedInput
    comment?: commentUpdateOneWithoutNotificationNestedInput
    post?: postUpdateOneWithoutNotificationNestedInput
    user_notification_user_idTouser?: userUpdateOneRequiredWithoutNotification_notification_user_idTouserNestedInput
  }

  export type notificationUncheckedUpdateWithoutUser_notification_source_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUncheckedUpdateManyWithoutUser_notification_source_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUpdateWithoutUser_notification_user_idTouserInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_message?: chat_messageUpdateOneWithoutNotificationNestedInput
    chat_room?: chat_roomUpdateOneWithoutNotificationNestedInput
    comment?: commentUpdateOneWithoutNotificationNestedInput
    post?: postUpdateOneWithoutNotificationNestedInput
    user_notification_source_user_idTouser?: userUpdateOneWithoutNotification_notification_source_user_idTouserNestedInput
  }

  export type notificationUncheckedUpdateWithoutUser_notification_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationUncheckedUpdateManyWithoutUser_notification_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    source_user_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_post_id?: NullableIntFieldUpdateOperationsInput | number | null
    related_comment_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_message_id?: NullableIntFieldUpdateOperationsInput | number | null
    chat_room_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type postUpdateWithoutUserInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUpdateManyWithoutPostNestedInput
    notification?: notificationUpdateManyWithoutPostNestedInput
    community?: communityUpdateOneRequiredWithoutPostNestedInput
    post_file?: post_fileUpdateManyWithoutPostNestedInput
    post_like?: post_likeUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: commentUncheckedUpdateManyWithoutPostNestedInput
    feed_cache?: feed_cacheUncheckedUpdateManyWithoutPostNestedInput
    notification?: notificationUncheckedUpdateManyWithoutPostNestedInput
    post_file?: post_fileUncheckedUpdateManyWithoutPostNestedInput
    post_like?: post_likeUncheckedUpdateManyWithoutPostNestedInput
    post_reaction?: post_reactionUncheckedUpdateManyWithoutPostNestedInput
    post_tag?: post_tagUncheckedUpdateManyWithoutPostNestedInput
  }

  export type postUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    visibility?: Enumpost_visibilityFieldUpdateOperationsInput | $Enums.post_visibility
    view_count?: IntFieldUpdateOperationsInput | number
    comment_count?: IntFieldUpdateOperationsInput | number
    is_blinded?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type post_likeUpdateWithoutUserInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postUpdateOneRequiredWithoutPost_likeNestedInput
  }

  export type post_likeUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_likeUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    post_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_reactionUpdateWithoutUserInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    emoji?: emojiUpdateOneRequiredWithoutPost_reactionNestedInput
    post?: postUpdateOneRequiredWithoutPost_reactionNestedInput
  }

  export type post_reactionUncheckedUpdateWithoutUserInput = {
    post_id?: IntFieldUpdateOperationsInput | number
    emoji_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_reactionUncheckedUpdateManyWithoutUserInput = {
    post_id?: IntFieldUpdateOperationsInput | number
    emoji_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type profile_visitUpdateWithoutUser_profile_visit_profile_user_idTouserInput = {
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_profile_visit_visitor_idTouser?: userUpdateOneRequiredWithoutProfile_visit_profile_visit_visitor_idTouserNestedInput
  }

  export type profile_visitUncheckedUpdateWithoutUser_profile_visit_profile_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    visitor_id?: IntFieldUpdateOperationsInput | number
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type profile_visitUncheckedUpdateManyWithoutUser_profile_visit_profile_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    visitor_id?: IntFieldUpdateOperationsInput | number
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type profile_visitUpdateWithoutUser_profile_visit_visitor_idTouserInput = {
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_profile_visit_profile_user_idTouser?: userUpdateOneRequiredWithoutProfile_visit_profile_visit_profile_user_idTouserNestedInput
  }

  export type profile_visitUncheckedUpdateWithoutUser_profile_visit_visitor_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    profile_user_id?: IntFieldUpdateOperationsInput | number
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type profile_visitUncheckedUpdateManyWithoutUser_profile_visit_visitor_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    profile_user_id?: IntFieldUpdateOperationsInput | number
    visited_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reportUpdateWithoutUserInput = {
    target_type?: Enumreport_target_typeFieldUpdateOperationsInput | $Enums.report_target_type
    target_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reportUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    target_type?: Enumreport_target_typeFieldUpdateOperationsInput | $Enums.report_target_type
    target_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reportUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    target_type?: Enumreport_target_typeFieldUpdateOperationsInput | $Enums.report_target_type
    target_id?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type search_historyUpdateWithoutUserInput = {
    keyword?: StringFieldUpdateOperationsInput | string
    searched_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type search_historyUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    searched_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type search_historyUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    searched_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blockUpdateWithoutUser_user_block_blocked_user_idTouserInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_user_block_user_idTouser?: userUpdateOneRequiredWithoutUser_block_user_block_user_idTouserNestedInput
  }

  export type user_blockUncheckedUpdateWithoutUser_user_block_blocked_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blockUncheckedUpdateManyWithoutUser_user_block_blocked_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blockUpdateWithoutUser_user_block_user_idTouserInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_user_block_blocked_user_idTouser?: userUpdateOneRequiredWithoutUser_block_user_block_blocked_user_idTouserNestedInput
  }

  export type user_blockUncheckedUpdateWithoutUser_user_block_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    blocked_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blockUncheckedUpdateManyWithoutUser_user_block_user_idTouserInput = {
    id?: IntFieldUpdateOperationsInput | number
    blocked_user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}